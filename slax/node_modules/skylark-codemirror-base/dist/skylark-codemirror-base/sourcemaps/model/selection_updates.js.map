{"version":3,"sources":["model/selection_updates.js"],"names":["define","operation_group","scrolling","m_pos","utils_line","m_event","misc","m_history","m_selection","extendRange","range","head","other","extend","anchor","posBefore","cmp","Range","setSelection","doc","sel","options","setSelectionNoUndo","addSelectionToHistory","cm","curOp","id","NaN","hasHandler","obj","ranges","update","this","i","length","clipPos","origin","signal","normalizeSelection","filterSelectionChange","setSelectionInner","skipAtomicInSelection","bias","primary","scroll","ensureCursorVisible","equals","updateInput","selectionChanged","signalCursorActivity","signalLater","mayClear","out","old","newAnchor","skipAtomic","newHead","slice","primIndex","skipAtomicInner","pos","oldPos","dir","line","getLine","markedSpans","sp","m","marker","from","inclusiveLeft","ch","to","inclusiveRight","explicitlyCleared","atomic","diff","near","find","movePos","far","found","cantEdit","Pos","first","text","size","extendSelection","display","shift","Selection","extendSelections","heads","replaceOneSelection","setSimpleSelection","simpleSelection","setSelectionReplaceHistory","done","history","last","lst","reCheckSelection","selectAll","firstLine","lastLine","sel_dontScroll"],"mappings":"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","file":"../../model/selection_updates.js","sourcesContent":["define([\n    '../util/operation_group',\n    '../display/scrolling',\n    '../line/pos',\n    '../line/utils_line',\n    '../util/event',\n    '../util/misc',\n    './history',\n    './selection'\n], function (operation_group, scrolling, m_pos, utils_line, m_event, misc, m_history, m_selection) {\n    'use strict';\n    function extendRange(range, head, other, extend) {\n        if (extend) {\n            let anchor = range.anchor;\n            if (other) {\n                let posBefore = m_pos.cmp(head, anchor) < 0;\n                if (posBefore != m_pos.cmp(other, anchor) < 0) {\n                    anchor = head;\n                    head = other;\n                } else if (posBefore != m_pos.cmp(head, other) < 0) {\n                    head = other;\n                }\n            }\n            return new m_selection.Range(anchor, head);\n        } else {\n            return new m_selection.Range(other || head, head);\n        }\n    }\n    function extendSelection(doc, head, other, options, extend) {\n        if (extend == null)\n            extend = doc.cm && (doc.cm.display.shift || doc.extend);\n        setSelection(doc, new m_selection.Selection([extendRange(doc.sel.primary(), head, other, extend)], 0), options);\n    }\n    function extendSelections(doc, heads, options) {\n        let out = [];\n        let extend = doc.cm && (doc.cm.display.shift || doc.extend);\n        for (let i = 0; i < doc.sel.ranges.length; i++)\n            out[i] = extendRange(doc.sel.ranges[i], heads[i], null, extend);\n        let newSel = m_selection.normalizeSelection(doc.cm, out, doc.sel.primIndex);\n        setSelection(doc, newSel, options);\n    }\n    function replaceOneSelection(doc, i, range, options) {\n        let ranges = doc.sel.ranges.slice(0);\n        ranges[i] = range;\n        setSelection(doc, m_selection.normalizeSelection(doc.cm, ranges, doc.sel.primIndex), options);\n    }\n    function setSimpleSelection(doc, anchor, head, options) {\n        setSelection(doc, m_selection.simpleSelection(anchor, head), options);\n    }\n    function filterSelectionChange(doc, sel, options) {\n        let obj = {\n            ranges: sel.ranges,\n            update: function (ranges) {\n                this.ranges = [];\n                for (let i = 0; i < ranges.length; i++)\n                    this.ranges[i] = new m_selection.Range(m_pos.clipPos(doc, ranges[i].anchor), m_pos.clipPos(doc, ranges[i].head));\n            },\n            origin: options && options.origin\n        };\n        m_event.signal(doc, 'beforeSelectionChange', doc, obj);\n        if (doc.cm)\n            m_event.signal(doc.cm, 'beforeSelectionChange', doc.cm, obj);\n        if (obj.ranges != sel.ranges)\n            return m_selection.normalizeSelection(doc.cm, obj.ranges, obj.ranges.length - 1);\n        else\n            return sel;\n    }\n    function setSelectionReplaceHistory(doc, sel, options) {\n        let done = doc.history.done, last = misc.lst(done);\n        if (last && last.ranges) {\n            done[done.length - 1] = sel;\n            setSelectionNoUndo(doc, sel, options);\n        } else {\n            setSelection(doc, sel, options);\n        }\n    }\n    function setSelection(doc, sel, options) {\n        setSelectionNoUndo(doc, sel, options);\n        m_history.addSelectionToHistory(doc, doc.sel, doc.cm ? doc.cm.curOp.id : NaN, options);\n    }\n    function setSelectionNoUndo(doc, sel, options) {\n        if (m_event.hasHandler(doc, 'beforeSelectionChange') || doc.cm && m_event.hasHandler(doc.cm, 'beforeSelectionChange'))\n            sel = filterSelectionChange(doc, sel, options);\n        let bias = options && options.bias || (m_pos.cmp(sel.primary().head, doc.sel.primary().head) < 0 ? -1 : 1);\n        setSelectionInner(doc, skipAtomicInSelection(doc, sel, bias, true));\n        if (!(options && options.scroll === false) && doc.cm)\n            scrolling.ensureCursorVisible(doc.cm);\n    }\n    function setSelectionInner(doc, sel) {\n        if (sel.equals(doc.sel))\n            return;\n        doc.sel = sel;\n        if (doc.cm) {\n            doc.cm.curOp.updateInput = 1;\n            doc.cm.curOp.selectionChanged = true;\n            m_event.signalCursorActivity(doc.cm);\n        }\n        operation_group.signalLater(doc, 'cursorActivity', doc);\n    }\n    function reCheckSelection(doc) {\n        setSelectionInner(doc, skipAtomicInSelection(doc, doc.sel, null, false));\n    }\n    function skipAtomicInSelection(doc, sel, bias, mayClear) {\n        let out;\n        for (let i = 0; i < sel.ranges.length; i++) {\n            let range = sel.ranges[i];\n            let old = sel.ranges.length == doc.sel.ranges.length && doc.sel.ranges[i];\n            let newAnchor = skipAtomic(doc, range.anchor, old && old.anchor, bias, mayClear);\n            let newHead = skipAtomic(doc, range.head, old && old.head, bias, mayClear);\n            if (out || newAnchor != range.anchor || newHead != range.head) {\n                if (!out)\n                    out = sel.ranges.slice(0, i);\n                out[i] = new m_selection.Range(newAnchor, newHead);\n            }\n        }\n        return out ? m_selection.normalizeSelection(doc.cm, out, sel.primIndex) : sel;\n    }\n    function skipAtomicInner(doc, pos, oldPos, dir, mayClear) {\n        let line = utils_line.getLine(doc, pos.line);\n        if (line.markedSpans)\n            for (let i = 0; i < line.markedSpans.length; ++i) {\n                let sp = line.markedSpans[i], m = sp.marker;\n                if ((sp.from == null || (m.inclusiveLeft ? sp.from <= pos.ch : sp.from < pos.ch)) && (sp.to == null || (m.inclusiveRight ? sp.to >= pos.ch : sp.to > pos.ch))) {\n                    if (mayClear) {\n                        m_event.signal(m, 'beforeCursorEnter');\n                        if (m.explicitlyCleared) {\n                            if (!line.markedSpans)\n                                break;\n                            else {\n                                --i;\n                                continue;\n                            }\n                        }\n                    }\n                    if (!m.atomic)\n                        continue;\n                    if (oldPos) {\n                        let near = m.find(dir < 0 ? 1 : -1), diff;\n                        if (dir < 0 ? m.inclusiveRight : m.inclusiveLeft)\n                            near = movePos(doc, near, -dir, near && near.line == pos.line ? line : null);\n                        if (near && near.line == pos.line && (diff = m_pos.cmp(near, oldPos)) && (dir < 0 ? diff < 0 : diff > 0))\n                            return skipAtomicInner(doc, near, pos, dir, mayClear);\n                    }\n                    let far = m.find(dir < 0 ? -1 : 1);\n                    if (dir < 0 ? m.inclusiveLeft : m.inclusiveRight)\n                        far = movePos(doc, far, dir, far.line == pos.line ? line : null);\n                    return far ? skipAtomicInner(doc, far, pos, dir, mayClear) : null;\n                }\n            }\n        return pos;\n    }\n    function skipAtomic(doc, pos, oldPos, bias, mayClear) {\n        let dir = bias || 1;\n        let found = skipAtomicInner(doc, pos, oldPos, dir, mayClear) || !mayClear && skipAtomicInner(doc, pos, oldPos, dir, true) || skipAtomicInner(doc, pos, oldPos, -dir, mayClear) || !mayClear && skipAtomicInner(doc, pos, oldPos, -dir, true);\n        if (!found) {\n            doc.cantEdit = true;\n            return m_pos.Pos(doc.first, 0);\n        }\n        return found;\n    }\n    function movePos(doc, pos, dir, line) {\n        if (dir < 0 && pos.ch == 0) {\n            if (pos.line > doc.first)\n                return m_pos.clipPos(doc, m_pos.Pos(pos.line - 1));\n            else\n                return null;\n        } else if (dir > 0 && pos.ch == (line || utils_line.getLine(doc, pos.line)).text.length) {\n            if (pos.line < doc.first + doc.size - 1)\n                return m_pos.Pos(pos.line + 1, 0);\n            else\n                return null;\n        } else {\n            return new m_pos.Pos(pos.line, pos.ch + dir);\n        }\n    }\n    function selectAll(cm) {\n        cm.setSelection(m_pos.Pos(cm.firstLine(), 0), m_pos.Pos(cm.lastLine()), misc.sel_dontScroll);\n    }\n    return {\n        extendRange: extendRange,\n        extendSelection: extendSelection,\n        extendSelections: extendSelections,\n        replaceOneSelection: replaceOneSelection,\n        setSimpleSelection: setSimpleSelection,\n        setSelectionReplaceHistory: setSelectionReplaceHistory,\n        setSelection: setSelection,\n        setSelectionNoUndo: setSelectionNoUndo,\n        reCheckSelection: reCheckSelection,\n        skipAtomic: skipAtomic,\n        selectAll: selectAll\n    };\n});"]}