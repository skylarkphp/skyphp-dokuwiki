{"version":3,"sources":["isEventKey.js"],"names":["define","types","keyboard","aliases","codes","names","isEventKey","event","nameOrCode","keyCode","which","charCode","undefined","isString","foundNamedKey","toLowerCase","isNumber"],"mappings":";;;;;;;AAAAA,QACE,sBACA,aACA,YACA,UACA,WACA,SAASC,EAAMC,EAASC,EAAQC,EAAMC,GA8BtC,OAAOH,EAASI,WApBf,SAAoBC,EAAOC,GACxB,IAAIC,EAAUF,EAAMG,OAASH,EAAME,SAAWF,EAAMI,SACpD,GAAgB,OAAZF,QAAgCG,IAAZH,EACtB,OAAO,EAGT,GAAIR,EAAMY,SAASL,GAAa,CAE9B,IAIIM,EAHJ,GADIA,EAAgBV,EAAMI,EAAWO,eAChB,OAAOD,IAAkBL,EAI9C,GADIK,EAAgBX,EAAQK,EAAWO,eAClB,OAAOD,IAAkBL,OACzC,GAAIR,EAAMe,SAASR,GACxB,OAAOA,IAAeC,EAExB,OAAO","file":"../isEventKey.js","sourcesContent":["define([\r\n  \"skylark-langx-types\",\r\n  \"./keyboard\",\r\n  \"./aliases\",\r\n  \"./codes\",\r\n  \"./names\"\r\n],function(types,keyboard,aliases,codes,names){\r\n\r\n  /**\r\n   * Compares a keyboard event with a given keyCode or keyName.\r\n   *\r\n   * @param {Event} event Keyboard event that should be tested\r\n   * @param {Mixed} keyCode {Number} or keyName {String}\r\n   * @return {Boolean}\r\n   * @api public\r\n   */\r\n   function isEventKey(event, nameOrCode) {\r\n      var keyCode = event.which || event.keyCode || event.charCode;\r\n      if (keyCode === null || keyCode === undefined) { \r\n        return false; \r\n      }\r\n\r\n      if (types.isString(nameOrCode)) {\r\n        // check codes\r\n        var foundNamedKey = codes[nameOrCode.toLowerCase()]\r\n        if (foundNamedKey) { return foundNamedKey === keyCode; }\r\n      \r\n        // check aliases\r\n        var foundNamedKey = aliases[nameOrCode.toLowerCase()]\r\n        if (foundNamedKey) { return foundNamedKey === keyCode; }\r\n      } else if (types.isNumber(nameOrCode)) {\r\n        return nameOrCode === keyCode;\r\n      }\r\n      return false;\r\n  }\r\n\r\n  return keyboard.isEventKey = isEventKey;\r\n\r\n});\r\n"]}