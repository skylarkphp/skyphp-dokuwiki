{"version":3,"sources":["orientation.js"],"names":["define","skylark","attach","isDeviceOrientationSupported","Promise","resolve","window","listener","e","alpha","isNaN","removeEventListener","addEventListener","setTimeout"],"mappings":";;;;;;;AAAAA,QACE,oBACA,SAASC,GAgCT,OAAOA,EAAQC,OAAO,uBACpBC,6BA1BD,WACC,OAAO,IAAIC,QAAQ,SAASC,GAC1B,GAAI,2BAA4BC,OAAQ,CACtC,IAAIC,EAAW,SAASC,GAClBA,GAAiB,OAAZA,EAAEC,QAAmBC,MAAMF,EAAEC,OACpCJ,GAAQ,GAGRA,GAAQ,GAGVC,OAAOK,oBAAoB,oBAAqBJ,IAGlDD,OAAOM,iBAAiB,oBAAqBL,GAAU,GAGvDM,WAAWN,EAAU,UAGrBF,GAAQ","file":"../orientation.js","sourcesContent":["define([\r\n  \"skylark-langx-ns\"\r\n],function(skylark){\r\n\r\n  /**\r\n   * @summary Detects if device orientation is supported\r\n   * @description We can only be sure device orientation is supported once received an event with coherent data\r\n   * @returns {Promise<boolean>}\r\n   */\r\n   function isDeviceOrientationSupported() {\r\n    return new Promise(function(resolve) {\r\n      if ('DeviceOrientationEvent' in window) {\r\n        var listener = function(e) {\r\n          if (e && e.alpha !== null && !isNaN(e.alpha)) {\r\n            resolve(true);\r\n          }\r\n          else {\r\n            resolve(false);\r\n          }\r\n\r\n          window.removeEventListener('deviceorientation', listener);\r\n        };\r\n\r\n        window.addEventListener('deviceorientation', listener, false);\r\n\r\n        // after 2 secs, auto-reject the promise\r\n        setTimeout(listener, 2000);\r\n      }\r\n      else {\r\n        resolve(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  return skylark.attach(\"devices.orientation\",{\r\n    isDeviceOrientationSupported\r\n  });\r\n\t\r\n});"]}