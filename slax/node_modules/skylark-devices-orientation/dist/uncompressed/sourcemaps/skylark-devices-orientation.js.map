{"version":3,"sources":["skylark-devices-orientation.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"../skylark-devices-orientation.js","sourcesContent":["define('skylark-devices-orientation/orientation',[\r\n  \"skylark-langx-ns\"\r\n],function(skylark){\r\n\r\n  /**\r\n   * @summary Detects if device orientation is supported\r\n   * @description We can only be sure device orientation is supported once received an event with coherent data\r\n   * @returns {Promise<boolean>}\r\n   */\r\n   function isDeviceOrientationSupported() {\r\n    return new Promise(function(resolve) {\r\n      if ('DeviceOrientationEvent' in window) {\r\n        var listener = function(e) {\r\n          if (e && e.alpha !== null && !isNaN(e.alpha)) {\r\n            resolve(true);\r\n          }\r\n          else {\r\n            resolve(false);\r\n          }\r\n\r\n          window.removeEventListener('deviceorientation', listener);\r\n        };\r\n\r\n        window.addEventListener('deviceorientation', listener, false);\r\n\r\n        // after 2 secs, auto-reject the promise\r\n        setTimeout(listener, 2000);\r\n      }\r\n      else {\r\n        resolve(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  return skylark.attach(\"devices.orientation\",{\r\n    isDeviceOrientationSupported\r\n  });\r\n\t\r\n});\ndefine('skylark-devices-orientation/main',[\"./orientation\"],function(orientation){\r\n\treturn orientation;\r\n});\ndefine('skylark-devices-orientation', ['skylark-devices-orientation/main'], function (main) { return main; });\n\n"]}