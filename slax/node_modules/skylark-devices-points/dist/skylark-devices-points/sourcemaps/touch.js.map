{"version":3,"sources":["touch.js"],"names":["define","points","touch","isTouchEnabled","Promise","resolve","listener","e","window","removeEventListener","addEventListener","setTimeout","mousy","elm","touchToMouse","event","touches","length","changedTouches","type","simulatedEvent","document","createEvent","initMouseEvent","screenX","screenY","clientX","clientY","target","dispatchEvent","preventDefault"],"mappings":";;;;;;;AAAAA,QACC,YACC,SAASC,GAiET,OAAOA,EAAOC,OACbC,eA5DA,WACC,OAAO,IAAIC,QAAQ,SAASC,GAC1B,IAAIC,EAAW,SAASC,GAEpBF,IADEE,GAOJC,OAAOC,oBAAoB,aAAcH,IAG3CE,OAAOE,iBAAiB,aAAcJ,GAAU,GAGhDK,WAAWL,EAAU,QA6CvBM,MArCF,SAAeC,GACb,IAAIC,EAAe,SAASC,GACxB,KAAIA,EAAMC,QAAQC,OAAS,GAA3B,CACA,IAAIf,EAAQa,EAAMG,eAAe,GAC7BC,EAAO,GAEX,OAAQJ,EAAMI,MACd,IAAK,aACDA,EAAO,YAAa,MACxB,IAAK,YACDA,EAAK,YAAe,MACxB,IAAK,WACDA,EAAK,UAAe,MACxB,QACI,OAIJ,IAAIC,EAAiBC,SAASC,YAAY,cAC1CF,EAAeG,eAAeJ,GAAM,GAAM,EAAMX,OAAQ,EAChDN,EAAMsB,QAAStB,EAAMuB,QACrBvB,EAAMwB,QAASxB,EAAMyB,SAAS,GAC9B,GAAO,GAAO,EAAO,EAAG,MAEhCzB,EAAM0B,OAAOC,cAAcT,GAC3BL,EAAMe,oBAGVjB,EAAMA,GAAOQ,UAETX,iBAAiB,aAAaI,GAAa,GAC/CD,EAAIH,iBAAiB,YAAYI,GAAa,GAC9CD,EAAIH,iBAAiB,WAAWI,GAAa","file":"../touch.js","sourcesContent":["define([\r\n\t\"./points\"\r\n],function(points){\r\n\r\n  /**\r\n   * @summary Detects if the user is using a touch screen\r\n   * @returns {Promise<boolean>}\r\n   */\r\n   function isTouchEnabled () {\r\n    return new Promise(function(resolve) {\r\n      var listener = function(e) {\r\n        if (e) {\r\n          resolve(true);\r\n        }\r\n        else {\r\n          resolve(false);\r\n        }\r\n\r\n        window.removeEventListener('touchstart', listener);\r\n      };\r\n\r\n      window.addEventListener('touchstart', listener, false);\r\n\r\n      // after 10 secs auto-reject the promise\r\n      setTimeout(listener, 10000);\r\n    });\r\n  };\r\n\r\n\r\n  /*\r\n   * Converts single-touch event to mouse event.\r\n   */\r\n  function mousy(elm) {\r\n    var touchToMouse = function(event) {\r\n        if (event.touches.length > 1) return; //allow default multi-touch gestures to work\r\n        var touch = event.changedTouches[0];\r\n        var type = \"\";\r\n        \r\n        switch (event.type) {\r\n        case \"touchstart\": \r\n            type = \"mousedown\"; break;\r\n        case \"touchmove\":  \r\n            type=\"mousemove\";   break;\r\n        case \"touchend\":   \r\n            type=\"mouseup\";     break;\r\n        default: \r\n            return;\r\n        }\r\n        \r\n        // https://developer.mozilla.org/en/DOM/event.initMouseEvent for API\r\n        var simulatedEvent = document.createEvent(\"MouseEvent\");\r\n        simulatedEvent.initMouseEvent(type, true, true, window, 1, \r\n                touch.screenX, touch.screenY, \r\n                touch.clientX, touch.clientY, false, \r\n                false, false, false, 0, null);\r\n        \r\n        touch.target.dispatchEvent(simulatedEvent);\r\n        event.preventDefault();\r\n    };\r\n\r\n    elm = elm || document;\r\n\r\n    elm.addEventListener(\"touchstart\",touchToMouse,true);\r\n    elm.addEventListener(\"touchmove\",touchToMouse,true);\r\n    elm.addEventListener(\"touchend\",touchToMouse,true);\r\n  }\r\n\r\n  return points.touch = {\r\n  \tisTouchEnabled,\r\n    mousy\r\n  };\r\n\t\r\n});"]}