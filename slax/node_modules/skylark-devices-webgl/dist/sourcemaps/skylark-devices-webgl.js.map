{"version":3,"sources":["skylark-devices-webgl.js"],"names":["define","skylark","getWebGLCtx","canvas","document","createElement","context","getContext","some","name","getParameter","e","attach","isWebGLSupported","window","WebGLRenderingContext","getMaxTextureWidth","ctx","MAX_TEXTURE_SIZE","webgl","main"],"mappings":";;;;;;;g4BAAAA,EAAA,+BACA,oBACA,SAAAC,GAMA,SAAAC,IACA,IAAAC,EAAAC,SAAAC,cAAA,UAEAC,EAAA,KAEA,OAAAH,EAAAI,aAHA,QAAA,qBAAA,YAAA,aAOAC,KAAA,SAAAC,GACA,IAEA,OADAH,EAAAH,EAAAI,WAAAE,KACA,mBAAAH,EAAAI,aACA,MAAAC,GACA,OAAA,KAGAL,EAXA,KAyCA,OAAAL,EAAAW,OAAA,iBACAV,YAAAA,EACAW,iBArBA,WACA,QAAAC,OAAAC,uBAAA,OAAAb,KAqBAc,mBAbA,WACA,IAAAC,EAAAf,IACA,OAAA,OAAAe,EACAA,EAAAP,aAAAO,EAAAC,kBAGA,OAWAlB,EAAA,8BACA,WACA,SAAAmB,GACA,OAAAA,IAEAnB,EAAA,yBAAA,8BAAA,SAAAoB,GAAA,OAAAA","file":"../skylark-devices-webgl.js","sourcesContent":["define('skylark-devices-webgl/webgl',[\r\n\t\"skylark-langx-ns\"\r\n],function(skylark){\r\n\r\n  /**\r\n   * @summary Tries to return a canvas webgl context\r\n   * @returns {WebGLRenderingContext}\r\n   */\r\n  function getWebGLCtx() {\r\n    var canvas = document.createElement('canvas');\r\n    var names = ['webgl', 'experimental-webgl', 'moz-webgl', 'webkit-3d'];\r\n    var context = null;\r\n\r\n    if (!canvas.getContext) {\r\n      return null;\r\n    }\r\n\r\n    if (names.some(function(name) {\r\n        try {\r\n          context = canvas.getContext(name);\r\n          return (context && typeof context.getParameter === 'function');\r\n        } catch (e) {\r\n          return false;\r\n        }\r\n      })) {\r\n      return context;\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Detects if WebGL is supported\r\n   * @returns {boolean}\r\n   */\r\n  function isWebGLSupported() {\r\n    return !!window.WebGLRenderingContext && getWebGLCtx() !== null;\r\n  };\r\n\r\n\r\n  /**\r\n   * @summary Gets max texture width in WebGL context\r\n   * @returns {int}\r\n   */\r\n   function getMaxTextureWidth() {\r\n    var ctx = getWebGLCtx();\r\n    if (ctx !== null) {\r\n      return ctx.getParameter(ctx.MAX_TEXTURE_SIZE);  \r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  return skylark.attach(\"devices.webgl\",{\r\n  \tgetWebGLCtx,\r\n  \tisWebGLSupported,\r\n  \tgetMaxTextureWidth\r\n  })\r\n\t\r\n});\ndefine('skylark-devices-webgl/main',[\r\n\t\"./webgl\"\r\n],function(webgl){\r\n\treturn webgl;\r\n});\ndefine('skylark-devices-webgl', ['skylark-devices-webgl/main'], function (main) { return main; });\n\n"]}