{"version":3,"sources":["animation.js"],"names":["define","langx","browser","noder","geom","styler","eventer","animates","animationName","animationDuration","animationTiming","animationDelay","animationEnd","cssReset","animation","elm","name","duration","ease","callback","delay","cssValues","isPlainObject","easing","complete","isString","speeds","undefined","normal","isFunction","eace","on","clientLeft","css","this"],"mappings":";;;;;;;AAAAA,QACI,sBACA,uBACA,qBACA,oBACA,sBACA,uBACA,cACD,SAASC,EAAOC,EAASC,EAAOC,EAAMC,EAAQC,EAAQC,GAErD,IAAIC,EAAgBD,EAASC,cACzBC,EAAoBF,EAASE,kBAC7BC,EAAkBH,EAASG,gBAC3BC,EAAiBJ,EAASI,eAE1BC,EAAeL,EAASK,aAExBC,KAgEJ,OA7DAA,EAASL,GACLK,EAASJ,GACTI,EAASF,GACTE,EAASH,GAAmB,GA0DzBH,EAASO,UA/ChB,SAAmBC,EAAKC,EAAMC,EAAUC,EAAMC,EAAUC,GACpD,IAAIC,KA2CJ,OA1CIpB,EAAMqB,cAAcL,KACpBC,EAAOD,EAASM,OAChBJ,EAAWF,EAASO,SACpBJ,EAAQH,EAASG,MACjBH,EAAWA,EAASA,UAGpBhB,EAAMwB,SAASR,KACfA,EAAWV,EAASmB,OAAOT,SAEdU,IAAbV,IACAA,EAAWV,EAASmB,OAAOE,QAE/BX,GAAsB,IAElBhB,EAAM4B,WAAWX,IACjBC,EAAWD,EACXY,KAAO,SAEPZ,EAAOA,GAAQ,QAGfE,EACAA,GAAgB,IAEhBA,EAAQ,EAGZC,EAAUb,GAAiBQ,EAC3BK,EAAUZ,GAAqBQ,EAAW,IAC1CI,EAAUX,GAAmBQ,EAGzBD,EAAW,GACXX,EAAQyB,GAAGhB,EAAKH,EAAcO,GAIlCJ,EAAIiB,WAEJ3B,EAAO4B,IAAIlB,EAAKM,GAETa","file":"../animation.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\",\r\n    \"./animates\"\r\n], function(langx, browser, noder, geom, styler, eventer,animates) {\r\n\r\n    var animationName = animates.animationName,\r\n        animationDuration = animates.animationDuration,\r\n        animationTiming = animates.animationTiming,\r\n        animationDelay = animates.animationDelay,\r\n\r\n        animationEnd = animates.animationEnd,\r\n\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName] =\r\n        cssReset[animationDuration] =\r\n        cssReset[animationDelay] =\r\n        cssReset[animationTiming] = \"\";\r\n\r\n    /*   \r\n     * Perform a custom animation.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animation(elm, name, duration, ease, callback, delay) {\r\n        var cssValues = {};\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = animates.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = animates.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n        // keyframe animation\r\n        cssValues[animationName] = name;\r\n        cssValues[animationDuration] = duration + \"s\";\r\n        cssValues[animationTiming] = ease;\r\n\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, animationEnd, callback);\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        return this;\r\n    }\r\n\r\n    return animates.animation = animation;\r\n\r\n});"]}