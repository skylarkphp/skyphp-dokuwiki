{"version":3,"sources":["skylark-domx-browser.js"],"names":["define","skylark","langx","browser","hoster","mixin","isIE","exec","window","navigator","userAgent","location","support","attach","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3EventPrefix","cssStyles","cssProps","vendorPrefixesRE","document","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","style","name","matched","match","RegExp","toLowerCase","lowerFirst","cssPropName","dasherize","undefined","css3","normalizeStyleProperty","normalizeCssProperty","normalizeCssEvent","propPrefix","end","cssPointerEvents","pointerEvents","cssText","FullscreenApi","prefixed","apiMap","specApi","browserApi","i","length","requestFullscreen","body","exitFullscreen","fullscreen","tocuh","DocumentTouch","main"],"mappings":"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","file":"../skylark-domx-browser.js","sourcesContent":["define('skylark-domx-browser/browser',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark,langx) {\r\n    \"use strict\";\r\n\r\n    var browser = langx.hoster.browser;\r\n\r\n\r\n    langx.mixin(browser, {\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n\r\n\r\n    return skylark.attach(\"domx.browser\",browser);\r\n});\r\n\ndefine('skylark-domx-browser/support/css3',[\r\n    \"skylark-langx/langx\",\r\n    \"../browser\"\r\n], function(langx,browser) {\r\n    \"use strict\";\r\n\r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n\r\n    var css3 = {\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector        \r\n    };\r\n\r\n    langx.mixin(browser,css3);\r\n\r\n    browser.css3PropPrefix = css3.propPrefix =  css3PropPrefix;\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = css3.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    browser.support.cssPointerEvents = css3.pointerEvents =  (function() {\r\n        testEl.style.cssText = 'pointer-events:auto';\r\n        return testEl.style.pointerEvents === 'auto';\r\n    })(),\r\n\r\n\r\n\r\n\r\n    testEl = null;\r\n\r\n    return browser.support.css3 = css3;\r\n});\r\n\ndefine('skylark-domx-browser/support/fullscreen',[\r\n\t\"../browser\"\r\n],function(browser){\r\n\r\n    const FullscreenApi = { \r\n    \tprefixed: true \r\n    };\r\n\r\n    const apiMap = [\r\n        [\r\n            'requestFullscreen',\r\n            'exitFullscreen',\r\n            'fullscreenElement',\r\n            'fullscreenEnabled',\r\n            'fullscreenchange',\r\n            'fullscreenerror',\r\n            'fullscreen'\r\n        ],\r\n        [\r\n            'webkitRequestFullscreen',\r\n            'webkitExitFullscreen',\r\n            'webkitFullscreenElement',\r\n            'webkitFullscreenEnabled',\r\n            'webkitfullscreenchange',\r\n            'webkitfullscreenerror',\r\n            '-webkit-full-screen'\r\n        ],\r\n        [\r\n            'mozRequestFullScreen',\r\n            'mozCancelFullScreen',\r\n            'mozFullScreenElement',\r\n            'mozFullScreenEnabled',\r\n            'mozfullscreenchange',\r\n            'mozfullscreenerror',\r\n            '-moz-full-screen'\r\n        ],\r\n        [\r\n            'msRequestFullscreen',\r\n            'msExitFullscreen',\r\n            'msFullscreenElement',\r\n            'msFullscreenEnabled',\r\n            'MSFullscreenChange',\r\n            'MSFullscreenError',\r\n            '-ms-fullscreen'\r\n        ]\r\n    ];\r\n    const specApi = apiMap[0];\r\n    let browserApi;\r\n    for (let i = 0; i < apiMap.length; i++) {\r\n        if (apiMap[i][1] in document) {\r\n            browserApi = apiMap[i];\r\n            break;\r\n        }\r\n    }\r\n    if (browserApi) {\r\n        for (let i = 0; i < browserApi.length; i++) {\r\n            FullscreenApi[specApi[i]] = browserApi[i];\r\n        }\r\n        FullscreenApi.prefixed = browserApi[0] !== specApi[0];\r\n\r\n        browser.requestFullscreen = document.body[FullscreenApi[\"requestFullscreen\"]];\r\n        browser.exitFullscreen = document[FullscreenApi[\"exitFullscreen\"]];\r\n\r\n        browser.support.fullscreen = FullscreenApi;\r\n    } else {\r\n\t    browser.support.fullscreen = null;\r\n    }\r\n\r\n    return browser.support.fullscreen;\r\n});\ndefine('skylark-domx-browser/support/touch',[\r\n\t\"../browser\"\r\n],function(browser){\r\n\r\n    function supportTouch() {\r\n        return !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch);\r\n    }\r\n\r\n    return browser.support.tocuh = supportTouch();\r\n});\ndefine('skylark-domx-browser/main',[\r\n\t\"./browser\",\r\n\t\"./support/css3\",\r\n\t\"./support/fullscreen\",\r\n\t\"./support/touch\"\r\n],function(browser){\r\n\treturn browser;\r\n});\ndefine('skylark-domx-browser', ['skylark-domx-browser/main'], function (main) { return main; });\n\n"]}