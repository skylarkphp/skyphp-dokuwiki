{"version":3,"sources":["undo-manager.js"],"names":["define","langx","$","contents","UndoManager","Evented","inherit","init","editable","opts","redoShortcut","undoShortcut","_this","this","extend","_stack","util","os","mac","win","hotkeys","add","e","preventDefault","undo","redo","throttledPushState","throttle","_pushUndoState","on","src","resetCaretPosition","update","length","pluginName","prototype","_index","_capacity","_startPosition","_endPosition","startPosition","selection","_range","_getPosition","endPosition","range","collapsed","trigger","caretPosition","start","push","html","body","caret","shift","currentState","state","get","innerHTML","find","removeClass","sync","_getNodeOffset","node","index","$parent","merging","offset","isNumber","parent","each","i","child","nodeType","Node","TEXT_NODE","nodeValue","type","$nodes","nodes","position","prevNode","first","previousSibling","getNodeLength","unshift","_getNodeByPosition","childNodes","k","len","ref","slice","is","document","createTextNode","appendChild","endContainer","endOffset","startContainer","startOffset","end","createRange","setStart","setEnd","console","warn","inputManager","focused"],"mappings":"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","file":"../undo-manager.js","sourcesContent":["define([\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"./contents\"\r\n],function(langx,$,contents){ \r\n\r\n  var UndoManager = langx.Evented.inherit({\r\n    init : function(editable,opts) {\r\n      this.editable = editable;\r\n      this.opts = langx.extend({}, this.opts, opts);\r\n\r\n      var redoShortcut, undoShortcut;\r\n      this._stack = [];\r\n      if (this.editable.util.os.mac) {\r\n        undoShortcut = 'cmd+z';\r\n        redoShortcut = 'shift+cmd+z';\r\n      } else if (this.editable.util.os.win) {\r\n        undoShortcut = 'ctrl+z';\r\n        redoShortcut = 'ctrl+y';\r\n      } else {\r\n        undoShortcut = 'ctrl+z';\r\n        redoShortcut = 'shift+ctrl+z';\r\n      }\r\n      this.editable.hotkeys.add(undoShortcut, (function(_this) {\r\n        return function(e) {\r\n          e.preventDefault();\r\n          _this.undo();\r\n          return false;\r\n        };\r\n      })(this));\r\n      this.editable.hotkeys.add(redoShortcut, (function(_this) {\r\n        return function(e) {\r\n          e.preventDefault();\r\n          _this.redo();\r\n          return false;\r\n        };\r\n      })(this));\r\n      this.throttledPushState = this.editable.util.throttle((function(_this) {\r\n        return function() {\r\n          return _this._pushUndoState();\r\n        };\r\n      })(this), 2000);\r\n      this.editable.on('valuechanged', (function(_this) {\r\n        return function(e, src) {\r\n          if (src === 'undo' || src === 'redo') {\r\n            return;\r\n          }\r\n          return _this.throttledPushState();\r\n        };\r\n      })(this));\r\n      this.editable.on('selectionchanged', (function(_this) {\r\n        return function(e) {\r\n          _this.resetCaretPosition();\r\n          return _this.update();\r\n        };\r\n      })(this));\r\n      this.editable.on('focus', (function(_this) {\r\n        return function(e) {\r\n          if (_this._stack.length === 0) {\r\n            return _this._pushUndoState();\r\n          }\r\n        };\r\n      })(this));\r\n      this.editable.on('blur', (function(_this) {\r\n        return function(e) {\r\n          return _this.resetCaretPosition();\r\n        };\r\n      })(this));\r\n    }\r\n\r\n  });\r\n\r\n  UndoManager.pluginName = 'UndoManager';\r\n\r\n  UndoManager.prototype._index = -1;\r\n\r\n  UndoManager.prototype._capacity = 20;\r\n\r\n  UndoManager.prototype._startPosition = null;\r\n\r\n  UndoManager.prototype._endPosition = null;\r\n\r\n  UndoManager.prototype.resetCaretPosition = function() {\r\n    this._startPosition = null;\r\n    return this._endPosition = null;\r\n  };\r\n\r\n  UndoManager.prototype.startPosition = function() {\r\n    if (this.editable.selection._range) {\r\n      this._startPosition || (this._startPosition = this._getPosition('start'));\r\n    }\r\n    return this._startPosition;\r\n  };\r\n\r\n  UndoManager.prototype.endPosition = function() {\r\n    if (this.editable.selection._range) {\r\n      this._endPosition || (this._endPosition = (function(_this) {\r\n        return function() {\r\n          var range;\r\n          range = _this.editable.selection.range();\r\n          if (range.collapsed) {\r\n            return _this._startPosition;\r\n          }\r\n          return _this._getPosition('end');\r\n        };\r\n      })(this)());\r\n    }\r\n    return this._endPosition;\r\n  };\r\n\r\n  UndoManager.prototype._pushUndoState = function() {\r\n    var caret;\r\n    if (this.editable.trigger('pushundostate') === false) {\r\n      return;\r\n    }\r\n    caret = this.caretPosition();\r\n    if (!caret.start) {\r\n      return;\r\n    }\r\n    this._index += 1;\r\n    this._stack.length = this._index;\r\n    this._stack.push({\r\n      html: this.editable.body.html(),\r\n      caret: this.caretPosition()\r\n    });\r\n    if (this._stack.length > this._capacity) {\r\n      this._stack.shift();\r\n      return this._index -= 1;\r\n    }\r\n  };\r\n\r\n  UndoManager.prototype.currentState = function() {\r\n    if (this._stack.length && this._index > -1) {\r\n      return this._stack[this._index];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  UndoManager.prototype.undo = function() {\r\n    var state;\r\n    if (this._index < 1 || this._stack.length < 2) {\r\n      return;\r\n    }\r\n    //this.editable.hidePopover();\r\n    this._index -= 1;\r\n    state = this._stack[this._index];\r\n    this.editable.body.get(0).innerHTML = state.html;\r\n    this.caretPosition(state.caret);\r\n    this.editable.body.find('.selected').removeClass('selected');\r\n    this.editable.sync();\r\n    return this.editable.trigger('valuechanged', ['undo']);\r\n  };\r\n\r\n  UndoManager.prototype.redo = function() {\r\n    var state;\r\n    if (this._index < 0 || this._stack.length < this._index + 2) {\r\n      return;\r\n    }\r\n    //this.editable.hidePopover();\r\n    this._index += 1;\r\n    state = this._stack[this._index];\r\n    this.editable.body.get(0).innerHTML = state.html;\r\n    this.caretPosition(state.caret);\r\n    this.editable.body.find('.selected').removeClass('selected');\r\n    this.editable.sync();\r\n    return this.editable.trigger('valuechanged', ['redo']);\r\n  };\r\n\r\n  UndoManager.prototype.update = function() {\r\n    var currentState;\r\n    currentState = this.currentState();\r\n    if (!currentState) {\r\n      return;\r\n    }\r\n    currentState.html = this.editable.body.html();\r\n    return currentState.caret = this.caretPosition();\r\n  };\r\n\r\n  UndoManager.prototype._getNodeOffset = function(node, index) {\r\n    var $parent, merging, offset;\r\n    if (langx.isNumber(index)) {\r\n      $parent = $(node);\r\n    } else {\r\n      $parent = $(node).parent();\r\n    }\r\n    offset = 0;\r\n    merging = false;\r\n    $parent.contents().each(function(i, child) {\r\n      if (node === child || (index === i && i === 0)) {\r\n        return false;\r\n      }\r\n      if (child.nodeType === Node.TEXT_NODE) {\r\n        if (!merging && child.nodeValue.length > 0) {\r\n          offset += 1;\r\n          merging = true;\r\n        }\r\n      } else {\r\n        offset += 1;\r\n        merging = false;\r\n      }\r\n      if (index - 1 === i) {\r\n        return false;\r\n      }\r\n      return null;\r\n    });\r\n    return offset;\r\n  };\r\n\r\n  UndoManager.prototype._getPosition = function(type) {\r\n    var $nodes, node, nodes, offset, position, prevNode, range;\r\n    if (type == null) {\r\n      type = 'start';\r\n    }\r\n    range = this.editable.selection.range();\r\n    offset = range[type + \"Offset\"];\r\n    $nodes = this.editable.selection[type + \"Nodes\"]();\r\n    node = $nodes.first()[0];\r\n    if (node.nodeType === Node.TEXT_NODE) {\r\n      prevNode = node.previousSibling;\r\n      while (prevNode && prevNode.nodeType === Node.TEXT_NODE) {\r\n        node = prevNode;\r\n        offset += this.editable.util.getNodeLength(prevNode);\r\n        prevNode = prevNode.previousSibling;\r\n      }\r\n      nodes = $nodes.get();\r\n      nodes[0] = node;\r\n      $nodes = $(nodes);\r\n    } else {\r\n      offset = this._getNodeOffset(node, offset);\r\n    }\r\n    position = [offset];\r\n    $nodes.each((function(_this) {\r\n      return function(i, node) {\r\n        return position.unshift(_this._getNodeOffset(node));\r\n      };\r\n    })(this));\r\n    return position;\r\n  };\r\n\r\n  UndoManager.prototype._getNodeByPosition = function(position) {\r\n    var child, childNodes, i, k, len, node, offset, ref;\r\n    node = this.editable.body[0];\r\n    ref = position.slice(0, position.length - 1);\r\n    for (i = k = 0, len = ref.length; k < len; i = ++k) {\r\n      offset = ref[i];\r\n      childNodes = node.childNodes;\r\n      if (offset > childNodes.length - 1) {\r\n        if (i === position.length - 2 && $(node).is(':empty')) {\r\n          child = document.createTextNode('');\r\n          node.appendChild(child);\r\n          childNodes = node.childNodes;\r\n        } else {\r\n          node = null;\r\n          break;\r\n        }\r\n      }\r\n      node = childNodes[offset];\r\n    }\r\n    return node;\r\n  };\r\n\r\n  UndoManager.prototype.caretPosition = function(caret) {\r\n    var endContainer, endOffset, range, startContainer, startOffset;\r\n    if (!caret) {\r\n      range = this.editable.selection.range();\r\n      caret = this.editable.inputManager.focused && (range != null) ? {\r\n        start: this.startPosition(),\r\n        end: this.endPosition(),\r\n        collapsed: range.collapsed\r\n      } : {};\r\n      return caret;\r\n    } else {\r\n      if (!caret.start) {\r\n        return;\r\n      }\r\n      startContainer = this._getNodeByPosition(caret.start);\r\n      startOffset = caret.start[caret.start.length - 1];\r\n      if (caret.collapsed) {\r\n        endContainer = startContainer;\r\n        endOffset = startOffset;\r\n      } else {\r\n        endContainer = this._getNodeByPosition(caret.end);\r\n        endOffset = caret.start[caret.start.length - 1];\r\n      }\r\n      if (!startContainer || !endContainer) {\r\n        if (typeof console !== \"undefined\" && console !== null) {\r\n          if (typeof console.warn === \"function\") {\r\n            console.warn('simditor: invalid caret state');\r\n          }\r\n        }\r\n        return;\r\n      }\r\n      range = document.createRange();\r\n      range.setStart(startContainer, startOffset);\r\n      range.setEnd(endContainer, endOffset);\r\n      return this.editable.selection.range(range);\r\n    }\r\n  };\r\n\r\n  return contents.UndoManager = UndoManager;\r\n\r\n});"]}