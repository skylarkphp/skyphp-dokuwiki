{"version":3,"sources":["skylark-domx-contents.js"],"names":["define","skylark","langx","noder","datax","contents","attach","$","Hotkeys","Evented","inherit","count","keyNameMap","8","9","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","91","93","48","49","50","51","52","53","54","55","56","57","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","96","97","98","99","100","101","102","103","104","105","106","107","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","59","61","186","187","188","190","191","192","219","220","221","222","aliases","escape","delete","return","ctrl","space","ins","cmd","command","wins","windows","normalize","shortcut","i","j","key","keyname","keys","len","toLowerCase","replace","split","length","this","pop","sort","push","join","prototype","opts","el","document","init","_this","id","constructor","_map","_delegate","on","e","ref","_getHander","call","which","altKey","ctrlKey","metaKey","shiftKey","respondTo","subject","add","handler","remove","destroy","off","os","chrome","edge","firefox","ie","ref1","ref2","ref3","ref4","safari","ua","Util","editor","extend","browser","msie","version","phBr","pluginName","test","navigator","appVersion","mac","linux","win","unix","mobile","userAgent","match","webkit","mozilla","support","onselectionchange","_error","oninput","reflow","offsetHeight","isEmptyNode","node","$node","is","text","find","isDecoratedNode","classPrefix","blockNodes","isBlockNode","nodeType","RegExp","nodeName","getNodeLength","childNodes","dataURLtoBlob","dataURL","BlobBuilder","arrayBuffer","bb","byteString","hasArrayBufferViewSupport","hasBlobConstructor","intArray","k","mimeString","window","Blob","Boolean","Uint8Array","size","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","atob","ArrayBuffer","indexOf","decodeURIComponent","charCodeAt","type","append","getBlob","throttle","func","wait","args","ctx","last","rtn","throttled","timeoutID","Date","apply","delta","arguments","setTimeout","clear","clearTimeout","formatHTML","html","cursor","lastMatch","level","re","repeatString","result","str","n","Array","exec","inArray","isStartTag","isEndTag","index","substring","trim","InputManager","editable","selectAllKey","submitKey","throttledValueChanged","util","params","trigger","throttledSelectionChanged","triggerEvent","focused","clipboard","pasting","_selectionTimer","selection","_selection","rangeCount","$rootBlocks","lastCaretPosition","body","children","filter","save","formatter","format","restore","each","$el","formatted","parent","next","insertAfter","prev","insertBefore","proxy","_onKeyDown","_onKeyPress","_onKeyUp","_onMouseUp","_onFocus","_onBlur","_onDrop","_onInput","hotkeys","preventDefault","modify","$children","firstBlock","lastBlock","range","first","get","createRange","setStart","setEnd","closest","click","_modifierKeys","_arrowKeys","addClass","removeClass","$blockEl","getRangeAt","startContainer","undoManager","caretPosition","setRangeAtStartOf","console","log","sync","currentState","caret","keystroke","p","empty","appendTo","Selection","_range","_startNodes","_endNodes","_containerNode","_nodes","_blockNodes","_rootNodes","self","getSelection","reset","removeAllRanges","ffOrIE","addRange","hoster","inputManager","focus","startNodes","parentsUntil","unshift","endNodes","collapsed","endContainer","containerNode","commonAncestorContainer","nodes","$endNode","$nodes","endIndex","sharedIndex","startIndex","eq","merge","slice","uniq","rootNodes","$parent","rangeAtEndOf","afterLastNode","beforeLastNode","endNode","endNodeLength","lastNodeIsBr","endOffset","contains","addBack","$lastChild","beforeLastbr","isLastNode","nodeValue","rangeAtStartOf","startNode","startOffset","insertNode","setRangeAfter","setEndAfter","collapse","setRangeBefore","setEndBefore","setRangeAtEndOf","$lastNode","lastChild","lastChildLength","lastText","nodeLength","charAt","deleteRangeContents","atEndOfBody","atStartOfBody","endRange","startRange","cloneRange","deleteContents","breakBlockEl","setStartBefore","before","extractContents","endCaret","startCaret","_selectionSaved","UndoManager","redoShortcut","undoShortcut","_stack","undo","redo","throttledPushState","_pushUndoState","src","resetCaretPosition","update","_index","_capacity","_startPosition","_endPosition","startPosition","_getPosition","endPosition","start","shift","state","innerHTML","_getNodeOffset","merging","offset","isNumber","child","Node","TEXT_NODE","position","prevNode","previousSibling","_getNodeByPosition","createTextNode","appendChild","end","warn","Keystroke","_keystrokeHandlers","_initKeystrokeHandlers","base","ELEMENT_NODE","tagName","titleEnterHandler","$br","$p","$prevBlockEl","$rootBlock","cleanNode","$cloneNode","listEl","newBlockEl","newListEl","clone","nextAll","after","breakNode","$closestBlock","$childList","$newLi","$prevChildList","$prevNode","$textNode","isFF","$newNode","codeStr","$firstChild","unwrap","Formatter","allowedTags","allowedAttributes","allowedStyles","_allowedTags","_allowedAttributes","img","a","font","code","_allowedStyles","span","b","strong","strike","u","h1","h2","h3","h4","decorate","undecorate","autolink","$link","findLinkNode","lastIndex","linkNodes","replaceEls","subStr","uri","$parentNode","replaceWith","blockNode","l","len1","recursive","$blockEls","$childImg","$td","attr","isDecoration","textNode","blockEl","hasClass","makeArray","attributes","name","removeAttr","_cleanNodeStyles","style","color","fontSize","tr","pair","styleStr","styles","parseInt","Object","css","clearHtml","lineBreak","container","beautify","$contents","uselessP","Indentation","tabIndent","indentWidth","codeButton","toolbar","findButton","active","indent","isBackward","$blockNodes","include","splice","r","outdentBlock","indentBlock","$nextTd","$nextTr","$parentLi","$pre","$tr","marginLeft","indentText","Math","round","toString","selectNode","$prevTd","$prevTr","outdentText","max","Clipboard","pasteImage","cleanPaste","_pasteBin","_processPasteByClipboardApi","_getPasteContent","pasteContent","_processPasteContent","_pasteInBlockEl","_pastePlainText","imageFile","pasteItem","uploadOpt","originalEvent","clipboardData","items","getAsFile","triggerHandler","uploader","upload","callback","_cleanPasteFontSize","$img","blob","insertPosition","lastLine","len2","len3","len4","line","lines","m","o","q","location","origin","Image","onload","canvas","createElement","width","naturalWidth","height","naturalHeight","getContext","drawImage","toDataURL","sizeMap","map","Editable","textarea","pluginOpts","indentation","execCommand","setValue","val","getValue","cloneBody","emptyP","firstP","lastP","blur","isActive","queryCommandState","status","htmlTag","alignment","align","Error","text-align","blockquote","disableTag","$rootNodes","clearCache","nodeCache","blockCode","resultNodes","replaceAll","fontColor","hex","isDefault","coloredText","selectNodeContents","fontScale","param","x-large","large","small","x-small","$span","hr","$hr","$newBlock","inlineCode","$code","link","defaultLinkText","linkText","txtNode","href","target","list","$list","anotherType","li","outdent","title","forEach","main"],"mappings":"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","file":"../skylark-domx-contents.js","sourcesContent":["define('skylark-domx-contents/contents',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\"\r\n], function(skylark, langx, noder,datax) {\r\n    \"use strict\";\r\n\r\n    var contents = function() {\r\n        return contents;\r\n    };\r\n\r\n\r\n    return skylark.attach(\"domx.contents\",contents);\r\n\r\n});\ndefine('skylark-domx-contents/Hotkeys',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"./contents\"\r\n],function(langx,$,contents){ \r\n\r\n\r\n  var Hotkeys = langx.Evented.inherit({\r\n\r\n  });\r\n\r\n\r\n  Hotkeys.count = 0;\r\n\r\n  Hotkeys.keyNameMap = {\r\n    8: \"Backspace\",\r\n    9: \"Tab\",\r\n    13: \"Enter\",\r\n    16: \"Shift\",\r\n    17: \"Control\",\r\n    18: \"Alt\",\r\n    19: \"Pause\",\r\n    20: \"CapsLock\",\r\n    27: \"Esc\",\r\n    32: \"Spacebar\",\r\n    33: \"PageUp\",\r\n    34: \"PageDown\",\r\n    35: \"End\",\r\n    36: \"Home\",\r\n    37: \"Left\",\r\n    38: \"Up\",\r\n    39: \"Right\",\r\n    40: \"Down\",\r\n    45: \"Insert\",\r\n    46: \"Del\",\r\n    91: \"Meta\",\r\n    93: \"Meta\",\r\n    48: \"0\",\r\n    49: \"1\",\r\n    50: \"2\",\r\n    51: \"3\",\r\n    52: \"4\",\r\n    53: \"5\",\r\n    54: \"6\",\r\n    55: \"7\",\r\n    56: \"8\",\r\n    57: \"9\",\r\n    65: \"A\",\r\n    66: \"B\",\r\n    67: \"C\",\r\n    68: \"D\",\r\n    69: \"E\",\r\n    70: \"F\",\r\n    71: \"G\",\r\n    72: \"H\",\r\n    73: \"I\",\r\n    74: \"J\",\r\n    75: \"K\",\r\n    76: \"L\",\r\n    77: \"M\",\r\n    78: \"N\",\r\n    79: \"O\",\r\n    80: \"P\",\r\n    81: \"Q\",\r\n    82: \"R\",\r\n    83: \"S\",\r\n    84: \"T\",\r\n    85: \"U\",\r\n    86: \"V\",\r\n    87: \"W\",\r\n    88: \"X\",\r\n    89: \"Y\",\r\n    90: \"Z\",\r\n    96: \"0\",\r\n    97: \"1\",\r\n    98: \"2\",\r\n    99: \"3\",\r\n    100: \"4\",\r\n    101: \"5\",\r\n    102: \"6\",\r\n    103: \"7\",\r\n    104: \"8\",\r\n    105: \"9\",\r\n    106: \"Multiply\",\r\n    107: \"Add\",\r\n    109: \"Subtract\",\r\n    110: \"Decimal\",\r\n    111: \"Divide\",\r\n    112: \"F1\",\r\n    113: \"F2\",\r\n    114: \"F3\",\r\n    115: \"F4\",\r\n    116: \"F5\",\r\n    117: \"F6\",\r\n    118: \"F7\",\r\n    119: \"F8\",\r\n    120: \"F9\",\r\n    121: \"F10\",\r\n    122: \"F11\",\r\n    123: \"F12\",\r\n    124: \"F13\",\r\n    125: \"F14\",\r\n    126: \"F15\",\r\n    127: \"F16\",\r\n    128: \"F17\",\r\n    129: \"F18\",\r\n    130: \"F19\",\r\n    131: \"F20\",\r\n    132: \"F21\",\r\n    133: \"F22\",\r\n    134: \"F23\",\r\n    135: \"F24\",\r\n    59: \";\",\r\n    61: \"=\",\r\n    186: \";\",\r\n    187: \"=\",\r\n    188: \",\",\r\n    190: \".\",\r\n    191: \"/\",\r\n    192: \"`\",\r\n    219: \"[\",\r\n    220: \"\\\\\",\r\n    221: \"]\",\r\n    222: \"'\"\r\n  };\r\n\r\n  Hotkeys.aliases = {\r\n    \"escape\": \"esc\",\r\n    \"delete\": \"del\",\r\n    \"return\": \"enter\",\r\n    \"ctrl\": \"control\",\r\n    \"space\": \"spacebar\",\r\n    \"ins\": \"insert\",\r\n    \"cmd\": \"meta\",\r\n    \"command\": \"meta\",\r\n    \"wins\": \"meta\",\r\n    \"windows\": \"meta\"\r\n  };\r\n\r\n  Hotkeys.normalize = function(shortcut) {\r\n    var i, j, key, keyname, keys, len;\r\n    keys = shortcut.toLowerCase().replace(/\\s+/gi, \"\").split(\"+\");\r\n    for (i = j = 0, len = keys.length; j < len; i = ++j) {\r\n      key = keys[i];\r\n      keys[i] = this.aliases[key] || key;\r\n    }\r\n    keyname = keys.pop();\r\n    keys.sort().push(keyname);\r\n    return keys.join(\"_\");\r\n  };\r\n\r\n  Hotkeys.prototype.opts = {\r\n    el: document\r\n  };\r\n\r\n  Hotkeys.prototype.init = function() {\r\n    this.id = ++this.constructor.count;\r\n    this._map = {};\r\n    this._delegate = typeof this.opts.el === \"string\" ? document : this.opts.el;\r\n    $(this._delegate).on(\"keydown.simple-hotkeys-\" + this.id, this.opts.el, (function(_this) {\r\n      return function(e) {\r\n        var ref;\r\n        return (ref = _this._getHander(e)) != null ? ref.call(_this, e) : void 0;\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  Hotkeys.prototype._getHander = function(e) {\r\n    var keyname, shortcut;\r\n    if (!(keyname = this.constructor.keyNameMap[e.which])) {\r\n      return;\r\n    }\r\n    shortcut = \"\";\r\n    if (e.altKey) {\r\n      shortcut += \"alt_\";\r\n    }\r\n    if (e.ctrlKey) {\r\n      shortcut += \"control_\";\r\n    }\r\n    if (e.metaKey) {\r\n      shortcut += \"meta_\";\r\n    }\r\n    if (e.shiftKey) {\r\n      shortcut += \"shift_\";\r\n    }\r\n    shortcut += keyname.toLowerCase();\r\n    return this._map[shortcut];\r\n  };\r\n\r\n  Hotkeys.prototype.respondTo = function(subject) {\r\n    if (typeof subject === 'string') {\r\n      return this._map[this.constructor.normalize(subject)] != null;\r\n    } else {\r\n      return this._getHander(subject) != null;\r\n    }\r\n  };\r\n\r\n  Hotkeys.prototype.add = function(shortcut, handler) {\r\n    this._map[this.constructor.normalize(shortcut)] = handler;\r\n    return this;\r\n  };\r\n\r\n  Hotkeys.prototype.remove = function(shortcut) {\r\n    delete this._map[this.constructor.normalize(shortcut)];\r\n    return this;\r\n  };\r\n\r\n  Hotkeys.prototype.destroy = function() {\r\n    $(this._delegate).off(\".simple-hotkeys-\" + this.id);\r\n    this._map = {};\r\n    return this;\r\n  };\r\n\r\n  return  contents.Hotkeys = Hotkeys;\r\n\r\n});\r\n\r\n\ndefine('skylark-domx-contents/Util',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"./contents\"\r\n],function(langx,$,contents){ \r\n\r\n  var Util = langx.Evented.inherit({\r\n    init : function(editor,opts) {\r\n      this.editor = editor; // this._module;\r\n      this.opts = langx.extend({}, this.opts, opts);\r\n      if (this.browser.msie && this.browser.version < 11) {\r\n        return this.phBr = '';\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  Util.pluginName = 'Util';\r\n\r\n  Util.prototype.phBr = '<br/>';\r\n\r\n  Util.prototype.os = (function() {\r\n    var os;\r\n    os = {};\r\n    if (/Mac/.test(navigator.appVersion)) {\r\n      os.mac = true;\r\n    } else if (/Linux/.test(navigator.appVersion)) {\r\n      os.linux = true;\r\n    } else if (/Win/.test(navigator.appVersion)) {\r\n      os.win = true;\r\n    } else if (/X11/.test(navigator.appVersion)) {\r\n      os.unix = true;\r\n    }\r\n    if (/Mobi/.test(navigator.appVersion)) {\r\n      os.mobile = true;\r\n    }\r\n    return os;\r\n  })();\r\n\r\n  Util.prototype.browser = (function() {\r\n    var chrome, edge, firefox, ie, ref, ref1, ref2, ref3, ref4, safari, ua;\r\n    ua = navigator.userAgent;\r\n    ie = /(msie|trident)/i.test(ua);\r\n    chrome = /chrome|crios/i.test(ua);\r\n    safari = /safari/i.test(ua) && !chrome;\r\n    firefox = /firefox/i.test(ua);\r\n    edge = /edge/i.test(ua);\r\n    if (ie) {\r\n      return {\r\n        msie: true,\r\n        version: ((ref = ua.match(/(msie |rv:)(\\d+(\\.\\d+)?)/i)) != null ? ref[2] : void 0) * 1\r\n      };\r\n    } else if (edge) {\r\n      return {\r\n        edge: true,\r\n        webkit: true,\r\n        version: ((ref1 = ua.match(/edge\\/(\\d+(\\.\\d+)?)/i)) != null ? ref1[1] : void 0) * 1\r\n      };\r\n    } else if (chrome) {\r\n      return {\r\n        webkit: true,\r\n        chrome: true,\r\n        version: ((ref2 = ua.match(/(?:chrome|crios)\\/(\\d+(\\.\\d+)?)/i)) != null ? ref2[1] : void 0) * 1\r\n      };\r\n    } else if (safari) {\r\n      return {\r\n        webkit: true,\r\n        safari: true,\r\n        version: ((ref3 = ua.match(/version\\/(\\d+(\\.\\d+)?)/i)) != null ? ref3[1] : void 0) * 1\r\n      };\r\n    } else if (firefox) {\r\n      return {\r\n        mozilla: true,\r\n        firefox: true,\r\n        version: ((ref4 = ua.match(/firefox\\/(\\d+(\\.\\d+)?)/i)) != null ? ref4[1] : void 0) * 1\r\n      };\r\n    } else {\r\n      return {};\r\n    }\r\n  })();\r\n\r\n  Util.prototype.support = (function() {\r\n    return {\r\n      onselectionchange: (function() {\r\n        var e, onselectionchange;\r\n        onselectionchange = document.onselectionchange;\r\n        if (onselectionchange !== void 0) {\r\n          try {\r\n            document.onselectionchange = 0;\r\n            return document.onselectionchange === null;\r\n          } catch (_error) {\r\n            e = _error;\r\n          } finally {\r\n            document.onselectionchange = onselectionchange;\r\n          }\r\n        }\r\n        return false;\r\n      })(),\r\n      oninput: (function() {\r\n        return !/(msie|trident)/i.test(navigator.userAgent);\r\n      })()\r\n    };\r\n  })();\r\n\r\n  Util.prototype.reflow = function(el) {\r\n    if (el == null) {\r\n      el = document;\r\n    }\r\n    return $(el)[0].offsetHeight;\r\n  };\r\n\r\n  Util.prototype.metaKey = function(e) {\r\n    var isMac;\r\n    isMac = /Mac/.test(navigator.userAgent);\r\n    if (isMac) {\r\n      return e.metaKey;\r\n    } else {\r\n      return e.ctrlKey;\r\n    }\r\n  };\r\n\r\n  Util.prototype.isEmptyNode = function(node) {\r\n    var $node;\r\n    $node = $(node);\r\n    return $node.is(':empty') || (!$node.text() && !$node.find(':not(br, span, div)').length);\r\n  };\r\n\r\n  Util.prototype.isDecoratedNode = function(node) {\r\n    return $(node).is('[class^=\"' + this.opts.classPrefix + '\"]');\r\n  };\r\n\r\n  Util.prototype.blockNodes = [\"div\", \"p\", \"ul\", \"ol\", \"li\", \"blockquote\", \"hr\", \"pre\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"table\"];\r\n\r\n  Util.prototype.isBlockNode = function(node) {\r\n    node = $(node)[0];\r\n    if (!node || node.nodeType === 3) {\r\n      return false;\r\n    }\r\n    return new RegExp(\"^(\" + (this.blockNodes.join('|')) + \")$\").test(node.nodeName.toLowerCase());\r\n  };\r\n\r\n  Util.prototype.getNodeLength = function(node) {\r\n    node = $(node)[0];\r\n    switch (node.nodeType) {\r\n      case 7:\r\n      case 10:\r\n        return 0;\r\n      case 3:\r\n      case 8:\r\n        return node.length;\r\n      default:\r\n        return node.childNodes.length;\r\n    }\r\n  };\r\n\r\n  Util.prototype.dataURLtoBlob = function(dataURL) {\r\n    var BlobBuilder, arrayBuffer, bb, blobArray, byteString, hasArrayBufferViewSupport, hasBlobConstructor, i, intArray, k, mimeString, ref, supportBlob;\r\n    hasBlobConstructor = window.Blob && (function() {\r\n      var e;\r\n      try {\r\n        return Boolean(new Blob());\r\n      } catch (_error) {\r\n        e = _error;\r\n        return false;\r\n      }\r\n    })();\r\n    hasArrayBufferViewSupport = hasBlobConstructor && window.Uint8Array && (function() {\r\n      var e;\r\n      try {\r\n        return new Blob([new Uint8Array(100)]).size === 100;\r\n      } catch (_error) {\r\n        e = _error;\r\n        return false;\r\n      }\r\n    })();\r\n    BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\r\n    supportBlob = hasBlobConstructor || BlobBuilder;\r\n    if (!(supportBlob && window.atob && window.ArrayBuffer && window.Uint8Array)) {\r\n      return false;\r\n    }\r\n    if (dataURL.split(',')[0].indexOf('base64') >= 0) {\r\n      byteString = atob(dataURL.split(',')[1]);\r\n    } else {\r\n      byteString = decodeURIComponent(dataURL.split(',')[1]);\r\n    }\r\n    arrayBuffer = new ArrayBuffer(byteString.length);\r\n    intArray = new Uint8Array(arrayBuffer);\r\n    for (i = k = 0, ref = byteString.length; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\r\n      intArray[i] = byteString.charCodeAt(i);\r\n    }\r\n    mimeString = dataURL.split(',')[0].split(':')[1].split(';')[0];\r\n    if (hasBlobConstructor) {\r\n      blobArray = hasArrayBufferViewSupport ? intArray : arrayBuffer;\r\n      return new Blob([blobArray], {\r\n        type: mimeString\r\n      });\r\n    }\r\n    bb = new BlobBuilder();\r\n    bb.append(arrayBuffer);\r\n    return bb.getBlob(mimeString);\r\n  };\r\n\r\n  Util.prototype.throttle = function(func, wait) {\r\n    var args, call, ctx, last, rtn, throttled, timeoutID;\r\n    last = 0;\r\n    timeoutID = 0;\r\n    ctx = args = rtn = null;\r\n    call = function() {\r\n      timeoutID = 0;\r\n      last = +new Date();\r\n      rtn = func.apply(ctx, args);\r\n      ctx = null;\r\n      return args = null;\r\n    };\r\n    throttled = function() {\r\n      var delta;\r\n      ctx = this;\r\n      args = arguments;\r\n      delta = new Date() - last;\r\n      if (!timeoutID) {\r\n        if (delta >= wait) {\r\n          call();\r\n        } else {\r\n          timeoutID = setTimeout(call, wait - delta);\r\n        }\r\n      }\r\n      return rtn;\r\n    };\r\n    throttled.clear = function() {\r\n      if (!timeoutID) {\r\n        return;\r\n      }\r\n      clearTimeout(timeoutID);\r\n      return call();\r\n    };\r\n    return throttled;\r\n  };\r\n\r\n  Util.prototype.formatHTML = function(html) {\r\n    var cursor, indentString, lastMatch, level, match, re, repeatString, result, str;\r\n    re = /<(\\/?)(.+?)(\\/?)>/g;\r\n    result = '';\r\n    level = 0;\r\n    lastMatch = null;\r\n    indentString = '  ';\r\n    repeatString = function(str, n) {\r\n      return new Array(n + 1).join(str);\r\n    };\r\n    while ((match = re.exec(html)) !== null) {\r\n      match.isBlockNode = langx.inArray(match[2], this.blockNodes) > -1;\r\n      match.isStartTag = match[1] !== '/' && match[3] !== '/';\r\n      match.isEndTag = match[1] === '/' || match[3] === '/';\r\n      cursor = lastMatch ? lastMatch.index + lastMatch[0].length : 0;\r\n      if ((str = html.substring(cursor, match.index)).length > 0 && langx.trim(str)) {\r\n        result += str;\r\n      }\r\n      if (match.isBlockNode && match.isEndTag && !match.isStartTag) {\r\n        level -= 1;\r\n      }\r\n      if (match.isBlockNode && match.isStartTag) {\r\n        if (!(lastMatch && lastMatch.isBlockNode && lastMatch.isEndTag)) {\r\n          result += '\\n';\r\n        }\r\n        result += repeatString(indentString, level);\r\n      }\r\n      result += match[0];\r\n      if (match.isBlockNode && match.isEndTag) {\r\n        result += '\\n';\r\n      }\r\n      if (match.isBlockNode && match.isStartTag) {\r\n        level += 1;\r\n      }\r\n      lastMatch = match;\r\n    }\r\n    return langx.trim(result);\r\n  };\r\n\r\n  return contents.Util = Util;\r\n});\ndefine('skylark-domx-contents/InputManager',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"./contents\"\r\n],function(langx,$,contents){ \r\n \r\n\r\n  var indexOf = [].indexOf ;\r\n\r\n  var InputManager = langx.Evented.inherit({\r\n    init : function(editable,opts) {\r\n      this.editable = editable;\r\n      this.opts = langx.extend({}, this.opts, opts);\r\n\r\n      var selectAllKey, submitKey;\r\n      this.throttledValueChanged = this.editable.util.throttle((function(_this) {\r\n        return function(params) {\r\n          return setTimeout(function() {\r\n            return _this.editable.trigger('valuechanged', params);\r\n          }, 10);\r\n        };\r\n      })(this), 300);\r\n      this.throttledSelectionChanged = this.editable.util.throttle((function(_this) {\r\n        return function() {\r\n          return _this.editable.trigger('selectionchanged');\r\n        };\r\n      })(this), 50);\r\n      $(document).on('selectionchange.simditor' + this.editable.id, (function(_this) {\r\n        return function(e) {\r\n          var triggerEvent;\r\n          if (!(_this.focused && !_this.editable.clipboard.pasting)) {\r\n            return;\r\n          }\r\n          triggerEvent = function() {\r\n            if (_this._selectionTimer) {\r\n              clearTimeout(_this._selectionTimer);\r\n              _this._selectionTimer = null;\r\n            }\r\n            if (_this.editable.selection._selection.rangeCount > 0) {\r\n              return _this.throttledSelectionChanged();\r\n            } else {\r\n              return _this._selectionTimer = setTimeout(function() {\r\n                _this._selectionTimer = null;\r\n                if (_this.focused) {\r\n                  return triggerEvent();\r\n                }\r\n              }, 10);\r\n            }\r\n          };\r\n          return triggerEvent();\r\n        };\r\n      })(this));\r\n      this.editable.on('valuechanged', (function(_this) {\r\n        return function() {\r\n          var $rootBlocks;\r\n          _this.lastCaretPosition = null;\r\n          $rootBlocks = _this.editable.body.children().filter(function(i, node) {\r\n            return _this.editable.util.isBlockNode(node);\r\n          });\r\n          if (_this.focused && $rootBlocks.length === 0) {\r\n            _this.editable.selection.save();\r\n            _this.editable.formatter.format();\r\n            _this.editable.selection.restore();\r\n          }\r\n          _this.editable.body.find('hr, pre, .' + _this.opts.classPrefix + 'table').each(function(i, el) {\r\n            var $el, formatted;\r\n            $el = $(el);\r\n            if ($el.parent().is('blockquote') || $el.parent()[0] === _this.editable.body[0]) {\r\n              formatted = false;\r\n              if ($el.next().length === 0) {\r\n                $('<p/>').append(_this.editable.util.phBr).insertAfter($el);\r\n                formatted = true;\r\n              }\r\n              if ($el.prev().length === 0) {\r\n                $('<p/>').append(_this.editable.util.phBr).insertBefore($el);\r\n                formatted = true;\r\n              }\r\n              if (formatted) {\r\n                return _this.throttledValueChanged();\r\n              }\r\n            }\r\n          });\r\n          _this.editable.body.find('pre:empty').append(_this.editable.util.phBr);\r\n          if (!_this.editable.util.support.onselectionchange && _this.focused) {\r\n            return _this.throttledSelectionChanged();\r\n          }\r\n        };\r\n      })(this));\r\n      this.editable.body.on('keydown', langx.proxy(this._onKeyDown, this)).on('keypress', langx.proxy(this._onKeyPress, this)).on('keyup', langx.proxy(this._onKeyUp, this)).on('mouseup', langx.proxy(this._onMouseUp, this)).on('focus', langx.proxy(this._onFocus, this)).on('blur', langx.proxy(this._onBlur, this)).on('drop', langx.proxy(this._onDrop, this)).on('input', langx.proxy(this._onInput, this));\r\n      if (this.editable.util.browser.firefox) {\r\n        this.editable.hotkeys.add('cmd+left', (function(_this) {\r\n          return function(e) {\r\n            e.preventDefault();\r\n            _this.editable.selection._selection.modify('move', 'backward', 'lineboundary');\r\n            return false;\r\n          };\r\n        })(this));\r\n        this.editable.hotkeys.add('cmd+right', (function(_this) {\r\n          return function(e) {\r\n            e.preventDefault();\r\n            _this.editable.selection._selection.modify('move', 'forward', 'lineboundary');\r\n            return false;\r\n          };\r\n        })(this));\r\n        selectAllKey = this.editable.util.os.mac ? 'cmd+a' : 'ctrl+a';\r\n        this.editable.hotkeys.add(selectAllKey, (function(_this) {\r\n          return function(e) {\r\n            var $children, firstBlock, lastBlock, range;\r\n            $children = _this.editable.body.children();\r\n            if (!($children.length > 0)) {\r\n              return;\r\n            }\r\n            firstBlock = $children.first().get(0);\r\n            lastBlock = $children.last().get(0);\r\n            range = document.createRange();\r\n            range.setStart(firstBlock, 0);\r\n            range.setEnd(lastBlock, _this.editable.util.getNodeLength(lastBlock));\r\n            _this.editable.selection.range(range);\r\n            return false;\r\n          };\r\n        })(this));\r\n      }\r\n      submitKey = this.editable.util.os.mac ? 'cmd+enter' : 'ctrl+enter';\r\n      this.editable.hotkeys.add(submitKey, (function(_this) {\r\n        return function(e) {\r\n          _this.editable.$el.closest('form').find('button:submit').click();\r\n          return false;\r\n        };\r\n      })(this));\r\n    }\r\n\r\n  });\r\n\r\n  InputManager.pluginName = 'InputManager';\r\n\r\n  InputManager.prototype._modifierKeys = [16, 17, 18, 91, 93, 224];\r\n\r\n  InputManager.prototype._arrowKeys = [37, 38, 39, 40];\r\n\r\n\r\n  InputManager.prototype._onFocus = function(e) {\r\n    if (this.editable.clipboard.pasting) {\r\n      return;\r\n    }\r\n    this.editable.$el.addClass('focus').removeClass('error');\r\n    this.focused = true;\r\n    return setTimeout((function(_this) {\r\n      return function() {\r\n        var $blockEl, range;\r\n        range = _this.editable.selection._selection.getRangeAt(0);\r\n        if (range.startContainer === _this.editable.body[0]) {\r\n          if (_this.lastCaretPosition) {\r\n            _this.editable.undoManager.caretPosition(_this.lastCaretPosition);\r\n          } else {\r\n            $blockEl = _this.editable.body.children().first();\r\n            range = document.createRange();\r\n            _this.editable.selection.setRangeAtStartOf($blockEl, range);\r\n            console.log(\"aaaaaa\");\r\n          }\r\n        }\r\n        _this.lastCaretPosition = null;\r\n        _this.editable.trigger('focus');\r\n        if (!_this.editable.util.support.onselectionchange) {\r\n          return _this.throttledSelectionChanged();\r\n        }\r\n      };\r\n    })(this), 0);\r\n  };\r\n\r\n  InputManager.prototype._onBlur = function(e) {\r\n    var ref;\r\n    if (this.editable.clipboard.pasting) {\r\n      return;\r\n    }\r\n    this.editable.$el.removeClass('focus');\r\n    this.editable.sync();\r\n    this.focused = false;\r\n    this.lastCaretPosition = (ref = this.editable.undoManager.currentState()) != null ? ref.caret : void 0;\r\n    return this.editable.trigger('blur');\r\n  };\r\n\r\n  InputManager.prototype._onMouseUp = function(e) {\r\n    if (!this.editable.util.support.onselectionchange) {\r\n      return this.throttledSelectionChanged();\r\n    }\r\n  };\r\n\r\n  InputManager.prototype._onKeyDown = function(e) {\r\n    var ref, ref1;\r\n    if (this.editable.trigger(e) === false) {\r\n      return false;\r\n    }\r\n    if (this.editable.hotkeys.respondTo(e)) {\r\n      return;\r\n    }\r\n    if (this.editable.keystroke.respondTo(e)) {\r\n      this.throttledValueChanged();\r\n      return false;\r\n    }\r\n    if ((ref = e.which, indexOf.call(this._modifierKeys, ref) >= 0) || (ref1 = e.which, indexOf.call(this._arrowKeys, ref1) >= 0)) {\r\n      return;\r\n    }\r\n    if (this.editable.util.metaKey(e) && e.which === 86) {\r\n      return;\r\n    }\r\n    if (!this.editable.util.support.oninput) {\r\n      this.throttledValueChanged(['typing']);\r\n    }\r\n    return null;\r\n  };\r\n\r\n  InputManager.prototype._onKeyPress = function(e) {\r\n    if (this.editable.trigger(e) === false) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  InputManager.prototype._onKeyUp = function(e) {\r\n    var p, ref;\r\n    if (this.editable.trigger(e) === false) {\r\n      return false;\r\n    }\r\n    if (!this.editable.util.support.onselectionchange && (ref = e.which, indexOf.call(this._arrowKeys, ref) >= 0)) {\r\n      this.throttledValueChanged();\r\n      return;\r\n    }\r\n    if ((e.which === 8 || e.which === 46) && this.editable.util.isEmptyNode(this.editable.body)) {\r\n      this.editable.body.empty();\r\n      p = $('<p/>').append(this.editable.util.phBr).appendTo(this.editable.body);\r\n      this.editable.selection.setRangeAtStartOf(p);\r\n    }\r\n  };\r\n\r\n  InputManager.prototype._onDrop = function(e) {\r\n    if (this.editable.trigger(e) === false) {\r\n      return false;\r\n    }\r\n    return this.throttledValueChanged();\r\n  };\r\n\r\n  InputManager.prototype._onInput = function(e) {\r\n    return this.throttledValueChanged(['oninput']);\r\n  };\r\n\r\n  return contents.InputManager = InputManager;\r\n\r\n});\r\n\ndefine('skylark-domx-contents/Selection',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-query\",\r\n  \"./contents\"\r\n],function(langx,noder,$,contents){ \r\n\r\n  var Selection = langx.Evented.inherit({\r\n    _range : null,\r\n\r\n    _startNodes : null,\r\n\r\n    _endNodes : null,\r\n\r\n    _containerNode : null,\r\n\r\n    _nodes : null,\r\n\r\n    _blockNodes : null,\r\n\r\n    _rootNodes : null,\r\n\r\n    init : function(editable,opts) {\r\n      var self = this;\r\n      this.editable = editable; //this._module;\r\n      this.opts = langx.extend({}, this.opts, opts);\r\n      this._selection = document.getSelection();\r\n\r\n      this.editable.on('selectionchanged', function(e) {\r\n        console.log(\"selectionchanged\");\r\n        self.reset();\r\n        return self._range = self._selection.getRangeAt(0);\r\n      });\r\n\r\n      this.editable.on('blur', function(e) {\r\n        return self.reset();\r\n      });\r\n\r\n      this.editable.on('focus', function(e) {\r\n        self.reset();\r\n        return self._range = self._selection.getRangeAt(0);\r\n      });\r\n    },\r\n\r\n    reset : function() {\r\n      this._range = null;\r\n      this._startNodes = null;\r\n      this._endNodes = null;\r\n      this._containerNode = null;\r\n      this._nodes = null;\r\n      this._blockNodes = null;\r\n\r\n      return this._rootNodes = null;\r\n    },\r\n\r\n    clear : function() {\r\n      var e;\r\n      try {\r\n        this._selection.removeAllRanges();\r\n        console.log(\"clear\");\r\n      } catch (_error) {\r\n        e = _error;\r\n      }\r\n      return this.reset();\r\n    },\r\n\r\n    range : function(range) {\r\n      var ffOrIE;\r\n      if (range) {\r\n        this.clear();\r\n        this._selection.addRange(range);\r\n        this._range = range;\r\n //       ffOrIE = this.editable.util.browser.firefox || this.editable.util.browser.msie;\r\n        ffOrIE = langx.hoster.browser.mozilla || langx.hoster.browser.msie;\r\n        if (!this.editable.inputManager.focused && ffOrIE) {\r\n          this.editable.body.focus();\r\n        }\r\n      } else if (!this._range && this.editable.inputManager.focused && this._selection.rangeCount) {\r\n        this._range = this._selection.getRangeAt(0);\r\n      }\r\n      return this._range;\r\n    },\r\n\r\n    startNodes : function() {\r\n      if (this._range) {\r\n        if (!this._startNodes) {\r\n          this._startNodes = (function(self) {\r\n            return function() {\r\n              var startNodes;\r\n              startNodes = $(self._range.startContainer).parentsUntil(self.editable.body).get();\r\n              startNodes.unshift(self._range.startContainer);\r\n              return $(startNodes);\r\n            };\r\n          })(this)();\r\n        } \r\n\r\n      }\r\n      return this._startNodes;\r\n    },\r\n\r\n    endNodes : function() {\r\n      var endNodes;\r\n      if (this._range) {\r\n        this._endNodes || (this._endNodes = this._range.collapsed ? this.startNodes() : (endNodes = $(this._range.endContainer).parentsUntil(this.editable.body).get(), endNodes.unshift(this._range.endContainer), $(endNodes)));\r\n      }\r\n      return this._endNodes;\r\n    },\r\n\r\n    containerNode : function() {\r\n      if (this._range) {\r\n        this._containerNode || (this._containerNode = $(this._range.commonAncestorContainer));\r\n      }\r\n      return this._containerNode;\r\n    },\r\n\r\n    nodes : function() {\r\n      if (this._range) {\r\n        this._nodes || (this._nodes = (function(self) {\r\n          return function() {\r\n            var nodes;\r\n            nodes = [];\r\n            if (self.startNodes().first().is(self.endNodes().first())) {\r\n              nodes = self.startNodes().get();\r\n            } else {\r\n              self.startNodes().each(function(i, node) {\r\n                var $endNode, $node, $nodes, endIndex, index, sharedIndex, startIndex;\r\n                $node = $(node);\r\n                if (self.endNodes().index($node) > -1) {\r\n                  return nodes.push(node);\r\n                } else if ($node.parent().is(self.editable.body) || (sharedIndex = self.endNodes().index($node.parent())) > -1) {\r\n                  if (sharedIndex && sharedIndex > -1) {\r\n                    $endNode = self.endNodes().eq(sharedIndex - 1);\r\n                  } else {\r\n                    $endNode = self.endNodes().last();\r\n                  }\r\n                  $nodes = $node.parent().contents();\r\n                  startIndex = $nodes.index($node);\r\n                  endIndex = $nodes.index($endNode);\r\n                  return langx.merge(nodes, $nodes.slice(startIndex, endIndex).get());\r\n                } else {\r\n                  $nodes = $node.parent().contents();\r\n                  index = $nodes.index($node);\r\n                  return langx.merge(nodes, $nodes.slice(index).get());\r\n                }\r\n              });\r\n              self.endNodes().each(function(i, node) {\r\n                var $node, $nodes, index;\r\n                $node = $(node);\r\n                if ($node.parent().is(self.editable.body) || self.startNodes().index($node.parent()) > -1) {\r\n                  nodes.push(node);\r\n                  return false;\r\n                } else {\r\n                  $nodes = $node.parent().contents();\r\n                  index = $nodes.index($node);\r\n                  return langx.merge(nodes, $nodes.slice(0, index + 1));\r\n                }\r\n              });\r\n            }\r\n            return $(langx.uniq(nodes));\r\n          };\r\n        })(this)());\r\n      }\r\n      return this._nodes;\r\n    },\r\n\r\n    blockNodes : function() {\r\n      if (!this._range) {\r\n        return;\r\n      }\r\n\r\n      this._blockNodes || (this._blockNodes = (function(self) {\r\n        return function() {\r\n          return self.nodes().filter(function(i, node) {\r\n            return self.editable.util.isBlockNode(node);\r\n          });\r\n        };\r\n      })(this)());\r\n\r\n      return this._blockNodes;\r\n    },\r\n\r\n    rootNodes : function() {\r\n      if (!this._range) {\r\n        return;\r\n      }\r\n      this._rootNodes || (this._rootNodes = (function(self) {\r\n        return function() {\r\n          return self.nodes().filter(function(i, node) {\r\n            var $parent;\r\n            $parent = $(node).parent();\r\n            return $parent.is(self.editable.body) || $parent.is('blockquote');\r\n          });\r\n        };\r\n      })(this)());\r\n\r\n      return this._rootNodes;\r\n    },\r\n\r\n    rangeAtEndOf : function(node, range) {\r\n      var afterLastNode, beforeLastNode, endNode, endNodeLength, lastNodeIsBr, result;\r\n      if (range == null) {\r\n        range = this.range();\r\n      }\r\n      if (!(range && range.collapsed)) {\r\n        return;\r\n      }\r\n      node = $(node)[0];\r\n      endNode = range.endContainer;\r\n      endNodeLength = this.editable.util.getNodeLength(endNode);\r\n      beforeLastNode = range.endOffset === endNodeLength - 1;\r\n      lastNodeIsBr = $(endNode).contents().last().is('br');\r\n      afterLastNode = range.endOffset === endNodeLength;\r\n      if (!((beforeLastNode && lastNodeIsBr) || afterLastNode)) {\r\n        return false;\r\n      }\r\n      if (node === endNode) {\r\n        return true;\r\n      } else if (!noder.contains(node, endNode)) {\r\n        return false;\r\n      }\r\n      result = true;\r\n      $(endNode).parentsUntil(node).addBack().each(function(i, n) {\r\n        var $lastChild, beforeLastbr, isLastNode, nodes;\r\n        nodes = $(n).parent().contents().filter(function() {\r\n          return !(this !== n && this.nodeType === 3 && !this.nodeValue);\r\n        });\r\n        $lastChild = nodes.last();\r\n        isLastNode = $lastChild.get(0) === n;\r\n        beforeLastbr = $lastChild.is('br') && $lastChild.prev().get(0) === n;\r\n        if (!(isLastNode || beforeLastbr)) {\r\n          result = false;\r\n          return false;\r\n        }\r\n      });\r\n      return result;\r\n    },\r\n\r\n    rangeAtStartOf : function(node, range) {\r\n      var result, startNode;\r\n      if (range == null) {\r\n        range = this.range();\r\n      }\r\n      if (!(range && range.collapsed)) {\r\n        return;\r\n      }\r\n      node = $(node)[0];\r\n      startNode = range.startContainer;\r\n      if (range.startOffset !== 0) {\r\n        return false;\r\n      }\r\n      if (node === startNode) {\r\n        return true;\r\n      } else if (!noder.contains(node, startNode)) {\r\n        return false;\r\n      }\r\n      result = true;\r\n      $(startNode).parentsUntil(node).addBack().each(function(i, n) {\r\n        var nodes;\r\n        nodes = $(n).parent().contents().filter(function() {\r\n          return !(this !== n && this.nodeType === 3 && !this.nodeValue);\r\n        });\r\n        if (nodes.first().get(0) !== n) {\r\n          return result = false;\r\n        }\r\n      });\r\n      return result;\r\n    },\r\n\r\n    insertNode : function(node, range) {\r\n      if (range == null) {\r\n        range = this.range();\r\n      }\r\n      if (!range) {\r\n        return;\r\n      }\r\n      node = $(node)[0];\r\n      range.insertNode(node);\r\n      return this.setRangeAfter(node, range);\r\n    },\r\n\r\n    setRangeAfter : function(node, range) {\r\n      if (range == null) {\r\n        range = this.range();\r\n      }\r\n      if (range == null) {\r\n        return;\r\n      }\r\n      node = $(node)[0];\r\n      range.setEndAfter(node);\r\n      range.collapse(false);\r\n      return this.range(range);\r\n    },\r\n\r\n    setRangeBefore : function(node, range) {\r\n      if (range == null) {\r\n        range = this.range();\r\n      }\r\n      if (range == null) {\r\n        return;\r\n      }\r\n      node = $(node)[0];\r\n      range.setEndBefore(node);\r\n      range.collapse(false);\r\n      return this.range(range);\r\n    },\r\n\r\n    setRangeAtStartOf : function(node, range) {\r\n      if (range == null) {\r\n        range = this.range();\r\n      }\r\n      node = $(node).get(0);\r\n      range.setEnd(node, 0);\r\n      range.collapse(false);\r\n      return this.range(range);\r\n    },\r\n\r\n    setRangeAtEndOf : function(node, range) {\r\n      var $lastNode, $node, contents, lastChild, lastChildLength, lastText, nodeLength;\r\n      if (range == null) {\r\n        range = this.range();\r\n      }\r\n      $node = $(node);\r\n      node = $node[0];\r\n      if (!node) {\r\n        return;\r\n      }\r\n      if ($node.is('pre')) {\r\n        contents = $node.contents();\r\n        if (contents.length > 0) {\r\n          lastChild = contents.last();\r\n          lastText = lastChild.text();\r\n          lastChildLength = this.editable.util.getNodeLength(lastChild[0]);\r\n          if (lastText.charAt(lastText.length - 1) === '\\n') {\r\n            range.setEnd(lastChild[0], lastChildLength - 1);\r\n          } else {\r\n            range.setEnd(lastChild[0], lastChildLength);\r\n          }\r\n        } else {\r\n          range.setEnd(node, 0);\r\n        }\r\n      } else {\r\n        nodeLength = this.editable.util.getNodeLength(node);\r\n        if (node.nodeType !== 3 && nodeLength > 0) {\r\n          $lastNode = $(node).contents().last();\r\n          if ($lastNode.is('br')) {\r\n            nodeLength -= 1;\r\n          } else if ($lastNode[0].nodeType !== 3 && this.editable.util.isEmptyNode($lastNode)) {\r\n            $lastNode.append(this.editable.util.phBr);\r\n            node = $lastNode[0];\r\n            nodeLength = 0;\r\n          }\r\n        }\r\n        range.setEnd(node, nodeLength);\r\n      }\r\n      range.collapse(false);\r\n      return this.range(range);\r\n    },\r\n\r\n    deleteRangeContents : function(range) {\r\n      var atEndOfBody, atStartOfBody, endRange, startRange;\r\n      if (range == null) {\r\n        range = this.range();\r\n      }\r\n      startRange = range.cloneRange();\r\n      endRange = range.cloneRange();\r\n      startRange.collapse(true);\r\n      endRange.collapse(false);\r\n      atStartOfBody = this.rangeAtStartOf(this.editable.body, startRange);\r\n      atEndOfBody = this.rangeAtEndOf(this.editable.body, endRange);\r\n      if (!range.collapsed && atStartOfBody && atEndOfBody) {\r\n        this.editable.body.empty();\r\n        range.setStart(this.editable.body[0], 0);\r\n        range.collapse(true);\r\n        this.range(range);\r\n      } else {\r\n        range.deleteContents();\r\n      }\r\n      return range;\r\n    },\r\n\r\n    breakBlockEl : function(el, range) {\r\n      var $el;\r\n      if (range == null) {\r\n        range = this.range();\r\n      }\r\n      $el = $(el);\r\n      if (!range.collapsed) {\r\n        return $el;\r\n      }\r\n      range.setStartBefore($el.get(0));\r\n      if (range.collapsed) {\r\n        return $el;\r\n      }\r\n      return $el.before(range.extractContents());\r\n    },\r\n\r\n    save : function(range) {\r\n      var endCaret, endRange, startCaret;\r\n      if (range == null) {\r\n        range = this.range();\r\n      }\r\n      if (this._selectionSaved) {\r\n        return;\r\n      }\r\n      endRange = range.cloneRange();\r\n      endRange.collapse(false);\r\n      startCaret = $('<span/>').addClass(this.opts.classPrefix +'caret-start');\r\n      endCaret = $('<span/>').addClass(this.opts.classPrefix +'caret-end');\r\n      endRange.insertNode(endCaret[0]);\r\n      range.insertNode(startCaret[0]);\r\n      this.clear();\r\n      return this._selectionSaved = true;\r\n    },\r\n\r\n    restore : function() {\r\n      var endCaret, endContainer, endOffset, range, startCaret, startContainer, startOffset;\r\n      if (!this._selectionSaved) {\r\n        return false;\r\n      }\r\n      startCaret = this.editable.body.find('.' + this.opts.classPrefix +'caret-start');\r\n      endCaret = this.editable.body.find('.' + this.opts.classPrefix +'caret-end');\r\n      if (startCaret.length && endCaret.length) {\r\n        startContainer = startCaret.parent();\r\n        startOffset = startContainer.contents().index(startCaret);\r\n        endContainer = endCaret.parent();\r\n        endOffset = endContainer.contents().index(endCaret);\r\n        if (startContainer[0] === endContainer[0]) {\r\n          endOffset -= 1;\r\n        }\r\n        range = document.createRange();\r\n        range.setStart(startContainer.get(0), startOffset);\r\n        range.setEnd(endContainer.get(0), endOffset);\r\n        startCaret.remove();\r\n        endCaret.remove();\r\n        this.range(range);\r\n      } else {\r\n        startCaret.remove();\r\n        endCaret.remove();\r\n      }\r\n      this._selectionSaved = false;\r\n      return range;\r\n    },\r\n  });\r\n\r\n  Selection.pluginName = 'Selection';\r\n\r\n\r\n  return contents.Selection = Selection;\r\n\r\n});\ndefine('skylark-domx-contents/UndoManager',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"./contents\"\r\n],function(langx,$,contents){ \r\n\r\n  var UndoManager = langx.Evented.inherit({\r\n    init : function(editable,opts) {\r\n      this.editable = editable;\r\n      this.opts = langx.extend({}, this.opts, opts);\r\n\r\n      var redoShortcut, undoShortcut;\r\n      this._stack = [];\r\n      if (this.editable.util.os.mac) {\r\n        undoShortcut = 'cmd+z';\r\n        redoShortcut = 'shift+cmd+z';\r\n      } else if (this.editable.util.os.win) {\r\n        undoShortcut = 'ctrl+z';\r\n        redoShortcut = 'ctrl+y';\r\n      } else {\r\n        undoShortcut = 'ctrl+z';\r\n        redoShortcut = 'shift+ctrl+z';\r\n      }\r\n      this.editable.hotkeys.add(undoShortcut, (function(_this) {\r\n        return function(e) {\r\n          e.preventDefault();\r\n          _this.undo();\r\n          return false;\r\n        };\r\n      })(this));\r\n      this.editable.hotkeys.add(redoShortcut, (function(_this) {\r\n        return function(e) {\r\n          e.preventDefault();\r\n          _this.redo();\r\n          return false;\r\n        };\r\n      })(this));\r\n      this.throttledPushState = this.editable.util.throttle((function(_this) {\r\n        return function() {\r\n          return _this._pushUndoState();\r\n        };\r\n      })(this), 2000);\r\n      this.editable.on('valuechanged', (function(_this) {\r\n        return function(e, src) {\r\n          if (src === 'undo' || src === 'redo') {\r\n            return;\r\n          }\r\n          return _this.throttledPushState();\r\n        };\r\n      })(this));\r\n      this.editable.on('selectionchanged', (function(_this) {\r\n        return function(e) {\r\n          _this.resetCaretPosition();\r\n          return _this.update();\r\n        };\r\n      })(this));\r\n      this.editable.on('focus', (function(_this) {\r\n        return function(e) {\r\n          if (_this._stack.length === 0) {\r\n            return _this._pushUndoState();\r\n          }\r\n        };\r\n      })(this));\r\n      this.editable.on('blur', (function(_this) {\r\n        return function(e) {\r\n          return _this.resetCaretPosition();\r\n        };\r\n      })(this));\r\n    }\r\n\r\n  });\r\n\r\n  UndoManager.pluginName = 'UndoManager';\r\n\r\n  UndoManager.prototype._index = -1;\r\n\r\n  UndoManager.prototype._capacity = 20;\r\n\r\n  UndoManager.prototype._startPosition = null;\r\n\r\n  UndoManager.prototype._endPosition = null;\r\n\r\n  UndoManager.prototype.resetCaretPosition = function() {\r\n    this._startPosition = null;\r\n    return this._endPosition = null;\r\n  };\r\n\r\n  UndoManager.prototype.startPosition = function() {\r\n    if (this.editable.selection._range) {\r\n      this._startPosition || (this._startPosition = this._getPosition('start'));\r\n    }\r\n    return this._startPosition;\r\n  };\r\n\r\n  UndoManager.prototype.endPosition = function() {\r\n    if (this.editable.selection._range) {\r\n      this._endPosition || (this._endPosition = (function(_this) {\r\n        return function() {\r\n          var range;\r\n          range = _this.editable.selection.range();\r\n          if (range.collapsed) {\r\n            return _this._startPosition;\r\n          }\r\n          return _this._getPosition('end');\r\n        };\r\n      })(this)());\r\n    }\r\n    return this._endPosition;\r\n  };\r\n\r\n  UndoManager.prototype._pushUndoState = function() {\r\n    var caret;\r\n    if (this.editable.trigger('pushundostate') === false) {\r\n      return;\r\n    }\r\n    caret = this.caretPosition();\r\n    if (!caret.start) {\r\n      return;\r\n    }\r\n    this._index += 1;\r\n    this._stack.length = this._index;\r\n    this._stack.push({\r\n      html: this.editable.body.html(),\r\n      caret: this.caretPosition()\r\n    });\r\n    if (this._stack.length > this._capacity) {\r\n      this._stack.shift();\r\n      return this._index -= 1;\r\n    }\r\n  };\r\n\r\n  UndoManager.prototype.currentState = function() {\r\n    if (this._stack.length && this._index > -1) {\r\n      return this._stack[this._index];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  UndoManager.prototype.undo = function() {\r\n    var state;\r\n    if (this._index < 1 || this._stack.length < 2) {\r\n      return;\r\n    }\r\n    //this.editable.hidePopover();\r\n    this._index -= 1;\r\n    state = this._stack[this._index];\r\n    this.editable.body.get(0).innerHTML = state.html;\r\n    this.caretPosition(state.caret);\r\n    this.editable.body.find('.selected').removeClass('selected');\r\n    this.editable.sync();\r\n    return this.editable.trigger('valuechanged', ['undo']);\r\n  };\r\n\r\n  UndoManager.prototype.redo = function() {\r\n    var state;\r\n    if (this._index < 0 || this._stack.length < this._index + 2) {\r\n      return;\r\n    }\r\n    //this.editable.hidePopover();\r\n    this._index += 1;\r\n    state = this._stack[this._index];\r\n    this.editable.body.get(0).innerHTML = state.html;\r\n    this.caretPosition(state.caret);\r\n    this.editable.body.find('.selected').removeClass('selected');\r\n    this.editable.sync();\r\n    return this.editable.trigger('valuechanged', ['redo']);\r\n  };\r\n\r\n  UndoManager.prototype.update = function() {\r\n    var currentState;\r\n    currentState = this.currentState();\r\n    if (!currentState) {\r\n      return;\r\n    }\r\n    currentState.html = this.editable.body.html();\r\n    return currentState.caret = this.caretPosition();\r\n  };\r\n\r\n  UndoManager.prototype._getNodeOffset = function(node, index) {\r\n    var $parent, merging, offset;\r\n    if (langx.isNumber(index)) {\r\n      $parent = $(node);\r\n    } else {\r\n      $parent = $(node).parent();\r\n    }\r\n    offset = 0;\r\n    merging = false;\r\n    $parent.contents().each(function(i, child) {\r\n      if (node === child || (index === i && i === 0)) {\r\n        return false;\r\n      }\r\n      if (child.nodeType === Node.TEXT_NODE) {\r\n        if (!merging && child.nodeValue.length > 0) {\r\n          offset += 1;\r\n          merging = true;\r\n        }\r\n      } else {\r\n        offset += 1;\r\n        merging = false;\r\n      }\r\n      if (index - 1 === i) {\r\n        return false;\r\n      }\r\n      return null;\r\n    });\r\n    return offset;\r\n  };\r\n\r\n  UndoManager.prototype._getPosition = function(type) {\r\n    var $nodes, node, nodes, offset, position, prevNode, range;\r\n    if (type == null) {\r\n      type = 'start';\r\n    }\r\n    range = this.editable.selection.range();\r\n    offset = range[type + \"Offset\"];\r\n    $nodes = this.editable.selection[type + \"Nodes\"]();\r\n    node = $nodes.first()[0];\r\n    if (node.nodeType === Node.TEXT_NODE) {\r\n      prevNode = node.previousSibling;\r\n      while (prevNode && prevNode.nodeType === Node.TEXT_NODE) {\r\n        node = prevNode;\r\n        offset += this.editable.util.getNodeLength(prevNode);\r\n        prevNode = prevNode.previousSibling;\r\n      }\r\n      nodes = $nodes.get();\r\n      nodes[0] = node;\r\n      $nodes = $(nodes);\r\n    } else {\r\n      offset = this._getNodeOffset(node, offset);\r\n    }\r\n    position = [offset];\r\n    $nodes.each((function(_this) {\r\n      return function(i, node) {\r\n        return position.unshift(_this._getNodeOffset(node));\r\n      };\r\n    })(this));\r\n    return position;\r\n  };\r\n\r\n  UndoManager.prototype._getNodeByPosition = function(position) {\r\n    var child, childNodes, i, k, len, node, offset, ref;\r\n    node = this.editable.body[0];\r\n    ref = position.slice(0, position.length - 1);\r\n    for (i = k = 0, len = ref.length; k < len; i = ++k) {\r\n      offset = ref[i];\r\n      childNodes = node.childNodes;\r\n      if (offset > childNodes.length - 1) {\r\n        if (i === position.length - 2 && $(node).is(':empty')) {\r\n          child = document.createTextNode('');\r\n          node.appendChild(child);\r\n          childNodes = node.childNodes;\r\n        } else {\r\n          node = null;\r\n          break;\r\n        }\r\n      }\r\n      node = childNodes[offset];\r\n    }\r\n    return node;\r\n  };\r\n\r\n  UndoManager.prototype.caretPosition = function(caret) {\r\n    var endContainer, endOffset, range, startContainer, startOffset;\r\n    if (!caret) {\r\n      range = this.editable.selection.range();\r\n      caret = this.editable.inputManager.focused && (range != null) ? {\r\n        start: this.startPosition(),\r\n        end: this.endPosition(),\r\n        collapsed: range.collapsed\r\n      } : {};\r\n      return caret;\r\n    } else {\r\n      if (!caret.start) {\r\n        return;\r\n      }\r\n      startContainer = this._getNodeByPosition(caret.start);\r\n      startOffset = caret.start[caret.start.length - 1];\r\n      if (caret.collapsed) {\r\n        endContainer = startContainer;\r\n        endOffset = startOffset;\r\n      } else {\r\n        endContainer = this._getNodeByPosition(caret.end);\r\n        endOffset = caret.start[caret.start.length - 1];\r\n      }\r\n      if (!startContainer || !endContainer) {\r\n        if (typeof console !== \"undefined\" && console !== null) {\r\n          if (typeof console.warn === \"function\") {\r\n            console.warn('simditor: invalid caret state');\r\n          }\r\n        }\r\n        return;\r\n      }\r\n      range = document.createRange();\r\n      range.setStart(startContainer, startOffset);\r\n      range.setEnd(endContainer, endOffset);\r\n      return this.editable.selection.range(range);\r\n    }\r\n  };\r\n\r\n  return contents.UndoManager = UndoManager;\r\n\r\n});\ndefine('skylark-domx-contents/Keystroke',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"./contents\"\r\n],function(langx,$,contents){ \r\n\r\n  var Keystroke = langx.Evented.inherit({\r\n    init : function(editable,opts) {\r\n      this.editable = editable; //this._module;\r\n      this.opts = langx.extend({}, this.opts, opts);\r\n\r\n      this._keystrokeHandlers = {};\r\n      this._initKeystrokeHandlers();\r\n    }\r\n  });\r\n\r\n\r\n  Keystroke.pluginName = 'Keystroke';\r\n\r\n\r\n  Keystroke.prototype.add = function(key, node, handler) {\r\n    key = key.toLowerCase();\r\n    key = this.editable.hotkeys.constructor.aliases[key] || key;\r\n    if (!this._keystrokeHandlers[key]) {\r\n      this._keystrokeHandlers[key] = {};\r\n    }\r\n    return this._keystrokeHandlers[key][node] = handler;\r\n  };\r\n\r\n  Keystroke.prototype.respondTo = function(e) {\r\n    var base, key, ref, result;\r\n    key = (ref = this.editable.hotkeys.constructor.keyNameMap[e.which]) != null ? ref.toLowerCase() : void 0;\r\n    if (!key) {\r\n      return;\r\n    }\r\n    if (key in this._keystrokeHandlers) {\r\n      result = typeof (base = this._keystrokeHandlers[key])['*'] === \"function\" ? base['*'](e) : void 0;\r\n      if (!result) {\r\n        this.editable.selection.startNodes().each((function(_this) {\r\n          return function(i, node) {\r\n            var handler, ref1;\r\n            if (node.nodeType !== Node.ELEMENT_NODE) {\r\n              return;\r\n            }\r\n            handler = (ref1 = _this._keystrokeHandlers[key]) != null ? ref1[node.tagName.toLowerCase()] : void 0;\r\n            result = typeof handler === \"function\" ? handler(e, $(node)) : void 0;\r\n            if (result === true || result === false) {\r\n              return false;\r\n            }\r\n          };\r\n        })(this));\r\n      }\r\n      if (result) {\r\n        return true;\r\n      }\r\n    }\r\n  };\r\n\r\n  Keystroke.prototype._initKeystrokeHandlers = function() {\r\n    var titleEnterHandler;\r\n    if (this.editable.util.browser.safari) {\r\n      this.add('enter', '*', (function(_this) {\r\n        return function(e) {\r\n          var $blockEl, $br;\r\n          if (!e.shiftKey) {\r\n            return;\r\n          }\r\n          $blockEl = _this.editable.selection.blockNodes().last();\r\n          if ($blockEl.is('pre')) {\r\n            return;\r\n          }\r\n          $br = $('<br/>');\r\n          if (_this.editable.selection.rangeAtEndOf($blockEl)) {\r\n            _this.editable.selection.insertNode($br);\r\n            _this.editable.selection.insertNode($('<br/>'));\r\n            _this.editable.selection.setRangeBefore($br);\r\n          } else {\r\n            _this.editable.selection.insertNode($br);\r\n          }\r\n          return true;\r\n        };\r\n      })(this));\r\n    }\r\n    if (this.editable.util.browser.webkit || this.editable.util.browser.msie) {\r\n      titleEnterHandler = (function(_this) {\r\n        return function(e, $node) {\r\n          var $p;\r\n          if (!_this.editable.selection.rangeAtEndOf($node)) {\r\n            return;\r\n          }\r\n          $p = $('<p/>').append(_this.editable.util.phBr).insertAfter($node);\r\n          _this.editable.selection.setRangeAtStartOf($p);\r\n          return true;\r\n        };\r\n      })(this);\r\n      this.add('enter', 'h1', titleEnterHandler);\r\n      this.add('enter', 'h2', titleEnterHandler);\r\n      this.add('enter', 'h3', titleEnterHandler);\r\n      this.add('enter', 'h4', titleEnterHandler);\r\n      this.add('enter', 'h5', titleEnterHandler);\r\n      this.add('enter', 'h6', titleEnterHandler);\r\n    }\r\n    this.add('backspace', '*', (function(_this) {\r\n      return function(e) {\r\n        var $blockEl, $prevBlockEl, $rootBlock, isWebkit;\r\n        $rootBlock = _this.editable.selection.rootNodes().first();\r\n        $prevBlockEl = $rootBlock.prev();\r\n        if ($prevBlockEl.is('hr') && _this.editable.selection.rangeAtStartOf($rootBlock)) {\r\n          _this.editable.selection.save();\r\n          $prevBlockEl.remove();\r\n          _this.editable.selection.restore();\r\n          return true;\r\n        }\r\n        $blockEl = _this.editable.selection.blockNodes().last();\r\n        if ($blockEl.is('.' + _this.opts.classPrefix + 'resize-handle') && $rootBlock.is('.' + _this.opts.classPrefix + 'table')) {\r\n          e.preventDefault();\r\n          $rootBlock.remove();\r\n          _this.editable.selection.setRangeAtEndOf($prevBlockEl);\r\n        }\r\n        if ($prevBlockEl.is('.' + _this.opts.classPrefix + 'table') && !$blockEl.is('table') && _this.editable.util.isEmptyNode($blockEl)) {\r\n          e.preventDefault();\r\n          $blockEl.remove();\r\n          _this.editable.selection.setRangeAtEndOf($prevBlockEl);\r\n        }\r\n        isWebkit = _this.editable.util.browser.webkit;\r\n        if (isWebkit && _this.editable.selection.rangeAtStartOf($blockEl)) {\r\n          _this.editable.selection.save();\r\n          _this.editable.formatter.cleanNode($blockEl, true);\r\n          _this.editable.selection.restore();\r\n          return null;\r\n        }\r\n      };\r\n    })(this));\r\n    this.add('enter', 'div', (function(_this) {\r\n      return function(e, $node) {\r\n        var $blockEl, $p;\r\n        if ($node.is('.' + _this.opts.classPrefix + 'table')) {\r\n          $blockEl = _this.editable.selection.blockNodes().last();\r\n          if ($blockEl.is('.' + _this.opts.classPrefix + 'resize-handle')) {\r\n            e.preventDefault();\r\n            $p = $('<p/>').append(_this.editable.util.phBr).insertAfter($node);\r\n            return _this.editable.selection.setRangeAtStartOf($p);\r\n          }\r\n        }\r\n      };\r\n    })(this));\r\n    this.add('enter', 'li', (function(_this) {\r\n      return function(e, $node) {\r\n        var $cloneNode, listEl, newBlockEl, newListEl;\r\n        $cloneNode = $node.clone();\r\n        $cloneNode.find('ul, ol').remove();\r\n        if (!(_this.editable.util.isEmptyNode($cloneNode) && $node.is(_this.editable.selection.blockNodes().last()))) {\r\n          return;\r\n        }\r\n        listEl = $node.parent();  \r\n        if ($node.next('li').length > 0) {\r\n          if (!_this.editable.util.isEmptyNode($node)) {\r\n            return;\r\n          }\r\n          if (listEl.parent('li').length > 0) {\r\n            newBlockEl = $('<li/>').append(_this.editable.util.phBr).insertAfter(listEl.parent('li'));\r\n            newListEl = $('<' + listEl[0].tagName + '/>').append($node.nextAll('li'));\r\n            newBlockEl.append(newListEl);\r\n          } else {\r\n            newBlockEl = $('<p/>').append(_this.editable.util.phBr).insertAfter(listEl);\r\n            newListEl = $('<' + listEl[0].tagName + '/>').append($node.nextAll('li'));\r\n            newBlockEl.after(newListEl);\r\n          }\r\n        } else {\r\n          if (listEl.parent('li').length > 0) {\r\n            newBlockEl = $('<li/>').insertAfter(listEl.parent('li'));\r\n            if ($node.contents().length > 0) {\r\n              newBlockEl.append($node.contents());\r\n            } else {\r\n              newBlockEl.append(_this.editable.util.phBr);\r\n            }\r\n          } else {\r\n            newBlockEl = $('<p/>').append(_this.editable.util.phBr).insertAfter(listEl);\r\n            if ($node.children('ul, ol').length > 0) {\r\n              newBlockEl.after($node.children('ul, ol'));\r\n            }\r\n          }\r\n        }\r\n        if ($node.prev('li').length) {\r\n          $node.remove();\r\n        } else {\r\n          if ($node.prev('ul').length || $node.prev('ol').length) {\r\n            $node.remove();\r\n          } else {\r\n            listEl.remove();\r\n          }\r\n        }\r\n        _this.editable.selection.setRangeAtStartOf(newBlockEl);\r\n        return true;\r\n      };\r\n    })(this));\r\n    this.add('enter', 'pre', (function(_this) {\r\n      return function(e, $node) {\r\n        var $p, breakNode, range;\r\n        e.preventDefault();\r\n        if (e.shiftKey) {\r\n          $p = $('<p/>').append(_this.editable.util.phBr).insertAfter($node);\r\n          _this.editable.selection.setRangeAtStartOf($p);\r\n          return true;\r\n        }\r\n        range = _this.editable.selection.range();\r\n        breakNode = null;\r\n        range.deleteContents();\r\n        if (!_this.editable.util.browser.msie && _this.editable.selection.rangeAtEndOf($node)) {\r\n          breakNode = document.createTextNode('\\n\\n');\r\n        } else {\r\n          breakNode = document.createTextNode('\\n');\r\n        }\r\n        range.insertNode(breakNode);\r\n        range.setEnd(breakNode, 1);\r\n        range.collapse(false);\r\n        _this.editable.selection.range(range);\r\n        return true;\r\n      };\r\n    })(this));\r\n    this.add('enter', 'blockquote', (function(_this) {\r\n      return function(e, $node) {\r\n        var $closestBlock, range;\r\n        $closestBlock = _this.editable.selection.blockNodes().last();\r\n        if (!($closestBlock.is('p') && !$closestBlock.next().length && _this.editable.util.isEmptyNode($closestBlock))) {\r\n          return;\r\n        }\r\n        $node.after($closestBlock);\r\n        range = document.createRange();\r\n        _this.editable.selection.setRangeAtStartOf($closestBlock, range);\r\n        return true;\r\n      };\r\n    })(this));\r\n    this.add('backspace', 'li', (function(_this) {\r\n      return function(e, $node) {\r\n        var $br, $childList, $newLi, $prevChildList, $prevNode, $textNode, isFF, range, text;\r\n        $childList = $node.children('ul, ol');\r\n        $prevNode = $node.prev('li');\r\n        if (!($childList.length > 0 && $prevNode.length > 0)) {\r\n          return false;\r\n        }\r\n        text = '';\r\n        $textNode = null;\r\n        $node.contents().each(function(i, n) {\r\n          if (n.nodeType === 1 && /UL|OL/.test(n.nodeName)) {\r\n            return false;\r\n          }\r\n          if (n.nodeType === 1 && /BR/.test(n.nodeName)) {\r\n            return;\r\n          }\r\n          if (n.nodeType === 3 && n.nodeValue) {\r\n            text += n.nodeValue;\r\n          } else if (n.nodeType === 1) {\r\n            text += $(n).text();\r\n          }\r\n          return $textNode = $(n);\r\n        });\r\n        isFF = _this.editable.util.browser.firefox && !$textNode.next('br').length;\r\n        if ($textNode && text.length === 1 && isFF) {\r\n          $br = $(_this.editable.util.phBr).insertAfter($textNode);\r\n          $textNode.remove();\r\n          _this.editable.selection.setRangeBefore($br);\r\n          return true;\r\n        } else if (text.length > 0) {\r\n          return false;\r\n        }\r\n        range = document.createRange();\r\n        $prevChildList = $prevNode.children('ul, ol');\r\n        if ($prevChildList.length > 0) {\r\n          $newLi = $('<li/>').append(_this.editable.util.phBr).appendTo($prevChildList);\r\n          $prevChildList.append($childList.children('li'));\r\n          $node.remove();\r\n          _this.editable.selection.setRangeAtEndOf($newLi, range);\r\n        } else {\r\n          _this.editable.selection.setRangeAtEndOf($prevNode, range);\r\n          $prevNode.append($childList);\r\n          $node.remove();\r\n          _this.editable.selection.range(range);\r\n        }\r\n        return true;\r\n      };\r\n    })(this));\r\n    this.add('backspace', 'pre', (function(_this) {\r\n      return function(e, $node) {\r\n        var $newNode, codeStr, range;\r\n        if (!_this.editable.selection.rangeAtStartOf($node)) {\r\n          return;\r\n        }\r\n        codeStr = $node.html().replace('\\n', '<br/>') || _this.editable.util.phBr;\r\n        $newNode = $('<p/>').append(codeStr).insertAfter($node);\r\n        $node.remove();\r\n        range = document.createRange();\r\n        _this.editable.selection.setRangeAtStartOf($newNode, range);\r\n        return true;\r\n      };\r\n    })(this));\r\n    return this.add('backspace', 'blockquote', (function(_this) {\r\n      return function(e, $node) {\r\n        var $firstChild, range;\r\n        if (!_this.editable.selection.rangeAtStartOf($node)) {\r\n          return;\r\n        }\r\n        $firstChild = $node.children().first().unwrap();\r\n        range = document.createRange();\r\n        _this.editable.selection.setRangeAtStartOf($firstChild, range);\r\n        return true;\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  return contents.Keystroke = Keystroke;\r\n\r\n});\r\n\ndefine('skylark-domx-contents/Formatter',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"./contents\"\r\n],function(langx,$,contents){ \r\n\r\n\r\n  var indexOf = [].indexOf ;\r\n\r\n  var Formatter = langx.Evented.inherit({\r\n    opts : {\r\n      allowedTags: [],\r\n      allowedAttributes: {},\r\n      allowedStyles: {}\r\n    },\r\n\r\n    init : function(editable,opts) {\r\n      this.editable = editable; //this._module;\r\n      this.opts = langx.extend({}, this.opts, opts);\r\n\r\n      this._allowedTags = langx.merge(['br', 'span', 'a', 'img', 'b', 'strong', 'i', 'strike', 'u', 'font', 'p', 'ul', 'ol', 'li', 'blockquote', 'pre', 'code', 'h1', 'h2', 'h3', 'h4', 'hr'], this.opts.allowedTags);\r\n      this._allowedAttributes = langx.extend({\r\n        img: ['src', 'alt', 'width', 'height', 'data-non-image'],\r\n        a: ['href', 'target','download'],\r\n        font: ['color'],\r\n        code: ['class']\r\n      }, this.opts.allowedAttributes);\r\n      this._allowedStyles = langx.extend({\r\n        span: ['color', 'font-size','background-color','background'],\r\n        b: ['color', 'font-size','background-color','background'],\r\n        i: ['color', 'font-size','background-color','background'],\r\n        strong: ['color', 'font-size','background-color','background'],\r\n        strike: ['color', 'font-size','background-color','background'],\r\n        u: ['color', 'font-size','background-color','background'],\r\n        p: ['margin-left', 'text-align','background-color','background'],\r\n        h1: ['margin-left', 'text-align'],\r\n        h2: ['margin-left', 'text-align'],\r\n        h3: ['margin-left', 'text-align'],\r\n        h4: ['margin-left', 'text-align']\r\n      }, this.opts.allowedStyles);\r\n      this.editable.body.on('click', 'a', function(e) {\r\n        return false;\r\n      });\r\n    },\r\n\r\n    decorate : function($el) {\r\n      if ($el == null) {\r\n        $el = this.editable.body;\r\n      }\r\n      this.editable.trigger('decorate', [$el]);\r\n      return $el;\r\n    },\r\n\r\n    undecorate : function($el) {\r\n      if ($el == null) {\r\n        $el = this.editable.body.clone();\r\n      }\r\n      this.editable.trigger('undecorate', [$el]);\r\n      return $el;\r\n    },\r\n\r\n    autolink : function($el) {\r\n      var $link, $node, findLinkNode, k, lastIndex, len, linkNodes, match, re, replaceEls, subStr, text, uri;\r\n      if ($el == null) {\r\n        $el = this.editable.body;\r\n      }\r\n      linkNodes = [];\r\n      findLinkNode = function($parentNode) {\r\n        return $parentNode.contents().each(function(i, node) {\r\n          var $node, text;\r\n          $node = $(node);\r\n          if ($node.is('a') || $node.closest('a, pre', $el).length) {\r\n            return;\r\n          }\r\n          if (!$node.is('iframe') && $node.contents().length) {\r\n            return findLinkNode($node);\r\n          } else if ((text = $node.text()) && /https?:\\/\\/|www\\./ig.test(text)) {\r\n            return linkNodes.push($node);\r\n          }\r\n        });\r\n      };\r\n      findLinkNode($el);\r\n      re = /(https?:\\/\\/|www\\.)[\\w\\-\\.\\?&=\\/#%:,@\\!\\+]+/ig;\r\n      for (k = 0, len = linkNodes.length; k < len; k++) {\r\n        $node = linkNodes[k];\r\n        text = $node.text();\r\n        replaceEls = [];\r\n        match = null;\r\n        lastIndex = 0;\r\n        while ((match = re.exec(text)) !== null) {\r\n          subStr = text.substring(lastIndex, match.index);\r\n          replaceEls.push(document.createTextNode(subStr));\r\n          lastIndex = re.lastIndex;\r\n          uri = /^(http(s)?:\\/\\/|\\/)/.test(match[0]) ? match[0] : 'http://' + match[0];\r\n          $link = $(\"<a href=\\\"\" + uri + \"\\\" rel=\\\"nofollow\\\"></a>\").text(match[0]);\r\n          replaceEls.push($link[0]);\r\n        }\r\n        replaceEls.push(document.createTextNode(text.substring(lastIndex)));\r\n        $node.replaceWith($(replaceEls));\r\n      }\r\n      return $el;\r\n    },\r\n\r\n    format : function($el) {\r\n      var $node, blockNode, k, l, len, len1, n, node, ref, ref1;\r\n      if ($el == null) {\r\n        $el = this.editable.body;\r\n      }\r\n      if ($el.is(':empty')) {\r\n        //$el.append('<p>' + this.editable.util.phBr + '</p>'); // modified by lwf\r\n        $el.append('<p>' + '</p>'); // modified by lwf\r\n        return $el;\r\n      }\r\n      ref = $el.contents();\r\n      for (k = 0, len = ref.length; k < len; k++) {\r\n        n = ref[k];\r\n        this.cleanNode(n, true);\r\n      }\r\n      ref1 = $el.contents();\r\n      for (l = 0, len1 = ref1.length; l < len1; l++) {\r\n        node = ref1[l];\r\n        $node = $(node);\r\n        if ($node.is('br')) {\r\n          if (typeof blockNode !== \"undefined\" && blockNode !== null) {\r\n            blockNode = null;\r\n          }\r\n          $node.remove();\r\n        } else if (this.editable.util.isBlockNode(node)) {\r\n          if ($node.is('li')) {\r\n            if (blockNode && blockNode.is('ul, ol')) {\r\n              blockNode.append(node);\r\n            } else {\r\n              blockNode = $('<ul/>').insertBefore(node);\r\n              blockNode.append(node);\r\n            }\r\n          } else {\r\n            blockNode = null;\r\n          }\r\n        } else {\r\n          if (!blockNode || blockNode.is('ul, ol')) {\r\n            blockNode = $('<p/>').insertBefore(node);\r\n          }\r\n          blockNode.append(node);\r\n          if (this.editable.util.isEmptyNode(blockNode)) {\r\n            blockNode.append(this.editable.util.phBr);\r\n          }\r\n        }\r\n      }\r\n      return $el;\r\n    },\r\n\r\n    cleanNode : function(node, recursive) {\r\n      var $blockEls, $childImg, $node, $p, $td, allowedAttributes, attr, contents, isDecoration, k, l, len, len1, n, ref, ref1, text, textNode;\r\n      $node = $(node);\r\n      if (!($node.length > 0)) {\r\n        return;\r\n      }\r\n      if ($node[0].nodeType === 3) {\r\n        text = $node.text().replace(/(\\r\\n|\\n|\\r)/gm, '');\r\n        if (text) {\r\n          textNode = document.createTextNode(text);\r\n          $node.replaceWith(textNode);\r\n        } else {\r\n          $node.remove();\r\n        }\r\n        return;\r\n      }\r\n      contents = $node.is('iframe') ? null : $node.contents();\r\n      isDecoration = this.editable.util.isDecoratedNode($node);\r\n      if ($node.is(this._allowedTags.join(',')) || isDecoration) {\r\n        if ($node.is('a') && ($childImg = $node.find('img')).length > 0) {\r\n          $node.replaceWith($childImg);\r\n          $node = $childImg;\r\n          contents = null;\r\n        }\r\n        if ($node.is('td') && ($blockEls = $node.find(this.editable.util.blockNodes.join(','))).length > 0) {\r\n          $blockEls.each((function(_this) {\r\n            return function(i, blockEl) {\r\n              return $(blockEl).contents().unwrap();\r\n            };\r\n          })(this));\r\n          contents = $node.contents();\r\n        }\r\n        if ($node.is('img') && $node.hasClass('uploading')) {\r\n          $node.remove();\r\n        }\r\n        if (!isDecoration) {\r\n          allowedAttributes = this._allowedAttributes[$node[0].tagName.toLowerCase()];\r\n          ref = langx.makeArray($node[0].attributes);\r\n          for (k = 0, len = ref.length; k < len; k++) {\r\n            attr = ref[k];\r\n            if (attr.name === 'style') {\r\n              continue;\r\n            }\r\n            if (!((allowedAttributes != null) && (ref1 = attr.name, indexOf.call(allowedAttributes, ref1) >= 0))) {\r\n              $node.removeAttr(attr.name);\r\n            }\r\n          }\r\n          this._cleanNodeStyles($node);\r\n          if ($node.is('span')) {\r\n            if ($node[0].attributes.length === 0) {\r\n              $node.contents().first().unwrap();\r\n            }\r\n            if ($node[0].style.length === 2 && $node[0].style.color === 'rgb(51, 51, 51)' && $node[0].style.fontSize === '16px') {\r\n              $node.contents().unwrap();\r\n            }\r\n          }\r\n        }\r\n      } else if ($node[0].nodeType === 1 && !$node.is(':empty')) {\r\n        if ($node.is('div, article, dl, header, footer, tr')) {\r\n          $node.append('<br/>');\r\n          contents.first().unwrap();\r\n        } else if ($node.is('table')) {\r\n          $p = $('<p/>');\r\n          $node.find('tr').each(function(i, tr) {\r\n            return $p.append($(tr).text() + '<br/>');\r\n          });\r\n          $node.replaceWith($p);\r\n          contents = null;\r\n        } else if ($node.is('thead, tfoot')) {\r\n          $node.remove();\r\n          contents = null;\r\n        } else if ($node.is('th')) {\r\n          $td = $('<td/>').append($node.contents());\r\n          $node.replaceWith($td);\r\n        } else {\r\n          contents.first().unwrap();\r\n        }\r\n      } else {\r\n        $node.remove();\r\n        contents = null;\r\n      }\r\n      if (recursive && (contents != null) && !$node.is('pre')) {\r\n        for (l = 0, len1 = contents.length; l < len1; l++) {\r\n          n = contents[l];\r\n          this.cleanNode(n, true);\r\n        }\r\n      }\r\n      return null;\r\n    },\r\n\r\n    _cleanNodeStyles : function($node) {\r\n      var allowedStyles, k, len, pair, ref, ref1, style, styleStr, styles;\r\n      styleStr = $node.attr('style');\r\n      if (!styleStr) {\r\n        return;\r\n      }\r\n      $node.removeAttr('style');\r\n      allowedStyles = this._allowedStyles[$node[0].tagName.toLowerCase()];\r\n      if (!(allowedStyles && allowedStyles.length > 0)) {\r\n        return $node;\r\n      }\r\n      styles = {};\r\n      ref = styleStr.split(';');\r\n      for (k = 0, len = ref.length; k < len; k++) {\r\n        style = ref[k];\r\n        style = langx.trim(style);\r\n        pair = style.split(':');\r\n        if (pair.length !== 2) {\r\n          continue;\r\n        }\r\n        if (pair[0] === 'font-size' && pair[1].indexOf('px') > 0) {\r\n          if (parseInt(pair[1], 10) < 12) {\r\n            continue;\r\n          }\r\n        }\r\n        if (ref1 = pair[0], indexOf.call(allowedStyles, ref1) >= 0) {\r\n          styles[langx.trim(pair[0])] = langx.trim(pair[1]);\r\n        }\r\n      }\r\n      if (Object.keys(styles).length > 0) {\r\n        $node.css(styles);\r\n      }\r\n      return $node;\r\n    },\r\n\r\n    clearHtml : function(html, lineBreak) {\r\n      var container, contents, result;\r\n      if (lineBreak == null) {\r\n        lineBreak = true;\r\n      }\r\n      container = $('<div/>').append(html);\r\n      contents = container.contents();\r\n      result = '';\r\n      contents.each((function(_this) {\r\n        return function(i, node) {\r\n          var $node, children;\r\n          if (node.nodeType === 3) {\r\n            return result += node.nodeValue;\r\n          } else if (node.nodeType === 1) {\r\n            $node = $(node);\r\n            children = $node.is('iframe') ? null : $node.contents();\r\n            if (children && children.length > 0) {\r\n              result += _this.clearHtml(children);\r\n            }\r\n            if (lineBreak && i < contents.length - 1 && $node.is('br, p, div, li,tr, pre, address, artticle, aside, dl, figcaption, footer, h1, h2,h3, h4, header')) {\r\n              return result += '\\n';\r\n            }\r\n          }\r\n        };\r\n      })(this));\r\n      return result;\r\n    },\r\n\r\n    beautify : function($contents) {\r\n      var uselessP,\r\n          _this = this;\r\n      uselessP = function($el) {\r\n        return !!($el.is('p') && !$el.text() && $el.children(':not(br)').length < 1);\r\n      };\r\n      return $contents.each(function(i, el) {\r\n        var $el, invalid;\r\n        $el = $(el);\r\n        invalid = $el.is(':not(img, br, col, td, hr, [class^=\"' + _this.opts.classPrefix + '\"]):empty');\r\n        if (invalid || uselessP($el)) {\r\n          $el.remove();\r\n        }\r\n        return $el.find(':not(img, br, col, td, hr, [class^=\"' + _this.opts.classPrefix + '\"]):empty').remove();\r\n      });\r\n    }\r\n\r\n  });\r\n\r\n  Formatter.pluginName = 'Formatter';\r\n\r\n  return contents.Formatter = Formatter;\r\n\r\n});\ndefine('skylark-domx-contents/Indentation',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-query\",\r\n  \"./contents\"\r\n],function(langx,noder,$,contents){ \r\n\r\n\r\n  var Indentation = langx.Evented.inherit({\r\n\r\n  });\r\n\r\n\r\n  Indentation.pluginName = 'Indentation';\r\n\r\n  Indentation.prototype.opts = {\r\n    tabIndent: true,\r\n    indentWidth: 40\r\n   \r\n  };\r\n\r\n  Indentation.prototype.init = function(editable,opts) {\r\n    this.editable = editable; // this._module;\r\n    this.opts = langx.extend({}, this.opts, opts);\r\n\r\n    this.editable.keystroke.add('tab', '*', (function(_this) {\r\n      return function(e) {\r\n        var codeButton;\r\n        codeButton = _this.editable.toolbar.findButton('code');\r\n        if (!(_this.opts.tabIndent || (codeButton && codeButton.active))) {\r\n          return;\r\n        }\r\n        return _this.indent(e.shiftKey);\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  Indentation.prototype.indent = function(isBackward) {\r\n    var $blockNodes, $endNodes, $startNodes, nodes, result;\r\n    $startNodes = this.editable.selection.startNodes();\r\n    $endNodes = this.editable.selection.endNodes();\r\n    $blockNodes = this.editable.selection.blockNodes();\r\n    nodes = [];\r\n    $blockNodes = $blockNodes.each(function(i, node) {\r\n      var include, j, k, len, n;\r\n      include = true;\r\n      for (j = k = 0, len = nodes.length; k < len; j = ++k) {\r\n        n = nodes[j];\r\n        if (noder.contains(node, n)) {\r\n          include = false;\r\n          break;\r\n        } else if (noder.contains(n, node)) {\r\n          nodes.splice(j, 1, node);\r\n          include = false;\r\n          break;\r\n        }\r\n      }\r\n      if (include) {\r\n        return nodes.push(node);\r\n      }\r\n    });\r\n    $blockNodes = $(nodes);\r\n    result = false;\r\n    $blockNodes.each((function(_this) {\r\n      return function(i, blockEl) {\r\n        var r;\r\n        r = isBackward ? _this.outdentBlock(blockEl) : _this.indentBlock(blockEl);\r\n        if (r) {\r\n          return result = r;\r\n        }\r\n      };\r\n    })(this));\r\n    return result;\r\n  };\r\n\r\n  Indentation.prototype.indentBlock = function(blockEl) {\r\n    var $blockEl, $childList, $nextTd, $nextTr, $parentLi, $pre, $td, $tr, marginLeft, tagName;\r\n    $blockEl = $(blockEl);\r\n    if (!$blockEl.length) {\r\n      return;\r\n    }\r\n    if ($blockEl.is('pre')) {\r\n      $pre = this.editable.selection.containerNode();\r\n      if (!($pre.is($blockEl) || $pre.closest('pre').is($blockEl))) {\r\n        return;\r\n      }\r\n      this.indentText(this.editable.selection.range());\r\n    } else if ($blockEl.is('li')) {\r\n      $parentLi = $blockEl.prev('li');\r\n      if ($parentLi.length < 1) {\r\n        return;\r\n      }\r\n      this.editable.selection.save();\r\n      tagName = $blockEl.parent()[0].tagName;\r\n      $childList = $parentLi.children('ul, ol');\r\n      if ($childList.length > 0) {\r\n        $childList.append($blockEl);\r\n      } else {\r\n        $('<' + tagName + '/>').append($blockEl).appendTo($parentLi);\r\n      }\r\n      this.editable.selection.restore();\r\n    } else if ($blockEl.is('p, h1, h2, h3, h4')) {\r\n      marginLeft = parseInt($blockEl.css('margin-left')) || 0;\r\n      marginLeft = (Math.round(marginLeft / this.opts.indentWidth) + 1) * this.opts.indentWidth;\r\n      $blockEl.css('margin-left', marginLeft);\r\n    } else if ($blockEl.is('table') || $blockEl.is('.' + this.opts.classPrefix +'table')) {\r\n      $td = this.editable.selection.containerNode().closest('td, th');\r\n      $nextTd = $td.next('td, th');\r\n      if (!($nextTd.length > 0)) {\r\n        $tr = $td.parent('tr');\r\n        $nextTr = $tr.next('tr');\r\n        if ($nextTr.length < 1 && $tr.parent().is('thead')) {\r\n          $nextTr = $tr.parent('thead').next('tbody').find('tr:first');\r\n        }\r\n        $nextTd = $nextTr.find('td:first, th:first');\r\n      }\r\n      if (!($td.length > 0 && $nextTd.length > 0)) {\r\n        return;\r\n      }\r\n      this.editable.selection.setRangeAtEndOf($nextTd);\r\n    } else {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  Indentation.prototype.indentText = function(range) {\r\n    var text, textNode;\r\n    text = range.toString().replace(/^(?=.+)/mg, '\\u00A0\\u00A0');\r\n    textNode = document.createTextNode(text || '\\u00A0\\u00A0');\r\n    range.deleteContents();\r\n    range.insertNode(textNode);\r\n    if (text) {\r\n      range.selectNode(textNode);\r\n      return this.editable.selection.range(range);\r\n    } else {\r\n      return this.editable.selection.setRangeAfter(textNode);\r\n    }\r\n  };\r\n\r\n  Indentation.prototype.outdentBlock = function(blockEl) {\r\n    var $blockEl, $parent, $parentLi, $pre, $prevTd, $prevTr, $td, $tr, marginLeft, range;\r\n    $blockEl = $(blockEl);\r\n    if (!($blockEl && $blockEl.length > 0)) {\r\n      return;\r\n    }\r\n    if ($blockEl.is('pre')) {\r\n      $pre = this.editable.selection.containerNode();\r\n      if (!($pre.is($blockEl) || $pre.closest('pre').is($blockEl))) {\r\n        return;\r\n      }\r\n      this.outdentText(range);\r\n    } else if ($blockEl.is('li')) {\r\n      $parent = $blockEl.parent();\r\n      $parentLi = $parent.parent('li');\r\n      this.editable.selection.save();\r\n      if ($parentLi.length < 1) {\r\n        range = document.createRange();\r\n        range.setStartBefore($parent[0]);\r\n        range.setEndBefore($blockEl[0]);\r\n        $parent.before(range.extractContents());\r\n        $('<p/>').insertBefore($parent).after($blockEl.children('ul, ol')).append($blockEl.contents());\r\n        $blockEl.remove();\r\n      } else {\r\n        if ($blockEl.next('li').length > 0) {\r\n          $('<' + $parent[0].tagName + '/>').append($blockEl.nextAll('li')).appendTo($blockEl);\r\n        }\r\n        $blockEl.insertAfter($parentLi);\r\n        if ($parent.children('li').length < 1) {\r\n          $parent.remove();\r\n        }\r\n      }\r\n      this.editable.selection.restore();\r\n    } else if ($blockEl.is('p, h1, h2, h3, h4')) {\r\n      marginLeft = parseInt($blockEl.css('margin-left')) || 0;\r\n      marginLeft = Math.max(Math.round(marginLeft / this.opts.indentWidth) - 1, 0) * this.opts.indentWidth;\r\n      $blockEl.css('margin-left', marginLeft === 0 ? '' : marginLeft);\r\n    } else if ($blockEl.is('table') || $blockEl.is('.' + this.opts.classPrefix + 'table')) {\r\n      $td = this.editable.selection.containerNode().closest('td, th');\r\n      $prevTd = $td.prev('td, th');\r\n      if (!($prevTd.length > 0)) {\r\n        $tr = $td.parent('tr');\r\n        $prevTr = $tr.prev('tr');\r\n        if ($prevTr.length < 1 && $tr.parent().is('tbody')) {\r\n          $prevTr = $tr.parent('tbody').prev('thead').find('tr:first');\r\n        }\r\n        $prevTd = $prevTr.find('td:last, th:last');\r\n      }\r\n      if (!($td.length > 0 && $prevTd.length > 0)) {\r\n        return;\r\n      }\r\n      this.editable.selection.setRangeAtEndOf($prevTd);\r\n    } else {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  Indentation.prototype.outdentText = function(range) {};\r\n\r\n  return contents.Indentation = Indentation;\r\n\r\n});\r\n\ndefine('skylark-domx-contents/Clipboard',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"./contents\"\r\n],function(langx,$,contents){ \r\n\r\n  var Clipboard = langx.Evented.inherit({\r\n\r\n  });\r\n\r\n\r\n  Clipboard.pluginName = 'Clipboard';\r\n\r\n  Clipboard.prototype.opts = {\r\n    pasteImage: false,\r\n    cleanPaste: false\r\n  };\r\n\r\n  Clipboard.prototype.init = function(editable,opts) {\r\n    this.editable = editable; //this._module;\r\n    this.opts = langx.extend({}, this.opts, opts);\r\n    if (this.opts.pasteImage && typeof this.opts.pasteImage !== 'string') {\r\n      this.opts.pasteImage = 'inline';\r\n    }\r\n    this.editable.body.on('paste', (function(_this) {\r\n      return function(e) {\r\n        var range;\r\n        if (_this.pasting || _this._pasteBin) {\r\n          return;\r\n        }\r\n        if (_this.editable.trigger(e) === false) {\r\n          return false;\r\n        }\r\n        range = _this.editable.selection.deleteRangeContents();\r\n        if (_this.editable.body.html()) {\r\n          if (!range.collapsed) {\r\n            range.collapse(true);\r\n          }\r\n        } else {\r\n          _this.editable.formatter.format();\r\n          _this.editable.selection.setRangeAtStartOf(_this.editable.body.find('p:first'));\r\n        }\r\n        if (_this._processPasteByClipboardApi(e)) {\r\n          return false;\r\n        }\r\n        _this.editable.inputManager.throttledValueChanged.clear();\r\n        _this.editable.inputManager.throttledSelectionChanged.clear();\r\n        _this.editable.undoManager.throttledPushState.clear();\r\n        _this.editable.selection.reset();\r\n        _this.editable.undoManager.resetCaretPosition();\r\n        _this.pasting = true;\r\n        return _this._getPasteContent(function(pasteContent) {\r\n          _this._processPasteContent(pasteContent);\r\n          _this._pasteInBlockEl = null;\r\n          _this._pastePlainText = null;\r\n          return _this.pasting = false;\r\n        });\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  Clipboard.prototype._processPasteByClipboardApi = function(e) {\r\n    var imageFile, pasteItem, ref, uploadOpt;\r\n    if (this.editable.util.browser.edge) {\r\n      return;\r\n    }\r\n    if (e.originalEvent.clipboardData && e.originalEvent.clipboardData.items && e.originalEvent.clipboardData.items.length > 0) {\r\n      pasteItem = e.originalEvent.clipboardData.items[0];\r\n      if (/^image\\//.test(pasteItem.type)) {\r\n        imageFile = pasteItem.getAsFile();\r\n        if (!((imageFile != null) && this.opts.pasteImage)) {\r\n          return;\r\n        }\r\n        if (!imageFile.name) {\r\n          imageFile.name = \"Clipboard Image.png\";\r\n        }\r\n        if (this.editable.triggerHandler('pasting', [imageFile]) === false) {\r\n          return;\r\n        }\r\n        uploadOpt = {};\r\n        uploadOpt[this.opts.pasteImage] = true;\r\n        if ((ref = this.editable.uploader) != null) {\r\n          ref.upload(imageFile, uploadOpt);\r\n        }\r\n        return true;\r\n      }\r\n    }\r\n  };\r\n\r\n  Clipboard.prototype._getPasteContent = function(callback) {\r\n    var state;\r\n    this._pasteBin = $('<div contenteditable=\"true\" />').addClass('paste-bin').attr('tabIndex', '-1').appendTo(this.editable.$el);\r\n    state = {\r\n      html: this.editable.body.html(),\r\n      caret: this.editable.undoManager.caretPosition()\r\n    };\r\n    this._pasteBin.focus();\r\n    return setTimeout((function(_this) {\r\n      return function() {\r\n        var pasteContent;\r\n        //_this.editable.hidePopover();\r\n        _this.editable.body.get(0).innerHTML = state.html;\r\n        _this.editable.undoManager.caretPosition(state.caret);\r\n        _this.editable.body.focus();\r\n        _this.editable.selection.reset();\r\n        _this.editable.selection.range();\r\n        _this._pasteInBlockEl = _this.editable.selection.blockNodes().last();\r\n        _this._pastePlainText = _this.opts.cleanPaste || _this._pasteInBlockEl.is('pre, table');\r\n        if (_this._pastePlainText) {\r\n          pasteContent = _this.editable.formatter.clearHtml(_this._pasteBin.html(), true);\r\n        } else {\r\n          pasteContent = $('<div/>').append(_this._pasteBin.contents());\r\n          pasteContent.find('style').remove();\r\n          pasteContent.find('table colgroup').remove();\r\n          _this._cleanPasteFontSize(pasteContent);\r\n          _this.editable.formatter.format(pasteContent);\r\n          _this.editable.formatter.decorate(pasteContent);\r\n          _this.editable.formatter.beautify(pasteContent.children());\r\n          pasteContent = pasteContent.contents();\r\n        }\r\n        _this._pasteBin.remove();\r\n        _this._pasteBin = null;\r\n        return callback(pasteContent);\r\n      };\r\n    })(this), 0);\r\n  };\r\n\r\n  Clipboard.prototype._processPasteContent = function(pasteContent) {\r\n    var $blockEl, $img, blob, children, dataURLtoBlob, img, insertPosition, k, l, lastLine, len, len1, len2, len3, len4, line, lines, m, node, o, q, ref, ref1, ref2, uploadOpt, uploader;\r\n    if (this.editable.trigger('pasting', [pasteContent]) === false) {\r\n      return;\r\n    }\r\n    $blockEl = this._pasteInBlockEl;\r\n    if (!pasteContent) {\r\n      return;\r\n    }\r\n    if (this._pastePlainText) {\r\n      if ($blockEl.is('table')) {\r\n        lines = pasteContent.split('\\n');\r\n        lastLine = lines.pop();\r\n        for (k = 0, len = lines.length; k < len; k++) {\r\n          line = lines[k];\r\n          this.editable.selection.insertNode(document.createTextNode(line));\r\n          this.editable.selection.insertNode($('<br/>'));\r\n        }\r\n        this.editable.selection.insertNode(document.createTextNode(lastLine));\r\n      } else {\r\n        pasteContent = $('<div/>').text(pasteContent);\r\n        ref = pasteContent.contents();\r\n        for (l = 0, len1 = ref.length; l < len1; l++) {\r\n          node = ref[l];\r\n          this.editable.selection.insertNode($(node)[0]);\r\n        }\r\n      }\r\n    } else if ($blockEl.is(this.editable.body)) {\r\n      for (m = 0, len2 = pasteContent.length; m < len2; m++) {\r\n        node = pasteContent[m];\r\n        this.editable.selection.insertNode(node);\r\n      }\r\n    } else if (pasteContent.length < 1) {\r\n      return;\r\n    } else if (pasteContent.length === 1) {\r\n      if (pasteContent.is('p')) {\r\n        children = pasteContent.contents();\r\n        if ($blockEl.is('h1, h2, h3, h4, h5')) {\r\n          if (children.length) {\r\n            children.css('font-size', '');\r\n          }\r\n        }\r\n        if (children.length === 1 && children.is('img')) {\r\n          $img = children;\r\n          if (/^data:image/.test($img.attr('src'))) {\r\n            if (!this.opts.pasteImage) {\r\n              return;\r\n            }\r\n            blob = this.editable.util.dataURLtoBlob($img.attr(\"src\"));\r\n            blob.name = \"Clipboard Image.png\";\r\n            uploadOpt = {};\r\n            uploadOpt[this.opts.pasteImage] = true;\r\n            if ((ref1 = this.editable.uploader) != null) {\r\n              ref1.upload(blob, uploadOpt);\r\n            }\r\n            return;\r\n          } else if (new RegExp('^blob:' + location.origin + '/').test($img.attr('src'))) {\r\n            if (!this.opts.pasteImage) {\r\n              return;\r\n            }\r\n            uploadOpt = {};\r\n            uploadOpt[this.opts.pasteImage] = true;\r\n            dataURLtoBlob = this.editable.util.dataURLtoBlob;\r\n            uploader = this.editable.uploader;\r\n            img = new Image;\r\n            img.onload = function() {\r\n              var canvas;\r\n              canvas = document.createElement('canvas');\r\n              canvas.width = img.naturalWidth;\r\n              canvas.height = img.naturalHeight;\r\n              canvas.getContext('2d').drawImage(img, 0, 0);\r\n              blob = dataURLtoBlob(canvas.toDataURL('image/png'));\r\n              blob.name = 'Clipboard Image.png';\r\n              if (uploader !== null) {\r\n                uploader.upload(blob, uploadOpt);\r\n              }\r\n            };\r\n            img.src = $img.attr('src');\r\n            return;\r\n          } else if ($img.is('img[src^=\"webkit-fake-url://\"]')) {\r\n            return;\r\n          }\r\n        }\r\n        for (o = 0, len3 = children.length; o < len3; o++) {\r\n          node = children[o];\r\n          this.editable.selection.insertNode(node);\r\n        }\r\n      } else if ($blockEl.is('p') && this.editable.util.isEmptyNode($blockEl)) {\r\n        $blockEl.replaceWith(pasteContent);\r\n        this.editable.selection.setRangeAtEndOf(pasteContent);\r\n      } else if (pasteContent.is('ul, ol')) {\r\n        if (pasteContent.find('li').length === 1) {\r\n          pasteContent = $('<div/>').text(pasteContent.text());\r\n          ref2 = pasteContent.contents();\r\n          for (q = 0, len4 = ref2.length; q < len4; q++) {\r\n            node = ref2[q];\r\n            this.editable.selection.insertNode($(node)[0]);\r\n          }\r\n        } else if ($blockEl.is('li')) {\r\n          $blockEl.parent().after(pasteContent);\r\n          this.editable.selection.setRangeAtEndOf(pasteContent);\r\n        } else {\r\n          $blockEl.after(pasteContent);\r\n          this.editable.selection.setRangeAtEndOf(pasteContent);\r\n        }\r\n      } else {\r\n        $blockEl.after(pasteContent);\r\n        this.editable.selection.setRangeAtEndOf(pasteContent);\r\n      }\r\n    } else {\r\n      if ($blockEl.is('li')) {\r\n        $blockEl = $blockEl.parent();\r\n      }\r\n      if (this.editable.selection.rangeAtStartOf($blockEl)) {\r\n        insertPosition = 'before';\r\n      } else if (this.editable.selection.rangeAtEndOf($blockEl)) {\r\n        insertPosition = 'after';\r\n      } else {\r\n        this.editable.selection.breakBlockEl($blockEl);\r\n        insertPosition = 'before';\r\n      }\r\n      $blockEl[insertPosition](pasteContent);\r\n      this.editable.selection.setRangeAtEndOf(pasteContent.last());\r\n    }\r\n    return this.editable.inputManager.throttledValueChanged();\r\n  };\r\n\r\n  Clipboard.prototype._cleanPasteFontSize = function(node) {\r\n    var $node, sizeMap;\r\n    $node = $(node);\r\n    if (!($node.length > 0)) {\r\n      return;\r\n    }\r\n    sizeMap = ['1.5em', '1.25em', '0.75em', '0.5em'];\r\n    return $node.find('[style*=\"font-size\"]').map(function(i, el) {\r\n      var $el;\r\n      $el = $(el);\r\n      if (langx.inArray($el.css('font-size'), sizeMap) < 0) {\r\n        return $el.css('font-size', '');\r\n      }\r\n    });\r\n  };\r\n\r\n  return contents.Clipboard = Clipboard;\r\n\r\n});\r\n\r\n\ndefine('skylark-domx-contents/Editable',[\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-domx-noder\",\r\n\t\"skylark-domx-query\",\r\n\t\"./contents\",\r\n\t\"./Hotkeys\",\r\n\t\"./Util\",\r\n\t\"./InputManager\", \r\n\t\"./Selection\", \r\n\t\"./UndoManager\", \r\n\t\"./Keystroke\",\r\n\t\"./Formatter\", \r\n\t\"./Indentation\", \r\n\t\"./Clipboard\"\r\n],function(langx, noder, $, contents,Hotkeys,Util,InputManager,Selection,UndoManager,Keystroke,Formatter,Indentation,Clipboard){\r\n  var Editable = langx.Evented.inherit({\r\n    init : function(el,opts) {\r\n    \tthis.$el = $(el);\r\n    \tthis.textarea = $(opts.textarea);\r\n    \tthis.body = $(opts.body);\r\n\r\n    \tvar pluginOpts = {\r\n    \t\tclassPrefix : opts.classPrefix\r\n    \t};\r\n\r\n        this.util = new Util(this,pluginOpts);\r\n\r\n\t\tthis.hotkeys = new Hotkeys({\r\n\t\t  el: this.body\r\n\t\t});\r\n\r\n      this.inputManager = new InputManager(this,pluginOpts);\r\n      this.selection = new Selection(this,pluginOpts);\r\n      this.undoManager = new UndoManager(this,pluginOpts);\r\n      this.keystroke = new Keystroke(this,pluginOpts);\r\n      this.formatter = new Formatter(this,pluginOpts);\r\n      this.indentation = new Indentation(this,pluginOpts);\r\n      this.clipboard = new Clipboard(this,pluginOpts);\r\n\r\n\t\tif (this.util.os.mac) {\r\n\t\t  this.$el.addClass(opts.classPrefix + 'mac');\r\n\t\t} else if (this.util.os.linux) {\r\n\t\t  this.$el.addClass(opts.classPrefix + 'linux');\r\n\t\t}\r\n\t\tif (this.util.os.mobile) {\r\n\t\t  this.$el.addClass(opts.classPrefix + 'mobile');\r\n\t\t}\r\n\r\n      if (this.util.browser.mozilla) {\r\n        this.util.reflow();\r\n        try {\r\n          document.execCommand('enableObjectResizing', false, false);\r\n          return document.execCommand('enableInlineTableEditing', false, false);\r\n        } catch (_error) {\r\n          e = _error;\r\n        }\r\n      }\r\n\r\n    },\r\n\r\n\tsetValue : function(val) {\r\n\t\tthis.textarea.val(val);\r\n\t\tthis.body.get(0).innerHTML = val;\r\n\t\tthis.formatter.format();\r\n\t\tthis.formatter.decorate();\r\n\t\tthis.util.reflow(this.body);\r\n\t\tthis.inputManager.lastCaretPosition = null;\r\n\t},\r\n\r\n\tgetValue : function() {\r\n\t\treturn this.sync();\r\n\t},\r\n\r\n\tsync : function() {\r\n\t\tvar children, cloneBody, emptyP, firstP, lastP, val;\r\n\t\tcloneBody = this.body.clone();\r\n\t\tthis.formatter.undecorate(cloneBody);\r\n\t\tthis.formatter.format(cloneBody);\r\n\t\tthis.formatter.autolink(cloneBody);\r\n\t\tchildren = cloneBody.children();\r\n\t\tlastP = children.last('p');\r\n\t\tfirstP = children.first('p');\r\n\t\twhile (lastP.is('p') && this.util.isEmptyNode(lastP)) {\r\n\t\t  emptyP = lastP;\r\n\t\t  lastP = lastP.prev('p');\r\n\t\t  emptyP.remove();\r\n\t\t}\r\n\t\twhile (firstP.is('p') && this.util.isEmptyNode(firstP)) {\r\n\t\t  emptyP = firstP;\r\n\t\t  firstP = lastP.next('p');\r\n\t\t  emptyP.remove();\r\n\t\t}\r\n\t\tcloneBody.find('img.uploading').remove();\r\n\t\tval = langx.trim(cloneBody.html());\r\n\t\tthis.textarea.val(val);\r\n\t\treturn val;\r\n\t},\r\n\r\n\tfocus : function() {\r\n\t\tvar $blockEl, range;\r\n\t\tif (!(this.body.is(':visible') && this.body.is('[contenteditable]'))) {\r\n\t\t  this.$el.find('textarea:visible').focus();\r\n\t\t  return;\r\n\t\t}\r\n\t\tif (this.inputManager.lastCaretPosition) {\r\n\t\t  this.undoManager.caretPosition(this.inputManager.lastCaretPosition);\r\n\t\t  return this.inputManager.lastCaretPosition = null;\r\n\t\t} else {\r\n\t\t  $blockEl = this.body.children().last();\r\n\t\t  if (!$blockEl.is('p')) {\r\n\t\t    $blockEl = $('<p/>').append(this.util.phBr).appendTo(this.body);\r\n\t\t  }\r\n\t\t  range = document.createRange();\r\n\t\t  return this.selection.setRangeAtEndOf($blockEl, range);\r\n\t\t}\r\n\t},\r\n\r\n\tblur : function() {\r\n\t\tif (this.body.is(':visible') && this.body.is('[contenteditable]')) {\r\n\t\t  return this.body.blur();\r\n\t\t} else {\r\n\t\t  return this.body.find('textarea:visible').blur();\r\n\t\t}\r\n\t},\r\n\r\n\tisActive : function(state) {\r\n\t\treturn document.queryCommandState(state) === true; //'bold'\r\n\t},\r\n\r\n\tstatus : function(cmd,htmlTag) {\r\n\t\tif (cmd === \"alignment\") {\r\n\t\t    var nodes = this.selection.nodes().filter(htmlTag);\r\n\t\t    if (nodes.length < 1) {\r\n\t\t    \treturn null;\r\n\t\t    } else {\r\n\t\t      return nodes.first().css('text-align');\r\n\t\t    }\r\n\r\n\t\t}\r\n\t},\r\n\r\n\talignment : function(align,htmlTag) {\r\n\t    if (align !== 'left' && align !== 'center' && align !== 'right') {\r\n\t      throw new Error(\"simditor alignment button: invalid align \" + align);\r\n\t    }\r\n    \tvar nodes = this.selection.nodes().filter(htmlTag);\r\n\t    nodes.css({\r\n\t      'text-align': align === 'left' ? '' : align\r\n\t    });\r\n\t    this.trigger('valuechanged');\r\n\t    return this.inputManager.throttledSelectionChanged();\r\n\r\n\t},\r\n\r\n\tblockquote : function(disableTag) {\r\n\t    var $rootNodes, clearCache, nodeCache;\r\n\t    $rootNodes = this.selection.rootNodes();\r\n\t    $rootNodes = $rootNodes.filter(function(i, node) {\r\n\t      return !$(node).parent().is('blockquote');\r\n\t    });\r\n\t    this.selection.save();\r\n\t    nodeCache = [];\r\n\t    clearCache = function() {\r\n\t        if (nodeCache.length > 0) {\r\n\t          $(\"<blockquote/>\").insertBefore(nodeCache[0]).append(nodeCache);\r\n\t          return nodeCache.length = 0;\r\n\t        }\r\n\t    };\r\n\t    $rootNodes.each((function(_this) {\r\n\t      return function(i, node) {\r\n\t        var $node;\r\n\t        $node = $(node);\r\n\t        if (!$node.parent().is(_this.body)) {\r\n\t          return;\r\n\t        }\r\n\t        if ($node.is('blockquote')) {\r\n\t          clearCache();\r\n\t          return $node.children().unwrap();\r\n\t        } else if ($node.is(disableTag) || _this.util.isDecoratedNode($node)) {\r\n\t          return clearCache();\r\n\t        } else {\r\n\t          return nodeCache.push(node);\r\n\t        }\r\n\t      };\r\n\t    })(this));\r\n\t    clearCache();\r\n\t    this.selection.restore();\r\n\t    return this.trigger('valuechanged');\r\n\r\n\t},\r\n\r\n\tblockCode : function(htmlTag,disableTag) {\r\n\t    var $rootNodes, clearCache, nodeCache, resultNodes;\r\n\t    $rootNodes = this.selection.rootNodes();\r\n\t    nodeCache = [];\r\n\t    resultNodes = [];\r\n\t    clearCache = (function(_this) {\r\n\t      return function() {\r\n\t        var $pre;\r\n\t        if (!(nodeCache.length > 0)) {\r\n\t          return;\r\n\t        }\r\n\t        $pre = $(\"<\" + htmlTag + \"/>\").insertBefore(nodeCache[0]).text(_this.formatter.clearHtml(nodeCache));\r\n\t        resultNodes.push($pre[0]);\r\n\t        return nodeCache.length = 0;\r\n\t      };\r\n\t    })(this);\r\n\t    $rootNodes.each((function(_this) {\r\n\t      return function(i, node) {\r\n\t        var $node, $p;\r\n\t        $node = $(node);\r\n\t        if ($node.is(htmlTag)) {\r\n\t          clearCache();\r\n\t          $p = $('<p/>').append($node.html().replace('\\n', '<br/>')).replaceAll($node);\r\n\t          return resultNodes.push($p[0]);\r\n\t        } else if ($node.is(disableTag) || _this.util.isDecoratedNode($node) || $node.is('blockquote')) {\r\n\t          return clearCache();\r\n\t        } else {\r\n\t          return nodeCache.push(node);\r\n\t        }\r\n\t      };\r\n\t    })(this));\r\n\t    clearCache();\r\n\t    this.selection.setRangeAtEndOf($(resultNodes).last());\r\n\t    return this.trigger('valuechanged');\r\n\r\n\t},\r\n\r\n\tfontColor : function(hex,isDefault,coloredText) {\r\n        var range = this.selection.range();\r\n        if (!isDefault && range.collapsed) {\r\n          textNode = document.createTextNode(coloredText);\r\n          range.insertNode(textNode);\r\n          range.selectNodeContents(textNode);\r\n        }\r\n        this.selection.range(range);\r\n        document.execCommand('styleWithCSS', false, true);\r\n        document.execCommand('foreColor', false, hex);\r\n        document.execCommand('styleWithCSS', false, false);\r\n        if (!this.util.support.oninput) {\r\n          return this.trigger('valuechanged');\r\n        }\r\n\r\n\t},\r\n\r\n\tfontScale : function(param,sizeMap) {\r\n  \t\tif (!sizeMap){\r\n  \t\t\tsizeMap = {\r\n\t\t\t    'x-large': '1.5em',\r\n\t\t\t    'large': '1.25em',\r\n\t\t\t    'small': '.75em',\r\n\t\t\t    'x-small': '.5em'\r\n\t\t   };\r\n\t\t}\r\n\r\n\t    var $scales, containerNode, range;\r\n\t    range = this.selection.range();\r\n\t    if (range.collapsed) {\r\n\t      return;\r\n\t    }\r\n\t    this.selection.range(range);\r\n\t    document.execCommand('styleWithCSS', false, true);\r\n\t    document.execCommand('fontSize', false, param);\r\n\t    document.execCommand('styleWithCSS', false, false);\r\n\t    this.selection.reset();\r\n\t    this.selection.range();\r\n\t    containerNode = this.selection.containerNode();\r\n\t    if (containerNode[0].nodeType === Node.TEXT_NODE) {\r\n\t      $scales = containerNode.closest('span[style*=\"font-size\"]');\r\n\t    } else {\r\n\t      $scales = containerNode.find('span[style*=\"font-size\"]');\r\n\t    }\r\n\t    $scales.each((function(_this) {\r\n\t      return function(i, n) {\r\n\t        var $span, size;\r\n\t        $span = $(n);\r\n\t        size = n.style.fontSize;\r\n\t        if (/large|x-large|small|x-small/.test(size)) {\r\n\t          return $span.css('fontSize', sizeMap[size]);\r\n\t        } else if (size === 'medium') {\r\n\t          if ($span[0].style.length > 1) {\r\n\t            return $span.css('fontSize', '');\r\n\t          } else {\r\n\t            return $span.replaceWith($span.contents());\r\n\t          }\r\n\t        }\r\n\t      };\r\n\t    })(this));\r\n\t    return this.trigger('valuechanged');\r\n\t},\r\n\r\n\thr : function() {\r\n\t    var $hr, $newBlock, $nextBlock, $rootBlock;\r\n\t    $rootBlock = this.selection.rootNodes().first();\r\n\t    $nextBlock = $rootBlock.next();\r\n\t    if ($nextBlock.length > 0) {\r\n\t      this.selection.save();\r\n\t    } else {\r\n\t      $newBlock = $('<p/>').append(this.util.phBr);\r\n\t    }\r\n\t    $hr = $('<hr/>').insertAfter($rootBlock);\r\n\t    if ($newBlock) {\r\n\t      $newBlock.insertAfter($hr);\r\n\t      this.selection.setRangeAtStartOf($newBlock);\r\n\t    } else {\r\n\t      this.selection.restore();\r\n\t    }\r\n\t    return this.trigger('valuechanged');\r\n\t},\r\n\r\n\tinlineCode : function(active) {\r\n\t    var $code, $contents, range;\r\n\t    range = this.selection.range();\r\n\t    if (this.active) {\r\n\t      range.selectNodeContents(this.node[0]);\r\n\t      this.selection.save(range);\r\n\t      this.node.contents().unwrap();\r\n\t      this.selection.restore();\r\n\t    } else {\r\n\t      $contents = $(range.extractContents());\r\n\t      $code = $(\"<\" + this.htmlTag + \"/>\").append($contents.contents());\r\n\t      range.insertNode($code[0]);\r\n\t      range.selectNodeContents($code[0]);\r\n\t      this.selection.range(range);\r\n\t    }\r\n\t    return this.trigger('valuechanged');\r\n\r\n\t},\r\n\r\n\tindent : function() {\r\n\t    return this.indentation.indent();\r\n\t},\r\n\r\n\tlink : function(active,defaultLinkText) {\r\n\t    var $contents, $link, $newBlock, linkText, range, txtNode;\r\n\t    range = this.selection.range();\r\n\t    if (active) {\r\n\t\t  var node = this.selection.startNodes();\r\n\t      txtNode = document.createTextNode(node.text());\r\n\t      node.replaceWith(txtNode);\r\n\t      range.selectNode(txtNode);\r\n\t    } else {\r\n\t      $contents = $(range.extractContents());\r\n\t      linkText = this.formatter.clearHtml($contents.contents(), false);\r\n\t      $link = $('<a/>', {\r\n\t        href: '',\r\n\t        target: '_blank',\r\n\t        text: linkText || defaultLinkText\r\n\t      });\r\n\t      if (this.selection.blockNodes().length > 0) {\r\n\t        range.insertNode($link[0]);\r\n\t      } else {\r\n\t        $newBlock = $('<p/>').append($link);\r\n\t        range.insertNode($newBlock[0]);\r\n\t      }\r\n\t      range.selectNodeContents($link[0]);\r\n\t    }\r\n\t    this.selection.range(range);\r\n\t    return this.trigger('valuechanged');\r\n\r\n\t},\r\n\r\n\tlist : function(type,param,disableTag) {\r\n      var $list, $rootNodes, anotherType;\r\n      $rootNodes = this.selection.blockNodes();\r\n      anotherType = type === 'ul' ? 'ol' : 'ul';\r\n      this.selection.save();\r\n      $list = null;\r\n      $rootNodes.each((function(_this) {\r\n        return function(i, node) {\r\n          var $node;\r\n          $node = $(node);\r\n          if ($node.is('blockquote, li') || $node.is(disableTag) || _this.util.isDecoratedNode($node) || !noder.contains(document, node)) {\r\n            return;\r\n          }\r\n          if ($node.is(type)) {\r\n            $node.children('li').each(function(i, li) {\r\n              var $childList, $li;\r\n              $li = $(li);\r\n              $childList = $li.children('ul, ol').insertAfter($node);\r\n              return $('<p/>').append($(li).html() || _this.util.phBr).insertBefore($node);\r\n            });\r\n            return $node.remove();\r\n          } else if ($node.is(anotherType)) {\r\n            return $('<' + type + '/>').append($node.contents()).replaceAll($node);\r\n          } else if ($list && $node.prev().is($list)) {\r\n            $('<li/>').append($node.html() || _this.util.phBr).appendTo($list);\r\n            return $node.remove();\r\n          } else {\r\n            $list = $(\"<\" + type + \"><li></li></\" + type + \">\");\r\n            $list.find('li').append($node.html() || _this.util.phBr);\r\n            return $list.replaceAll($node);\r\n          }\r\n        };\r\n      })(this));\r\n      this.selection.restore();\r\n      return this.trigger('valuechanged');\r\n\r\n\t},\r\n\r\n\toutdent : function() {\r\n\t    return this.indentation.indent(true);\r\n\t},\r\n\r\n\t// toggle\r\n\ttitle : function(param,disableTag) {\r\n\t\tdocument.execCommand('formatBlock', false, param);\r\n\r\n\t\t/*\r\n\t    var $rootNodes;\r\n\t    $rootNodes = this.selection.rootNodes();\r\n\t    this.selection.save();\r\n\t    $rootNodes.each((function(_this) {\r\n\t      return function(i, node) {\r\n\t        var $node;\r\n\t        $node = $(node);\r\n\t        if ($node.is('blockquote') || $node.is(param) || $node.is(disableTag) || _this.util.isDecoratedNode($node)) {\r\n\t          return;\r\n\t        }\r\n\t        return $('<' + param + '/>').append($node.contents()).replaceAll($node);\r\n\t      };\r\n\t    })(this));\r\n\t    this.selection.restore();\r\n\t    */\r\n\t    return this.trigger('valuechanged');\r\n\r\n\t}\r\n\r\n\r\n\r\n  });\r\n\r\n\tvar commands =  [\r\n\t\t\"bold\", // toggle \r\n\t\t\"insertImage\",\r\n\t\t\"insertorderedlist\",\r\n\t\t\"insertunorderedlist\",\r\n\t\t\"italic\", // toggle\r\n\t\t\"justifyLeft\",\r\n\t\t\"justifyCenter\",\r\n\t\t\"justifyFull\",\r\n\t\t\"justifyRight\",\r\n\t\t\"strikethrough\",\r\n\t\t\"underline\",\r\n\t\t\"undo\"\r\n\t];\r\n\r\n\tcommands.forEach(function(cmd){\r\n\t\tEditable.prototype[cmd] = function() {\r\n\t      document.execCommand(cmd,false,null);\r\n\t      if (!this.util.support.oninput) {\r\n\t        this.trigger('valuechanged');\r\n\t      }\r\n\t      return $(document).trigger('selectionchange');\t\t\t\t\t\r\n\t\t};\r\n\t});\r\n\r\n\r\n\tfunction editable(el,opts) {\r\n\r\n\t\t/*\t\r\n\t\tif (value === undefined) {\r\n   \t\t\treturn node.contentEditable == \"true\"\r\n\t\t} else {\r\n\t\t\tif (!value) {\r\n\t\t\t\tvalue = null;\r\n\t\t\t} else {\r\n\t\t\t\tvalue = \"true\";\r\n\t\t\t}\r\n\t\t\tdatax.attr(node,\"contentEditable\",value);\r\n\t\t}\r\n\t\t*/\r\n\t\treturn new Editable(el,opts);\r\n\t\t\r\n\t};\r\n\r\n\r\n\treturn contents.Editable  = Editable;\r\n\t\r\n});\ndefine('skylark-domx-contents/main',[\r\n\t\"./contents\",\r\n\t\"./Editable\"\r\n],function(contents){\r\n\r\n\treturn contents;\r\n});\ndefine('skylark-domx-contents', ['skylark-domx-contents/main'], function (main) { return main; });\n\n"]}