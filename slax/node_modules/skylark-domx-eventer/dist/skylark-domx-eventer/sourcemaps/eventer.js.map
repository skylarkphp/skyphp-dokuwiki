{"version":3,"sources":["eventer.js"],"names":["define","skylark","langx","browser","finder","noder","datax","mixin","each","uid","Array","prototype","slice","ignoreProperties","eventMethods","preventDefault","stopImmediatePropagation","stopPropagation","readyRE","compatible","event","source","isDefaultPrevented","name","predicate","sourceMethod","this","returnTrue","apply","arguments","returnFalse","parse","segs","split","type","ns","sort","join","isHandler","callback","isFunction","handleEvent","NativeEventCtors","window","NativeEvents","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","error","selectionchange","submit","reset","fullscreenchange","fullscreenerror","focus","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","progress","textInput","tap","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","createEvent","props","isString","parsed","bubbles","cancelable","namespace","e","idx","getEventCtor","safeMixin","createProxy","src","key","proxy","originalEvent","test","undefined","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","klass","init","target","_target","_event","_bindings","add","fn","options","bindings","binding","push","self","_listener","domEvt","elm","args","_args","isDefined","concat","match","isImmediatePropagationStopped","selector","one","data","indexOf","closest","currentTarget","liveFired","related","relatedTarget","contains","remove","ctx","addEventListener","console","warn","matcher","RegExp","replace","filter","length","removeEventListener","EventsHandler","_handler","register","specialEvent","bindingEvent","bindType","bindEventName","events","unregister","listener","findHandler","id","handler","focusedQueue","on","isPlainObject","isBoolean","forEach","ready","trigger","evented","Event","dispatchEvent","call","document","readyState","body","defer","loop","i","start","resizedQueue","keyCodeLookup","backspace","comma","delete","down","end","enter","escape","home","left","page_down","page_up","period","right","space","tab","up","eventer","support","transition","transitionEnd","delegateType","clear","create","focused","includes","keys","isNativeEvent","isArray","off","resized","shortcuts","registry","run","shortcut","n","metaKey","ctrlKey","ctrl","alt","altKey","shift","shiftKey","keyCode","charCode","nodeName","pattern","toLowerCase","shortcutKey","setting","charCodeAt","toUpperCase","regKey","special","stop","all","attach"],"mappings":"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","file":"../eventer.js","sourcesContent":["define([\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        if (event) {\r\n            var segs = (\"\" + event).split(\".\");\r\n            return {\r\n                type: segs[0],\r\n                ns: segs.slice(1).sort().join(\" \")\r\n            };\r\n        } else {\r\n            return {\r\n                type : null,\r\n                ns : null\r\n            }\r\n        }\r\n    }\r\n\r\n    function isHandler(callback) {\r\n        return callback && (langx.isFunction(callback) || langx.isFunction(callback.handleEvent));\r\n    }\r\n\r\n    var NativeEventCtors = [\r\n            window[\"CustomEvent\"], // 0 default\r\n            window[\"CompositionEvent\"], // 1\r\n            window[\"DragEvent\"], // 2\r\n            window[\"Event\"], // 3\r\n            window[\"FocusEvent\"], // 4\r\n            window[\"KeyboardEvent\"], // 5\r\n            window[\"MessageEvent\"], // 6\r\n            window[\"MouseEvent\"], // 7\r\n            window[\"MouseScrollEvent\"], // 8\r\n            window[\"MouseWheelEvent\"], // 9\r\n            window[\"MutationEvent\"], // 10\r\n            window[\"ProgressEvent\"], // 11\r\n            window[\"TextEvent\"], // 12\r\n            window[\"TouchEvent\"], // 13\r\n            window[\"UIEvent\"], // 14\r\n            window[\"WheelEvent\"], // 15\r\n            window[\"ClipboardEvent\"] // 16\r\n        ],\r\n        NativeEvents = {\r\n            \"compositionstart\": 1, // CompositionEvent\r\n            \"compositionend\": 1, // CompositionEvent\r\n            \"compositionupdate\": 1, // CompositionEvent\r\n\r\n            \"beforecopy\": 16, // ClipboardEvent\r\n            \"beforecut\": 16, // ClipboardEvent\r\n            \"beforepaste\": 16, // ClipboardEvent\r\n            \"copy\": 16, // ClipboardEvent\r\n            \"cut\": 16, // ClipboardEvent\r\n            \"paste\": 16, // ClipboardEvent\r\n\r\n            \"drag\": 2, // DragEvent\r\n            \"dragend\": 2, // DragEvent\r\n            \"dragenter\": 2, // DragEvent\r\n            \"dragexit\": 2, // DragEvent\r\n            \"dragleave\": 2, // DragEvent\r\n            \"dragover\": 2, // DragEvent\r\n            \"dragstart\": 2, // DragEvent\r\n            \"drop\": 2, // DragEvent\r\n\r\n            \"abort\": 3, // Event\r\n            \"change\": 3, // Event\r\n            \"error\": 3, // Event\r\n            \"selectionchange\": 3, // Event\r\n            \"submit\": 3, // Event\r\n            \"reset\": 3, // Event\r\n            'fullscreenchange':3,\r\n            'fullscreenerror':3,\r\n\r\n/*\r\n            'disablepictureinpicturechanged':3,\r\n            'ended':3,\r\n            'enterpictureinpicture':3,\r\n            'durationchange':3,\r\n            'leavepictureinpicture':3,\r\n            'loadstart' : 3,\r\n            'loadedmetadata':3,\r\n            'pause' : 3,\r\n            'play':3,\r\n            'posterchange':3,\r\n            'ratechange':3,\r\n            'seeking' : 3,\r\n            'sourceset':3,\r\n            'suspend':3,\r\n            'textdata':3,\r\n            'texttrackchange':3,\r\n            'timeupdate':3,\r\n            'volumechange':3,\r\n            'waiting' : 3,\r\n*/\r\n\r\n\r\n            \"focus\": 4, // FocusEvent\r\n            \"blur\": 4, // FocusEvent\r\n            \"focusin\": 4, // FocusEvent\r\n            \"focusout\": 4, // FocusEvent\r\n\r\n            \"keydown\": 5, // KeyboardEvent\r\n            \"keypress\": 5, // KeyboardEvent\r\n            \"keyup\": 5, // KeyboardEvent\r\n\r\n            \"message\": 6, // MessageEvent\r\n\r\n            \"click\": 7, // MouseEvent\r\n            \"contextmenu\": 7, // MouseEvent\r\n            \"dblclick\": 7, // MouseEvent\r\n            \"mousedown\": 7, // MouseEvent\r\n            \"mouseup\": 7, // MouseEvent\r\n            \"mousemove\": 7, // MouseEvent\r\n            \"mouseover\": 7, // MouseEvent\r\n            \"mouseout\": 7, // MouseEvent\r\n            \"mouseenter\": 7, // MouseEvent\r\n            \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n            \"progress\" : 11, //ProgressEvent\r\n\r\n            \"textInput\": 12, // TextEvent\r\n\r\n            \"tap\": 13,\r\n            \"touchstart\": 13, // TouchEvent\r\n            \"touchmove\": 13, // TouchEvent\r\n            \"touchend\": 13, // TouchEvent\r\n\r\n            \"load\": 14, // UIEvent\r\n            \"resize\": 14, // UIEvent\r\n            \"select\": 14, // UIEvent\r\n            \"scroll\": 14, // UIEvent\r\n            \"unload\": 14, // UIEvent,\r\n\r\n            \"wheel\": 15, // WheelEvent\r\n\r\n\r\n\r\n        };\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return NativeEventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        e.type = self._event; // convert realEvent to listened event\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result ;\r\n                            if (fn.handleEvent) {\r\n                                result = fn.handleEvent.apply(fn,args);\r\n                            } else {\r\n                                if (options.ctx) {\r\n                                    result = fn.apply(options.ctx, args);                                   \r\n                                } else {\r\n                                    result = fn.apply(match, args);                                   \r\n                                }\r\n                            }\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n\r\n    /*   \r\n     * Remove all event handlers from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     */\r\n    function clear(elm) {\r\n        var handler = findHandler(elm);\r\n\r\n        handler.unregister();\r\n\r\n        return this;\r\n    }\r\n\r\n    var focusedQueue = [],\r\n        focuser = langx.loop(function(){\r\n            for (var i = 0; i<focusedQueue.length; i++) {\r\n                trigger(focusedQueue[i],\"focused\");\r\n            }\r\n            focusedQueue = [];\r\n        });\r\n\r\n    focuser.start();\r\n\r\n\r\n    function focused(elm) {\r\n        if (!focusedQueue.includes(elm)) {\r\n            focusedQueue.push(elm)\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !isHandler(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, ctx,one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !isHandler(callback)) {\r\n            one = ctx;\r\n            ctx = callback;\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (isHandler(data)) {\r\n            one = ctx;\r\n            ctx = callback;\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (langx.isBoolean(ctx)) {\r\n            one = ctx;\r\n            ctx = undefined;\r\n        }\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                ctx : ctx,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(...args) {\r\n        on(...args, true);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var resizedQueue = [],\r\n        resizer = langx.loop(function(){\r\n            for (var i = 0; i<resizedQueue.length; i++) {\r\n                trigger(resizedQueue[i],\"resized\");\r\n            }\r\n            resizedQueue = [];\r\n        });\r\n\r\n    resizer.start();\r\n\r\n\r\n    function resized(elm) {\r\n        if (!resizedQueue.includes(elm)) {\r\n            resizedQueue.push(elm)\r\n        }\r\n    }\r\n\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transition) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function isNativeEvent(events) {\r\n        if (langx.isString(events)) {\r\n            return !!NativeEvents[events];\r\n        } else if (langx.isArray(events)) {\r\n            for (var i=0; i<events.length; i++) {\r\n                if (NativeEvents[events]) {\r\n                    return false;\r\n                }\r\n            }\r\n            return events.length > 0;\r\n        }\r\n    }\r\n\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        NativeEvents : NativeEvents,\r\n        \r\n        clear,\r\n        \r\n        create: createEvent,\r\n\r\n        focused,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        isNativeEvent,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        resized,\r\n        \r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    each(NativeEvents,function(name){\r\n        eventer[name] = function(elm,selector,data,callback) {\r\n            if (arguments.length>1) {\r\n                return this.on(elm,name,selector,data,callback);\r\n            } else {\r\n                if (name == \"focus\") {\r\n                    if (elm.focus) {\r\n                        elm.focus();\r\n                    }\r\n                } else if (name == \"blur\") {\r\n                    if (elm.blur) {\r\n                        elm.blur();\r\n                    }\r\n                } else if (name == \"click\") {\r\n                    if (elm.click) {\r\n                        elm.click();\r\n                    }\r\n                } else {\r\n                    this.trigger(elm,name);\r\n                }\r\n\r\n                return this;\r\n            }\r\n        };\r\n    });\r\n\r\n    return skylark.attach(\"domx.eventer\",eventer);\r\n});"]}