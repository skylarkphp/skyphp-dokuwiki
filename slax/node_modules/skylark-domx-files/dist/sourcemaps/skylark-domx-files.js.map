{"version":3,"sources":["skylark-domx-files.js"],"names":["define","skylark","files","attach","arrays","Deferred","styler","eventer","velm","$","webentry","dropzone","elm","params","hoverClass","droppedCallback","dropped","enterdCount","on","e","dataTransfer","types","indexOf","stop","addClass","removeClass","items","length","webkitGetAsEntry","getAsEntry","all","map","item","then","this","delegate","fn","wraps","wrapper_every_act","objects","pastezone","pastedCallback","pasted","originalEvent","clipboardData","each","index","file","getAsFile","push","select","picker","preventDefault","main"],"mappings":"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","file":"../skylark-domx-files.js","sourcesContent":["define('skylark-domx-files/files',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n\r\n\r\n    var files = function() {\r\n        return files;\r\n    };\r\n\r\n    return skylark.attach(\"domx.files\", files);\r\n});\n  define('skylark-domx-files/dropzone',[\r\n    \"skylark-langx/arrays\",\r\n    \"skylark-langx/Deferred\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\",   \r\n    \"skylark-io-diskfs/webentry\",   \r\n    \"./files\"\r\n],function(arrays,Deferred, styler, eventer, velm, $, webentry, files){  /*\r\n     * Make the specified element to could accept HTML5 file drag and drop.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"hover\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        eventer.on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n                enterdCount++;\r\n                styler.addClass(elm, hoverClass)\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                enterdCount--\r\n                if (enterdCount == 0) {\r\n                    styler.removeClass(elm, hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                styler.removeClass(elm, hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                            items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            arrays.map(items, function(item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n    files.dropzone = dropzone;\r\n\r\n    velm.delegate([\r\n        \"dropzone\"\r\n    ],files);\r\n\r\n\r\n    $.fn.dropzone = $.wraps.wrapper_every_act(files.dropzone, files);\r\n\r\n    return dropzone;\r\n});\ndefine('skylark-domx-files/pastezone',[\r\n    \"skylark-langx/objects\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\",   \r\n    \"./files\"\r\n],function(objects, eventer,velm,$, files){\r\n    function pastezone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"hover\",\r\n            pastedCallback = params.pasted;\r\n\r\n        eventer.on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                objects.each(items, function(index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    files.pastezone = pastezone;\r\n\r\n    velm.delegate([\r\n        \"pastezone\"\r\n    ],files);\r\n\r\n    $.fn.pastezone = $.wraps.wrapper_every_act(files.pastezone, files);\r\n\r\n    return pastezone;\r\n\r\n});\r\n\ndefine('skylark-domx-files/picker',[\r\n    \"skylark-langx/objects\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\",   \r\n    \"skylark-io-diskfs/select\",\r\n    \"./files\"\r\n],function(objects, eventer, velm, $, select, files){\r\n    /*\r\n     * Make the specified element to pop-up the file selection dialog box when clicked , and read the contents the files selected from client file system by user.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function picker(elm, params) {\r\n        eventer.on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    files.picker = picker;\r\n\r\n    velm.delegate([\r\n        \"picker\"\r\n    ],files);\r\n\r\n    $.fn.picker = $.wraps.wrapper_every_act(files.picker, files);\r\n\r\n    return picker;\r\n\r\n});\r\n\r\n\r\n\ndefine('skylark-domx-files/main',[\r\n\t\"./files\",\r\n\t\"./dropzone\",\r\n\t\"./pastezone\",\r\n\t\"./picker\"\r\n],function(files){\r\n\treturn files;\r\n});\ndefine('skylark-domx-files', ['skylark-domx-files/main'], function (main) { return main; });\n\n"]}