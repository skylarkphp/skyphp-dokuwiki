{"version":3,"sources":["slide.js"],"names":["define","transits","fx","slide","elm","options","callback","langx","isFunction","direction","isHide","isVert","duration","speeds","normal","position","styler","css","isInvisible","this","show","visibility","marginTop","marginBottom","paddingTop","paddingBottom","height","overflow","animate","queue","complete","hide","apply","marginLeft","marginRight","paddingLeft","paddingRight","width"],"mappings":";;;;;;;AAAAA,QACI,wBACA,QACF,SAASC,EAASC,GAkMhB,OAAOA,EAAGC,MAhMV,SAAeC,EAAIC,EAAQC,GACtBC,MAAMC,WAAWH,KACpBC,EAAWD,EACXA,MAGJ,IAAII,GADDJ,EAAUA,OACWI,WAAa,OACpCC,EAAyB,OAAdD,GAAoC,SAAdA,EACjCE,EAAyB,OAAdF,GAAoC,SAAdA,EACjCG,EAAWP,EAAQO,UAAYV,EAAGW,OAAOC,OAIhCC,EAAWC,OAAOC,IAAIb,EAAK,YAE/B,GAAIM,GAEH,GAAIM,OAAOE,YAAYd,GACtB,OAAOe,UAIRH,OAAOI,KAAKhB,GAEZY,OAAOC,IAAIb,GACPW,SAAU,WACVM,WAAY,WAMjB,GAAIV,EAAQ,CAEX,IAAIW,EAAYN,OAAOC,IAAIb,EAAK,cAC5BmB,EAAeP,OAAOC,IAAIb,EAAK,iBAC/BoB,EAAaR,OAAOC,IAAIb,EAAK,eAC7BqB,EAAgBT,OAAOC,IAAIb,EAAK,kBAChCsB,EAASV,OAAOC,IAAIb,EAAK,UAEzBM,GAEAM,OAAOC,IAAIb,GACPiB,WAAY,UACZM,SAAU,SACVD,OAAQA,EACRJ,UAAWA,EACXC,aAAcA,EACdC,WAAYA,EACZC,cAAeA,IAInBG,QAAQxB,GACJsB,OAAQ,EACRJ,UAAW,EACXC,aAAc,EACdC,WAAY,EACZC,cAAe,IAGfb,SAAUA,EACViB,OAAO,EACPC,SAAU,WACNd,OAAOe,KAAK3B,GACZY,OAAOC,IAAIb,GACPiB,WAAY,UACZM,SAAU,SACVD,OAAQA,EACRJ,UAAWA,EACXC,aAAcA,EACdC,WAAYA,EACZC,cAAeA,IAEfnB,GACAA,EAAS0B,MAAM5B,QAM9BY,OAAOC,IAAIb,GACPW,SAAUA,EACVM,WAAY,UACZM,SAAU,SACVD,OAAQ,EACRJ,UAAW,EACXC,aAAc,EACdC,WAAY,EACZC,cAAe,IAInBG,QAAQxB,GACJsB,OAAQA,EACRJ,UAAWA,EACXC,aAAcA,EACdC,WAAYA,EACZC,cAAeA,IAEfb,SAAUA,EACVkB,SAAU,WACFxB,GACAA,EAAS0B,MAAM5B,WAOtB,CAEN,IAAI6B,EAAajB,OAAOC,IAAIb,EAAK,eAC7B8B,EAAclB,OAAOC,IAAIb,EAAK,gBAC9B+B,EAAcnB,OAAOC,IAAIb,EAAK,gBAC9BgC,EAAepB,OAAOC,IAAIb,EAAK,iBAC/BiC,EAAQrB,OAAOC,IAAIb,EAAK,SAExBM,GAEAM,OAAOC,IAAIb,GACPiB,WAAY,UACZM,SAAU,SACVU,MAAOA,EACPJ,WAAYA,EACZC,YAAaA,EACbC,YAAaA,EACbC,aAAcA,IAIlBR,QAAQxB,GACJiC,MAAO,EACPJ,WAAY,EACZC,YAAa,EACbC,YAAa,EACbC,aAAc,IAGdxB,SAAUA,EACViB,OAAO,EACPC,SAAU,WACNd,OAAOe,KAAK3B,GACZY,OAAOC,IAAIb,GACPiB,WAAY,UACZM,SAAU,SACVU,MAAOA,EACPJ,WAAYA,EACZC,YAAaA,EACbC,YAAaA,EACbC,aAAcA,IAEd9B,GACAA,EAAS0B,MAAM5B,QAM9BY,OAAOC,IAAIb,GACPW,SAAUA,EACVM,WAAY,UACZM,SAAU,SACVU,MAAO,EACPJ,WAAY,EACZC,YAAa,EACbC,YAAa,EACbC,aAAc,IAIlBR,QAAQxB,GACJiC,MAAOA,EACPJ,WAAYA,EACZC,YAAaA,EACbC,YAAaA,EACbC,aAAcA,IAEdxB,SAAUA,EACVkB,SAAU,WACFxB,GACAA,EAAS0B,MAAM5B,OAQ7B,OAAOe","file":"../slide.js","sourcesContent":["define([\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n\r\n    function slide(elm,options,callback ) {\r\n    \tif (langx.isFunction(options)) {\r\n    \t\tcallback = options;\r\n    \t\toptions = {};\r\n    \t}\r\n    \toptions = options || {};\r\n\t\tvar direction = options.direction || \"down\",\r\n\t\t\tisHide = ( direction === \"up\" || direction === \"left\" ),\r\n\t\t\tisVert = ( direction === \"up\" || direction === \"down\" ),\r\n\t\t\tduration = options.duration || fx.speeds.normal;\r\n\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        if (isHide) {\r\n            // active the function only if the element is visible\r\n        \tif (styler.isInvisible(elm)) {\r\n        \t\treturn this;\r\n        \t}\r\n        } else {\r\n\t        // show element if it is hidden\r\n\t        styler.show(elm);        \t\r\n\t        // place it so it displays as usually but hidden\r\n\t        styler.css(elm, {\r\n\t            position: 'absolute',\r\n\t            visibility: 'hidden'\r\n\t        });\r\n        }\r\n\r\n\r\n\r\n        if (isVert) { // up--down\r\n\t        // get naturally height, margin, padding\r\n\t        var marginTop = styler.css(elm, 'margin-top');\r\n\t        var marginBottom = styler.css(elm, 'margin-bottom');\r\n\t        var paddingTop = styler.css(elm, 'padding-top');\r\n\t        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\t        var height = styler.css(elm, 'height');\r\n\r\n\t        if (isHide) {  \t// slideup\r\n\t            // set initial css for animation\r\n\t            styler.css(elm, {\r\n\t                visibility: 'visible',\r\n\t                overflow: 'hidden',\r\n\t                height: height,\r\n\t                marginTop: marginTop,\r\n\t                marginBottom: marginBottom,\r\n\t                paddingTop: paddingTop,\r\n\t                paddingBottom: paddingBottom\r\n\t            });\r\n\r\n\t            // animate element height, margin and padding to zero\r\n\t            animate(elm, {\r\n\t                height: 0,\r\n\t                marginTop: 0,\r\n\t                marginBottom: 0,\r\n\t                paddingTop: 0,\r\n\t                paddingBottom: 0\r\n\t            }, {\r\n\t                // callback : restore the element position, height, margin and padding to original values\r\n\t                duration: duration,\r\n\t                queue: false,\r\n\t                complete: function() {\r\n\t                    styler.hide(elm);\r\n\t                    styler.css(elm, {\r\n\t                        visibility: 'visible',\r\n\t                        overflow: 'hidden',\r\n\t                        height: height,\r\n\t                        marginTop: marginTop,\r\n\t                        marginBottom: marginBottom,\r\n\t                        paddingTop: paddingTop,\r\n\t                        paddingBottom: paddingBottom\r\n\t                    });\r\n\t                    if (callback) {\r\n\t                        callback.apply(elm);\r\n\t                    }\r\n\t                }\r\n\t            });\r\n\t        } else {     \t// slidedown\r\n\t\t        // set initial css for animation\r\n\t\t        styler.css(elm, {\r\n\t\t            position: position,\r\n\t\t            visibility: 'visible',\r\n\t\t            overflow: 'hidden',\r\n\t\t            height: 0,\r\n\t\t            marginTop: 0,\r\n\t\t            marginBottom: 0,\r\n\t\t            paddingTop: 0,\r\n\t\t            paddingBottom: 0\r\n\t\t        });\r\n\r\n\t\t        // animate to gotten height, margin and padding\r\n\t\t        animate(elm, {\r\n\t\t            height: height,\r\n\t\t            marginTop: marginTop,\r\n\t\t            marginBottom: marginBottom,\r\n\t\t            paddingTop: paddingTop,\r\n\t\t            paddingBottom: paddingBottom\r\n\t\t        }, {\r\n\t\t            duration: duration,\r\n\t\t            complete: function() {\r\n\t\t                if (callback) {\r\n\t\t                    callback.apply(elm);\r\n\t\t                }\r\n\t\t            }\r\n\t\t        });\r\n\r\n\t        }\r\n\r\n        } else { // left--right\r\n\t        // get naturally height, margin, padding\r\n\t        var marginLeft = styler.css(elm, 'margin-left');\r\n\t        var marginRight = styler.css(elm, 'margin-right');\r\n\t        var paddingLeft = styler.css(elm, 'padding-left');\r\n\t        var paddingRight = styler.css(elm, 'padding-right');\r\n\t        var width = styler.css(elm, 'width');\r\n\r\n\t        if (isHide) {  \t// slideleft\r\n\t            // set initial css for animation\r\n\t            styler.css(elm, {\r\n\t                visibility: 'visible',\r\n\t                overflow: 'hidden',\r\n\t                width: width,\r\n\t                marginLeft: marginLeft,\r\n\t                marginRight: marginRight,\r\n\t                paddingLeft: paddingLeft,\r\n\t                paddingRight: paddingRight\r\n\t            });\r\n\r\n\t            // animate element height, margin and padding to zero\r\n\t            animate(elm, {\r\n\t                width: 0,\r\n\t                marginLeft: 0,\r\n\t                marginRight: 0,\r\n\t                paddingLeft: 0,\r\n\t                paddingRight: 0\r\n\t            }, {\r\n\t                // callback : restore the element position, height, margin and padding to original values\r\n\t                duration: duration,\r\n\t                queue: false,\r\n\t                complete: function() {\r\n\t                    styler.hide(elm);\r\n\t                    styler.css(elm, {\r\n\t                        visibility: 'visible',\r\n\t                        overflow: 'hidden',\r\n\t                        width: width,\r\n\t                        marginLeft: marginLeft,\r\n\t                        marginRight: marginRight,\r\n\t                        paddingLeft: paddingLeft,\r\n\t                        paddingRight: paddingRight\r\n\t                    });\r\n\t                    if (callback) {\r\n\t                        callback.apply(elm);\r\n\t                    }\r\n\t                }\r\n\t            });\r\n\t        } else {     \t// slideright\r\n\t\t        // set initial css for animation\r\n\t\t        styler.css(elm, {\r\n\t\t            position: position,\r\n\t\t            visibility: 'visible',\r\n\t\t            overflow: 'hidden',\r\n\t\t            width: 0,\r\n\t\t            marginLeft: 0,\r\n\t\t            marginRight: 0,\r\n\t\t            paddingLeft: 0,\r\n\t\t            paddingRight: 0\r\n\t\t        });\r\n\r\n\t\t        // animate to gotten width, margin and padding\r\n\t\t        animate(elm, {\r\n\t\t            width: width,\r\n\t\t            marginLeft: marginLeft,\r\n\t\t            marginRight: marginRight,\r\n\t\t            paddingLeft: paddingLeft,\r\n\t\t            paddingRight: paddingRight\r\n\t\t        }, {\r\n\t\t            duration: duration,\r\n\t\t            complete: function() {\r\n\t\t                if (callback) {\r\n\t\t                    callback.apply(elm);\r\n\t\t                }\r\n\t\t            }\r\n\t\t        });\r\n\r\n\t        }       \t\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    return fx.slide = slide;\r\n\r\n});\r\n"]}