{"version":3,"sources":["skylark-domx-fx.js"],"names":["define","skylark","langx","fx","mixin","off","speeds","normal","fast","slow","attach","transit","animation","animate","elm","properties","duration","ease","callback","delay","isString","transits","bounce","emulateTransitionEnd","explode","fadeIn","fadeOut","fade","fadeToggle","hide","pulsate","shake","show","slide","options","isFunction","direction","isHide","isVert","position","styler","css","isInvisible","this","visibility","marginTop","marginBottom","paddingTop","paddingBottom","height","overflow","queue","complete","apply","marginLeft","marginRight","paddingLeft","paddingRight","width","slideDown","slideToggle","geom","slideUp","throb","params","text","style","timer","time","throbber","noder","createElement","class","className","remove","clearTimeout","content","html","appendChild","setTimeout","update","textNode","nodeValue","toggle","speed","main"],"mappings":"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","file":"../skylark-domx-fx.js","sourcesContent":["define('skylark-domx-fx/fx',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark,langx) {\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        }\r\n    });\r\n\r\n    return skylark.attach(\"domx.fx\", fx);\r\n});\ndefine('skylark-domx-fx/animate',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-transits/transit\",\r\n    \"skylark-domx-animates/animation\",\r\n    \"./fx\"\r\n], function(langx, transit,animation,fx) {\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        if (langx.isString(properties)) {\r\n            return animation(elm,properties,duration,ease,callback,delay);\r\n        } else {\r\n            return transit(elm,properties,duration,ease,callback,delay);\r\n        }\r\n\r\n    }\r\n\r\n    return fx.animate = animate;\r\n\r\n});\ndefine('skylark-domx-fx/bounce',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n    return fx.bounce = transits.bounce;\r\n});\ndefine('skylark-domx-fx/emulateTransitionEnd',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n    return fx.emulateTransitionEnd = transits.emulateTransitionEnd;\r\n});\ndefine('skylark-domx-fx/explode',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n\treturn fx.explode = transits.explode;\r\n});\r\n\ndefine('skylark-domx-fx/fadeIn',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n\r\n    return fx.fadeIn = transits.fadeIn;\r\n});\ndefine('skylark-domx-fx/fadeOut',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n\r\n    return fx.fadeOut = transits.fadeOut;\r\n});\ndefine('skylark-domx-fx/fade',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n\r\n    return fx.fade = transits.fade;\r\n});\ndefine('skylark-domx-fx/fadeToggle',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n\r\n    return fx.fadeToggle = transits.fadeToggle;\r\n});\ndefine('skylark-domx-fx/hide',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n\r\n    return fx.hide = transits.hide;\r\n});\ndefine('skylark-domx-fx/pulsate',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n\r\n\treturn fx.pulsate = transits.pulsate;\r\n\r\n});\r\n\ndefine('skylark-domx-fx/shake',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n\r\n\treturn fx.shake = transits.shake;\r\n\r\n});\r\n\ndefine('skylark-domx-fx/show',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n\r\n    return fx.show = transits.show;\r\n});\ndefine('skylark-domx-fx/slide',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n\r\n    function slide(elm,options,callback ) {\r\n    \tif (langx.isFunction(options)) {\r\n    \t\tcallback = options;\r\n    \t\toptions = {};\r\n    \t}\r\n    \toptions = options || {};\r\n\t\tvar direction = options.direction || \"down\",\r\n\t\t\tisHide = ( direction === \"up\" || direction === \"left\" ),\r\n\t\t\tisVert = ( direction === \"up\" || direction === \"down\" ),\r\n\t\t\tduration = options.duration || fx.speeds.normal;\r\n\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        if (isHide) {\r\n            // active the function only if the element is visible\r\n        \tif (styler.isInvisible(elm)) {\r\n        \t\treturn this;\r\n        \t}\r\n        } else {\r\n\t        // show element if it is hidden\r\n\t        styler.show(elm);        \t\r\n\t        // place it so it displays as usually but hidden\r\n\t        styler.css(elm, {\r\n\t            position: 'absolute',\r\n\t            visibility: 'hidden'\r\n\t        });\r\n        }\r\n\r\n\r\n\r\n        if (isVert) { // up--down\r\n\t        // get naturally height, margin, padding\r\n\t        var marginTop = styler.css(elm, 'margin-top');\r\n\t        var marginBottom = styler.css(elm, 'margin-bottom');\r\n\t        var paddingTop = styler.css(elm, 'padding-top');\r\n\t        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\t        var height = styler.css(elm, 'height');\r\n\r\n\t        if (isHide) {  \t// slideup\r\n\t            // set initial css for animation\r\n\t            styler.css(elm, {\r\n\t                visibility: 'visible',\r\n\t                overflow: 'hidden',\r\n\t                height: height,\r\n\t                marginTop: marginTop,\r\n\t                marginBottom: marginBottom,\r\n\t                paddingTop: paddingTop,\r\n\t                paddingBottom: paddingBottom\r\n\t            });\r\n\r\n\t            // animate element height, margin and padding to zero\r\n\t            animate(elm, {\r\n\t                height: 0,\r\n\t                marginTop: 0,\r\n\t                marginBottom: 0,\r\n\t                paddingTop: 0,\r\n\t                paddingBottom: 0\r\n\t            }, {\r\n\t                // callback : restore the element position, height, margin and padding to original values\r\n\t                duration: duration,\r\n\t                queue: false,\r\n\t                complete: function() {\r\n\t                    styler.hide(elm);\r\n\t                    styler.css(elm, {\r\n\t                        visibility: 'visible',\r\n\t                        overflow: 'hidden',\r\n\t                        height: height,\r\n\t                        marginTop: marginTop,\r\n\t                        marginBottom: marginBottom,\r\n\t                        paddingTop: paddingTop,\r\n\t                        paddingBottom: paddingBottom\r\n\t                    });\r\n\t                    if (callback) {\r\n\t                        callback.apply(elm);\r\n\t                    }\r\n\t                }\r\n\t            });\r\n\t        } else {     \t// slidedown\r\n\t\t        // set initial css for animation\r\n\t\t        styler.css(elm, {\r\n\t\t            position: position,\r\n\t\t            visibility: 'visible',\r\n\t\t            overflow: 'hidden',\r\n\t\t            height: 0,\r\n\t\t            marginTop: 0,\r\n\t\t            marginBottom: 0,\r\n\t\t            paddingTop: 0,\r\n\t\t            paddingBottom: 0\r\n\t\t        });\r\n\r\n\t\t        // animate to gotten height, margin and padding\r\n\t\t        animate(elm, {\r\n\t\t            height: height,\r\n\t\t            marginTop: marginTop,\r\n\t\t            marginBottom: marginBottom,\r\n\t\t            paddingTop: paddingTop,\r\n\t\t            paddingBottom: paddingBottom\r\n\t\t        }, {\r\n\t\t            duration: duration,\r\n\t\t            complete: function() {\r\n\t\t                if (callback) {\r\n\t\t                    callback.apply(elm);\r\n\t\t                }\r\n\t\t            }\r\n\t\t        });\r\n\r\n\t        }\r\n\r\n        } else { // left--right\r\n\t        // get naturally height, margin, padding\r\n\t        var marginLeft = styler.css(elm, 'margin-left');\r\n\t        var marginRight = styler.css(elm, 'margin-right');\r\n\t        var paddingLeft = styler.css(elm, 'padding-left');\r\n\t        var paddingRight = styler.css(elm, 'padding-right');\r\n\t        var width = styler.css(elm, 'width');\r\n\r\n\t        if (isHide) {  \t// slideleft\r\n\t            // set initial css for animation\r\n\t            styler.css(elm, {\r\n\t                visibility: 'visible',\r\n\t                overflow: 'hidden',\r\n\t                width: width,\r\n\t                marginLeft: marginLeft,\r\n\t                marginRight: marginRight,\r\n\t                paddingLeft: paddingLeft,\r\n\t                paddingRight: paddingRight\r\n\t            });\r\n\r\n\t            // animate element height, margin and padding to zero\r\n\t            animate(elm, {\r\n\t                width: 0,\r\n\t                marginLeft: 0,\r\n\t                marginRight: 0,\r\n\t                paddingLeft: 0,\r\n\t                paddingRight: 0\r\n\t            }, {\r\n\t                // callback : restore the element position, height, margin and padding to original values\r\n\t                duration: duration,\r\n\t                queue: false,\r\n\t                complete: function() {\r\n\t                    styler.hide(elm);\r\n\t                    styler.css(elm, {\r\n\t                        visibility: 'visible',\r\n\t                        overflow: 'hidden',\r\n\t                        width: width,\r\n\t                        marginLeft: marginLeft,\r\n\t                        marginRight: marginRight,\r\n\t                        paddingLeft: paddingLeft,\r\n\t                        paddingRight: paddingRight\r\n\t                    });\r\n\t                    if (callback) {\r\n\t                        callback.apply(elm);\r\n\t                    }\r\n\t                }\r\n\t            });\r\n\t        } else {     \t// slideright\r\n\t\t        // set initial css for animation\r\n\t\t        styler.css(elm, {\r\n\t\t            position: position,\r\n\t\t            visibility: 'visible',\r\n\t\t            overflow: 'hidden',\r\n\t\t            width: 0,\r\n\t\t            marginLeft: 0,\r\n\t\t            marginRight: 0,\r\n\t\t            paddingLeft: 0,\r\n\t\t            paddingRight: 0\r\n\t\t        });\r\n\r\n\t\t        // animate to gotten width, margin and padding\r\n\t\t        animate(elm, {\r\n\t\t            width: width,\r\n\t\t            marginLeft: marginLeft,\r\n\t\t            marginRight: marginRight,\r\n\t\t            paddingLeft: paddingLeft,\r\n\t\t            paddingRight: paddingRight\r\n\t\t        }, {\r\n\t\t            duration: duration,\r\n\t\t            complete: function() {\r\n\t\t                if (callback) {\r\n\t\t                    callback.apply(elm);\r\n\t\t                }\r\n\t\t            }\r\n\t\t        });\r\n\r\n\t        }       \t\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    return fx.slide = slide;\r\n\r\n});\r\n\ndefine('skylark-domx-fx/slideDown',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n        return slide(elm,{\r\n            direction : \"down\",\r\n            duration : duration\r\n        },callback);\r\n    }\r\n\r\n    return fx.slideDown = slideDown;\r\n});\ndefine('skylark-domx-fx/slideToggle',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    return fx.slideToggle = slideToggle;\r\n});\ndefine('skylark-domx-fx/slideUp',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        return slide(elm,{\r\n            direction : \"up\",\r\n            duration : duration\r\n        },callback);\r\n    }\r\n\r\n\r\n\r\n    return fx.slideUp = slideUp;\r\n});\ndefine('skylark-domx-fx/throb',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n    \r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n\r\n            throbber = noder.createElement(\"div\", {\r\n                \"class\": params.className || \"throbber\"\r\n            }),\r\n            //_overlay = overlay(throbber, {\r\n            //    \"class\": 'overlay fade'\r\n            //}),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    noder.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n\r\n        if (params.style) {\r\n            styler.css(throbber,params.style);\r\n        }\r\n\r\n        //throb = noder.createElement(\"div\", {\r\n        //   \"class\": params.throb && params.throb.className || \"throb\"\r\n        //}),\r\n        //textNode = noder.createTextNode(text || \"\"),\r\n \r\n        var content = params.content ||  '<span class=\"throb\"></span>';\r\n\r\n        //throb.appendChild(textNode);\r\n        //throbber.appendChild(throb);\r\n\r\n        noder.html(throbber,content);\r\n        \r\n        elm.appendChild(throbber);\r\n\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            throbber : throbber,\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    return fx.throb = throb;\r\n});\ndefine('skylark-domx-fx/toggle',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callbacke\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    return fx.toggle = toggle;\r\n});\ndefine('skylark-domx-fx/main',[\r\n\t\"./fx\",\r\n    \"./animate\",\r\n    \"./bounce\",\r\n    \"./emulateTransitionEnd\",\r\n    \"./explode\",\r\n    \"./fadeIn\",\r\n    \"./fadeOut\",\r\n    \"./fade\",\r\n    \"./fadeToggle\",\r\n    \"./hide\",\r\n    \"./pulsate\",\r\n    \"./shake\",\r\n    \"./show\",\r\n    \"./slide\",\r\n    \"./slideDown\",\r\n    \"./slideToggle\",\r\n    \"./slideUp\",\r\n    \"./throb\",\r\n    \"./toggle\"\r\n],function(fx){\r\n\r\n\treturn fx;\r\n});\ndefine('skylark-domx-fx', ['skylark-domx-fx/main'], function (main) { return main; });\n\n"]}