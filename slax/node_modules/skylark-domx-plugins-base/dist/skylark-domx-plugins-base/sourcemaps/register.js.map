{"version":3,"sources":["register.js"],"names":["define","types","$","elmx","plugins","shortcutter","slice","Array","prototype","pluginKlasses","shortcuts","register","pluginKlass","shortcutName","instanceDataName","extfn","pluginName","isFunction","shortcut","fn","options","returnValue","this","length","args","call","arguments","each","args2","unshift","ret","apply","undefined","partial","_elm"],"mappings":";;;;;;;AAAAA,QACI,sBACA,qBACA,oBACA,YACA,iBACD,SACCC,EACAC,EACAC,EACAC,EACAC,GAEA,aAEA,IAAIC,EAAQC,MAAMC,UAAUF,MACxBG,EAAgBL,EAAQK,cACxBC,EAAYN,EAAQM,UAoDxB,OAAQN,EAAQO,SA/ChB,SAAmBC,EAAYC,EAAaC,EAAiBC,GACzD,IAAIC,EAAaJ,EAAYJ,UAAUQ,WAIvC,GAFAP,EAAcO,GAAcJ,EAExBC,EAAc,CACVC,GAAoBb,EAAMgB,WAAWH,KACrCC,EAAQD,EACRA,EAAmB,MAEnBA,IACAE,EAAaA,EAAa,IAAMF,GAGpC,IAAII,EAAWR,EAAUG,GAAgBR,EAAYW,EAAWD,GAEhEb,EAAEiB,GAAGN,GAAgB,SAASO,GAC1B,IAAIC,EAAcC,KAElB,GAAMA,KAAKC,QAAsB,aAAZH,EAEd,CACL,IAAII,EAAOlB,EAAMmB,KAAKC,WACtBJ,KAAKK,KAAK,WACR,IAAIC,EAAQtB,EAAMmB,KAAKD,GACvBI,EAAMC,QAAQP,MACd,IAAKQ,EAAOZ,EAASa,WAAMC,EAAUJ,QACzBI,IAARF,IACAT,EAAcS,UARpBT,OAAcW,EAahB,OAAOX,GAGXlB,EAAK8B,QAAQpB,EAAa,SAASO,GAC/B,IAAKU,EAAOZ,EAASI,KAAKY,KAAKd,GAI/B,YAHYY,IAARF,IACAA,EAAMR,MAEHQ","file":"../register.js","sourcesContent":["define([\r\n    \"skylark-langx-types\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-velm\",\r\n    \"./plugins\",\r\n    \"./shortcutter\"\r\n], function(\r\n    types,\r\n    $, \r\n    elmx,\r\n    plugins,\r\n    shortcutter\r\n) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        pluginKlasses = plugins.pluginKlasses,\r\n        shortcuts = plugins.shortcuts;\r\n\r\n    /*\r\n     * Register a plugin type\r\n     */\r\n    function register( pluginKlass,shortcutName,instanceDataName,extfn) {\r\n        var pluginName = pluginKlass.prototype.pluginName;\r\n        \r\n        pluginKlasses[pluginName] = pluginKlass;\r\n\r\n        if (shortcutName) {\r\n            if (instanceDataName && types.isFunction(instanceDataName)) {\r\n                extfn = instanceDataName;\r\n                instanceDataName = null;\r\n            } \r\n            if (instanceDataName) {\r\n                pluginName = pluginName + \":\" + instanceDataName;\r\n            }\r\n\r\n            var shortcut = shortcuts[shortcutName] = shortcutter(pluginName,extfn);\r\n                \r\n            $.fn[shortcutName] = function(options) {\r\n                var returnValue = this;\r\n\r\n                if ( !this.length && options === \"instance\" ) {\r\n                  returnValue = undefined;\r\n                } else {\r\n                  var args = slice.call(arguments);\r\n                  this.each(function () {\r\n                    var args2 = slice.call(args);\r\n                    args2.unshift(this);\r\n                    var  ret  = shortcut.apply(undefined,args2);\r\n                    if (ret !== undefined) {\r\n                        returnValue = ret;\r\n                    }\r\n                  });\r\n                }\r\n\r\n                return returnValue;\r\n            };\r\n\r\n            elmx.partial(shortcutName,function(options) {\r\n                var  ret  = shortcut(this._elm,options);\r\n                if (ret === undefined) {\r\n                    ret = this;\r\n                }\r\n                return ret;\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    return  plugins.register = register;\r\n});"]}