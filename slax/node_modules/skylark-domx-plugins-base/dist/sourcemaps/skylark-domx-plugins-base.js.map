{"version":3,"sources":["skylark-domx-plugins-base.js"],"names":["define","skylark","attach","pluginKlasses","shortcuts","types","objects","funcs","Emitter","noder","datax","eventer","finder","geom","styler","fx","$","elmx","plugins","Array","prototype","slice","concat","parentClass","ctor","hasOwnProperty","superclass","Object","getPrototypeOf","Plugin","inherit","klassName","_construct","elm","options","this","_elm","_initOptions","constructor","cache","defaults","ctors","unshift","i","length","mixin","defineProperty","value","destroy","_destroy","unlistenTo","removeData","pluginName","noop","_delay","handler","delay","instance","setTimeout","apply","arguments","_velm","_$elm","option","key","parts","curOption","split","shift","pop","undefined","_setOptions","_setOption","getUID","prefix","Math","random","document","getElementById","instantiate","pair","instanceDataName","pluginInstance","data","Error","reset","pluginKlass","shortcutter","extfn","plugin","args","call","methodName","isFunction","charAt","ret","register","shortcutName","shortcut","fn","returnValue","each","args2","partial","name","self","main"],"mappings":"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","file":"../skylark-domx-plugins-base.js","sourcesContent":["define('skylark-domx-plugins-base/plugins',[\r\n    \"skylark-langx-ns\"\r\n], function(skylark) {\r\n    \"use strict\";\r\n\r\n    var pluginKlasses = {},\r\n        shortcuts = {};\r\n\r\n\r\n    return  skylark.attach(\"domx.plugins\",{\r\n        pluginKlasses,\r\n        shortcuts\r\n    });\r\n});\ndefine('skylark-domx-plugins-base/plugin',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-types\",\r\n    \"skylark-langx-objects\",\r\n    \"skylark-langx-funcs\",\r\n    \"skylark-langx-events/Emitter\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-velm\",\r\n    \"./plugins\"\r\n], function(\r\n    skylark,\r\n    types,\r\n    objects,\r\n    funcs,\r\n    Emitter, \r\n    noder, \r\n    datax, \r\n    eventer, \r\n    finder, \r\n    geom, \r\n    styler, \r\n    fx, \r\n    $, \r\n    elmx,\r\n    plugins\r\n) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        concat = Array.prototype.concat;\r\n\r\n    function parentClass(ctor){\r\n        if (ctor.hasOwnProperty(\"superclass\")) {\r\n            return ctor.superclass;\r\n        }\r\n\r\n        return Object.getPrototypeOf(ctor);\r\n    }\r\n\r\n \r\n    var Plugin =   Emitter.inherit({\r\n        klassName: \"Plugin\",\r\n\r\n        _construct : function(elm,options) {\r\n           this._elm = elm;\r\n           this._initOptions(options);\r\n        },\r\n\r\n        _initOptions : function(options) {\r\n          var ctor = this.constructor,\r\n              cache = ctor.cache = (ctor.hasOwnProperty(\"cache\") ? ctor.cache : {}),\r\n              defaults = cache.defaults;\r\n          if (!defaults) {\r\n            var  ctors = [];\r\n            do {\r\n              ctors.unshift(ctor);\r\n              if (ctor === Plugin) {\r\n                break;\r\n              }\r\n              ctor = parentClass(ctor);\r\n            } while (ctor);\r\n\r\n            defaults = cache.defaults = {};\r\n            for (var i=0;i<ctors.length;i++) {\r\n              ctor = ctors[i];\r\n              if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n                objects.mixin(defaults,ctor.prototype.options,true);\r\n              }\r\n              if (ctor.hasOwnProperty(\"options\")) {\r\n                objects.mixin(defaults,ctor.options,true);\r\n              }\r\n            }\r\n          }\r\n          Object.defineProperty(this,\"options\",{\r\n            value :objects.mixin({},defaults,options,true)\r\n          });\r\n\r\n          //return this.options = langx.mixin({},defaults,options);\r\n          return this.options;\r\n        },\r\n\r\n\r\n        destroy: function() {\r\n\r\n            this._destroy();\r\n\r\n            // remove all event lisener\r\n            this.unlistenTo();\r\n            // remove data \r\n            datax.removeData(this._elm,this.pluginName );\r\n        },\r\n\r\n        _destroy: funcs.noop,\r\n\r\n        _delay: function( handler, delay ) {\r\n            function handlerProxy() {\r\n                return ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n                    .apply( instance, arguments );\r\n            }\r\n            var instance = this;\r\n            return setTimeout( handlerProxy, delay || 0 );\r\n        },\r\n\r\n        elmx : function(elm) {\r\n            if (elm) {\r\n                return elmx(elm);\r\n            }\r\n            if (!this._velm) {\r\n                this._velm = elmx(this._elm);\r\n            }\r\n            return this._velm;\r\n        },\r\n\r\n        $ : function(elm) {\r\n            if (elm) {\r\n                return $(elm,this._elm);\r\n            }\r\n            if (!this._$elm) {\r\n                this._$elm = $(this._elm);\r\n            }            \r\n            return this._$elm;\r\n        },\r\n\r\n        option: function( key, value ) {\r\n            var options = key;\r\n            var parts;\r\n            var curOption;\r\n            var i;\r\n\r\n            if ( arguments.length === 0 ) {\r\n\r\n                // Don't return a reference to the internal hash\r\n                return objects.mixin( {}, this.options );\r\n            }\r\n\r\n            if ( typeof key === \"string\" ) {\r\n\r\n                // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n                options = {};\r\n                parts = key.split( \".\" );\r\n                key = parts.shift();\r\n                if ( parts.length ) {\r\n                    curOption = options[ key ] = objects.mixin( {}, this.options[ key ] );\r\n                    for ( i = 0; i < parts.length - 1; i++ ) {\r\n                        curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n                        curOption = curOption[ parts[ i ] ];\r\n                    }\r\n                    key = parts.pop();\r\n                    if ( arguments.length === 1 ) {\r\n                        return curOption[ key ] === undefined ? null : curOption[ key ];\r\n                    }\r\n                    curOption[ key ] = value;\r\n                } else {\r\n                    if ( arguments.length === 1 ) {\r\n                        return this.options[ key ] === undefined ? null : this.options[ key ];\r\n                    }\r\n                    options[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._setOptions( options );\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOptions: function( options ) {\r\n            var key;\r\n\r\n            for ( key in options ) {\r\n                this._setOption( key, options[ key ] );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOption: function( key, value ) {\r\n\r\n            this.options[ key ] = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        getUID : function (prefix) {\r\n            prefix = prefix || \"plugin\";\r\n            do prefix += ~~(Math.random() * 1000000)\r\n            while (document.getElementById(prefix))\r\n            return prefix;\r\n        },\r\n\r\n        elm : function() {\r\n            return this._elm;\r\n        }\r\n\r\n    });\r\n\r\n\r\n    return  plugins.Plugin = Plugin;\r\n});\ndefine('skylark-domx-plugins-base/instantiate',[\r\n    \"skylark-domx-data\",\r\n    \"./plugins\",\r\n    \"./plugin\"\r\n], function(\r\n    datax, \r\n    plugins,\r\n    Plugin\r\n) {\r\n    \"use strict\";\r\n\r\n    var pluginKlasses = plugins.pluginKlasses;\r\n\r\n    /*\r\n     * Create or get or destory a plugin instance assocated with the element.\r\n     */\r\n    function instantiate(elm,pluginName,options) {\r\n        var pair = pluginName.split(\":\"),\r\n            instanceDataName = pair[1];\r\n        pluginName = pair[0];\r\n\r\n        if (!instanceDataName) {\r\n            instanceDataName = pluginName;\r\n        }\r\n\r\n        var pluginInstance = datax.data( elm, instanceDataName );\r\n\r\n        if (options === \"instance\") {\r\n            return pluginInstance;\r\n        } else if (options === \"destroy\") {\r\n            if (!pluginInstance) {\r\n                throw new Error (\"The plugin instance is not existed\");\r\n            }\r\n            pluginInstance.destroy();\r\n            //datax.removeData( elm, pluginName);\r\n            pluginInstance = undefined;\r\n        } else {\r\n            if (!pluginInstance) {\r\n                if (options !== undefined && typeof options !== \"object\") {\r\n                    throw new Error (\"The options must be a plain object\");\r\n                }\r\n                var pluginKlass = pluginKlasses[pluginName]; \r\n                pluginInstance = new pluginKlass(elm,options);\r\n                datax.data( elm, instanceDataName,pluginInstance );\r\n            } else if (options) {\r\n                pluginInstance.reset(options);\r\n            }\r\n        }\r\n\r\n        return pluginInstance;\r\n    }\r\n\r\n    Plugin.instantiate = function(elm,options) {\r\n        return instantiate(elm,this.prototype.pluginName,options);\r\n    };\r\n\r\n    return  plugins.instantiate = instantiate;\r\n});\ndefine('skylark-domx-plugins-base/shortcutter',[\r\n    \"skylark-langx-types\",\r\n    \"./plugins\",\r\n    \"./instantiate\"\r\n], function(\r\n    types,\r\n    plugins,\r\n    instantiate\r\n) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice;\r\n\r\n    function shortcutter(pluginName,extfn) {\r\n       /*\r\n        * Create or get or destory a plugin instance assocated with the element,\r\n        * and also you can execute the plugin method directory;\r\n        */\r\n        return function (elm,options) {\r\n            var  plugin = instantiate(elm, pluginName,\"instance\");\r\n            if ( options === \"instance\" ) {\r\n              return plugin || null;\r\n            }\r\n\r\n            if (!plugin) {\r\n                plugin = instantiate(elm, pluginName,typeof options == 'object' && options || {});\r\n                if (typeof options != \"string\") {\r\n                  return this;\r\n                }\r\n            } \r\n            if (options) {\r\n                var args = slice.call(arguments,1); //2\r\n                if (extfn) {\r\n                    return extfn.apply(plugin,args);\r\n                } else {\r\n                    if (typeof options == 'string') {\r\n                        var methodName = options;\r\n\r\n                        if ( !plugin ) {\r\n                            throw new Error( \"cannot call methods on \" + pluginName +\r\n                                \" prior to initialization; \" +\r\n                                \"attempted to call method '\" + methodName + \"'\" );\r\n                        }\r\n\r\n                        if ( !types.isFunction( plugin[ methodName ] ) || methodName.charAt( 0 ) === \"_\" ) {\r\n                            throw new Error( \"no such method '\" + methodName + \"' for \" + pluginName +\r\n                                \" plugin instance\" );\r\n                        }\r\n\r\n                        args = slice.call(args,1); //remove method name\r\n\r\n                        var ret = plugin[methodName].apply(plugin,args);\r\n                        if (ret == plugin) {\r\n                          ret = undefined;\r\n                        }\r\n\r\n                        return ret;\r\n                    }                \r\n                }                \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return  plugins.shortcutter = shortcutter;\r\n});\ndefine('skylark-domx-plugins-base/register',[\r\n    \"skylark-langx-types\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-velm\",\r\n    \"./plugins\",\r\n    \"./shortcutter\"\r\n], function(\r\n    types,\r\n    $, \r\n    elmx,\r\n    plugins,\r\n    shortcutter\r\n) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        pluginKlasses = plugins.pluginKlasses,\r\n        shortcuts = plugins.shortcuts;\r\n\r\n    /*\r\n     * Register a plugin type\r\n     */\r\n    function register( pluginKlass,shortcutName,instanceDataName,extfn) {\r\n        var pluginName = pluginKlass.prototype.pluginName;\r\n        \r\n        pluginKlasses[pluginName] = pluginKlass;\r\n\r\n        if (shortcutName) {\r\n            if (instanceDataName && types.isFunction(instanceDataName)) {\r\n                extfn = instanceDataName;\r\n                instanceDataName = null;\r\n            } \r\n            if (instanceDataName) {\r\n                pluginName = pluginName + \":\" + instanceDataName;\r\n            }\r\n\r\n            var shortcut = shortcuts[shortcutName] = shortcutter(pluginName,extfn);\r\n                \r\n            $.fn[shortcutName] = function(options) {\r\n                var returnValue = this;\r\n\r\n                if ( !this.length && options === \"instance\" ) {\r\n                  returnValue = undefined;\r\n                } else {\r\n                  var args = slice.call(arguments);\r\n                  this.each(function () {\r\n                    var args2 = slice.call(args);\r\n                    args2.unshift(this);\r\n                    var  ret  = shortcut.apply(undefined,args2);\r\n                    if (ret !== undefined) {\r\n                        returnValue = ret;\r\n                    }\r\n                  });\r\n                }\r\n\r\n                return returnValue;\r\n            };\r\n\r\n            elmx.partial(shortcutName,function(options) {\r\n                var  ret  = shortcut(this._elm,options);\r\n                if (ret === undefined) {\r\n                    ret = this;\r\n                }\r\n                return ret;\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    return  plugins.register = register;\r\n});\ndefine('skylark-domx-plugins-base/main',[\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-velm\",\r\n\t\"./plugins\",\r\n\t\"./instantiate\",\r\n\t\"./plugin\",\r\n\t\"./register\",\r\n\t\"./shortcutter\"\r\n],function($,elmx,plugins,instantiate,Plugin,register,shortcutter){\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice;\r\n\r\n    $.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue ;\r\n\r\n        this.each(function(){\r\n            returnValue = instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    elmx.partial(\"plugin\",function(name,options) {\r\n        var args = slice.call( arguments, 1 );\r\n        return instantiate.apply(this,[this._elm,name].concat(args));\r\n    }); \r\n\r\n\treturn plugins;\r\n});\ndefine('skylark-domx-plugins-base', ['skylark-domx-plugins-base/main'], function (main) { return main; });\n\n"]}