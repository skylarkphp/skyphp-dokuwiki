/**
 * skylark-domx-plugins-embeds - The skylark embed plugin library for dom api extension.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-domx-plugins/skylark-domx-plugins-embeds/
 * @license MIT
 */
define(["skylark-domx-iframes/create","skylark-domx/query","skylark-domx-plugins-base","./embeds"],function(e,o,n,r){"use strict";var s=o(window),t=o(document),i=n.Plugin.inherit({klassName:"EmbedRunner",pluginName:"lark.embeds.runner",options:{runnerUrl:"",runnerName:""},_construct:function(e,o){this.overrided(e,o),this.runner={},this.runner.origin="*"},prepare:function(){return this._inited?this._inited.promise:(this._inited=new Deferred,e({url:this.options.runnerUrl,className:"stretch",sandbox:"allow-modals allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts",frameBorder:"0",name:"<proxy>",contentWindowName:this.options.runnerName,onload:()=>{window.postMessage&&(s.on("message",e=>{this.handleMessage(e.originalEvent)}),this.setup(iframe),this._inited.resolve())},onerror:e=>{this._inited.reject(e)}},this._elm),t.on("codeChange.live",(e,o)=>{"setValue"!==o.origin&&o.origin}),t.on("console:run",(e,o)=>{this.postMessage("console:run",o)}),t.on("console:load:script",(e,o)=>{this.postMessage("console:load:script",o)}),t.on("console:load:dom",(e,o)=>{this.postMessage("console:load:dom",o)}),inited.promise)},setup:function(e){this.runner.window=e.contentWindow,this.runner.iframe=e},error:function(){window.console.warn.apply(console,["Renderer:"].concat([].slice.call(arguments)))},handleMessage:function(e){if(e.origin){var o=e.data;if("string"==typeof o){try{o="string"==typeof e.data?JSON.parse(e.data):e.data}catch(e){return this.error("Error parsing event data:",e.message)}if("function"!=typeof this[o.type])return!1;try{this[o.type](o.data)}catch(e){this.error(e.message)}}}},postMessage:function(e,o){if(!this.runner.window)return this.error("postMessage: No connection to runner window.");this.runner.window.postMessage(JSON.stringify({type:e,data:o}),this.runner.origin)},complete:function(){try{store.sessionStorage.removeItem("runnerPending")}catch(e){}},focus:function(){},console:function(e){var o=e.method,n=e.args;window._console&&(window._console[o]||(o="log"),window._console[o].apply(window._console,n))},"console:load:script:success":function(e){t.trigger("console:load:script:success",e)},"console:load:script:error":function(e){t.trigger("console:load:script:error",e)},"console:load:dom:success":function(e){t.trigger("console:load:dom:success",e)},"console:load:dom:error":function(e){t.trigger("console:load:dom:error",e)}});return r.EmbedRunner=i});
//# sourceMappingURL=sourcemaps/embed-runner.js.map
