{"version":3,"sources":["embed-vimeo.js"],"names":["define","langx","noder","$","plugins","embeds","EmbedVimeo","Plugin","inherit","klassName","pluginName","options","_construct","elm","prototype","call","this","url","videoId","playerId","clickToPlay","canPlayType","loadAPI","scriptTag","called","that","apiUrl","scriptTags","document","getElementsByTagName","i","length","callback","playOnReady","play","src","createElement","on","parentNode","insertBefore","test","readyState","onReady","ready","player","addEvent","hasPlayed","onPlaying","onPause","playStatus","emit","insertIframe","iframe","replace","id","_elm","replaceChild","window","navigator","platform","api","$f","pause"],"mappings":";;;;;;;AAAAA,QACE,sBACA,qBACA,qBACE,4BACF,YACC,SAAUC,EAAOC,EAAOC,EAAGC,EAASC,GACrC,aAEA,IAAIC,EAAaF,EAAQG,OAAOC,SAC9BC,UAAW,aAEXC,WAAa,oBAEbC,WAIAC,WAAa,SAASC,EAAIF,GAExBP,EAAQG,OAAOO,UAAUF,WAAWG,KAAKC,KAAKH,EAAIF,GAElDK,KAAKC,IAAMN,EAAQM,IACnBD,KAAKE,QAAUP,EAAQO,QACvBF,KAAKG,SAAWR,EAAQQ,SACxBH,KAAKI,YAAcT,EAAQS,aAK7BC,YAAa,WACX,OAAO,GAGTC,QAAS,WACP,IAIIC,EACAC,EALAC,EAAOT,KACPU,EAAS,yCACTC,EAAaC,SAASC,qBAAqB,UAC3CC,EAAIH,EAAWI,OAInB,SAASC,KACFR,GAAUC,EAAKQ,aAClBR,EAAKS,OAEPV,GAAS,EAEX,KAAOM,GAEL,GAAIH,EADJG,GAAK,GACaK,MAAQT,EAAQ,CAChCH,EAAYI,EAAWG,GACvB,MAGCP,KACHA,EAAYK,SAASQ,cAAc,WACzBD,IAAMT,GAElBvB,EAAEoB,GAAWc,GAAG,OAAQL,GACxBL,EAAW,GAAGW,WAAWC,aAAahB,EAAWI,EAAW,IAExD,kBAAkBa,KAAKjB,EAAUkB,aACnCT,KAIJU,QAAS,WACP,IAAIjB,EAAOT,KACXA,KAAK2B,OAAQ,EACb3B,KAAK4B,OAAOC,SAAS,OAAQ,WAC3BpB,EAAKqB,WAAY,EACjBrB,EAAKsB,cAEP/B,KAAK4B,OAAOC,SAAS,QAAS,WAC5BpB,EAAKuB,YAEPhC,KAAK4B,OAAOC,SAAS,SAAU,WAC7BpB,EAAKuB,YAEHhC,KAAKiB,aACPjB,KAAKkB,QAITa,UAAW,WACL/B,KAAKiC,WAAa,IACpBjC,KAAKkC,KAAK,WACVlC,KAAKiC,WAAa,IAItBD,QAAS,WACPhC,KAAKkC,KAAK,gBACHlC,KAAKiC,YAGdE,aAAc,WACZ,IAAIC,EAASxB,SAASQ,cAAc,UACpCgB,EAAOjB,IAAMnB,KAAKC,IACfoC,QAAQ,WAAYrC,KAAKE,SACzBmC,QAAQ,YAAarC,KAAKG,UAC7BiC,EAAOE,GAAKtC,KAAKG,SACjBH,KAAKuC,KAAKjB,WAAWkB,aAAaJ,EAAQpC,KAAKuC,MAC/CvC,KAAKuC,KAAOH,GAGdlB,KAAM,WACJ,IAAIT,EAAOT,KACNA,KAAKiC,aACRjC,KAAKkC,KAAK,QACVlC,KAAKiC,WAAa,GAEhBjC,KAAK2B,OAEJ3B,KAAK8B,YACL9B,KAAKI,aACHqC,OAAOC,WACN,iBAAiBlB,KAAKiB,OAAOC,UAAUC,WAM3C3C,KAAK+B,YAEL/B,KAAK4B,OAAOgB,IAAI,SAGlB5C,KAAKiB,aAAc,EACdwB,OAAOI,GAEA7C,KAAK4B,SACf5B,KAAKmC,eACLnC,KAAK4B,OAASiB,GAAG7C,KAAKuC,MACtBvC,KAAK4B,OAAOC,SAAS,QAAS,WAC5BpB,EAAKiB,aALP1B,KAAKM,YAWXwC,MAAO,WACD9C,KAAK2B,MACP3B,KAAK4B,OAAOgB,IAAI,SACP5C,KAAKiC,oBACPjC,KAAKiB,YACZjB,KAAKkC,KAAK,gBACHlC,KAAKiC,eAKlB,OAAO5C,EAAOC,WAAaA","file":"../embed-vimeo.js","sourcesContent":["define([\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-query\",\r\n    \"skylark-domx-plugins-base\",\r\n  './embeds'\r\n], function (langx, noder, $, plugins, embeds) {\r\n  'use strict'\r\n\r\n  var EmbedVimeo = plugins.Plugin.inherit({\r\n    klassName: \"EmbedVimeo\",\r\n\r\n    pluginName : \"lark.embeds.vimeo\",\r\n\r\n    options : {\r\n\r\n    },\r\n\r\n    _construct : function(elm,options) {\r\n      //url, videoId, playerId, clickToPlay) \r\n      plugins.Plugin.prototype._construct.call(this,elm,options);\r\n\r\n      this.url = options.url\r\n      this.videoId = options.videoId\r\n      this.playerId = options.playerId\r\n      this.clickToPlay = options.clickToPlay\r\n\r\n      ///this.element = document.createElement('div')\r\n    },\r\n\r\n    canPlayType: function () {\r\n      return true\r\n    },\r\n\r\n    loadAPI: function () {\r\n      var that = this\r\n      var apiUrl = '//f.vimeocdn.com/js/froogaloop2.min.js'\r\n      var scriptTags = document.getElementsByTagName('script')\r\n      var i = scriptTags.length\r\n      var scriptTag\r\n      var called\r\n\r\n      function callback() {\r\n        if (!called && that.playOnReady) {\r\n          that.play()\r\n        }\r\n        called = true\r\n      }\r\n      while (i) {\r\n        i -= 1\r\n        if (scriptTags[i].src === apiUrl) {\r\n          scriptTag = scriptTags[i]\r\n          break\r\n        }\r\n      }\r\n      if (!scriptTag) {\r\n        scriptTag = document.createElement('script')\r\n        scriptTag.src = apiUrl\r\n      }\r\n      $(scriptTag).on('load', callback)\r\n      scriptTags[0].parentNode.insertBefore(scriptTag, scriptTags[0])\r\n      // Fix for cached scripts on IE 8:\r\n      if (/loaded|complete/.test(scriptTag.readyState)) {\r\n        callback()\r\n      }\r\n    },\r\n\r\n    onReady: function () {\r\n      var that = this\r\n      this.ready = true\r\n      this.player.addEvent('play', function () {\r\n        that.hasPlayed = true\r\n        that.onPlaying()\r\n      })\r\n      this.player.addEvent('pause', function () {\r\n        that.onPause()\r\n      })\r\n      this.player.addEvent('finish', function () {\r\n        that.onPause()\r\n      })\r\n      if (this.playOnReady) {\r\n        this.play()\r\n      }\r\n    },\r\n\r\n    onPlaying: function () {\r\n      if (this.playStatus < 2) {\r\n        this.emit(\"playing\");\r\n        this.playStatus = 2\r\n      }\r\n    },\r\n\r\n    onPause: function () {\r\n      this.emit(\"pause\");\r\n      delete this.playStatus\r\n    },\r\n\r\n    insertIframe: function () {\r\n      var iframe = document.createElement('iframe')\r\n      iframe.src = this.url\r\n        .replace('VIDEO_ID', this.videoId)\r\n        .replace('PLAYER_ID', this.playerId)\r\n      iframe.id = this.playerId\r\n      this._elm.parentNode.replaceChild(iframe, this._elm)\r\n      this._elm = iframe\r\n    },\r\n\r\n    play: function () {\r\n      var that = this\r\n      if (!this.playStatus) {\r\n        this.emit(\"play\");\r\n        this.playStatus = 1\r\n      }\r\n      if (this.ready) {\r\n        if (\r\n          !this.hasPlayed &&\r\n          (this.clickToPlay ||\r\n            (window.navigator &&\r\n              /iP(hone|od|ad)/.test(window.navigator.platform)))\r\n        ) {\r\n          // Manually trigger the playing callback if clickToPlay\r\n          // is enabled and to workaround a limitation in iOS,\r\n          // which requires synchronous user interaction to start\r\n          // the video playback:\r\n          this.onPlaying()\r\n        } else {\r\n          this.player.api('play')\r\n        }\r\n      } else {\r\n        this.playOnReady = true\r\n        if (!window.$f) {\r\n          this.loadAPI()\r\n        } else if (!this.player) {\r\n          this.insertIframe()\r\n          this.player = $f(this._elm)\r\n          this.player.addEvent('ready', function () {\r\n            that.onReady()\r\n          })\r\n        }\r\n      }\r\n    },\r\n\r\n    pause: function () {\r\n      if (this.ready) {\r\n        this.player.api('pause');\r\n      } else if (this.playStatus) {\r\n        delete this.playOnReady;\r\n        this.emit(\"pause\");\r\n        delete this.playStatus;\r\n      }\r\n    }\r\n  });\r\n\r\n  return embeds.EmbedVimeo = EmbedVimeo;\r\n\r\n});"]}