{"version":3,"sources":["_carousel/indicators.js"],"names":["define","langx","browser","eventer","$","elmx","plugins","groups","Plugin","inherit","klassName","pluginName","options","thumbnail","indicator","template","indexAttrName","selector","classes","active","_construct","elm","prototype","call","this","_velm","$indicators","query","on","e","slideIndex","target","attr","carousel","jump","preventDefault","createIndicator","itemData","_renderIndicatorHtml","addIndicator","index","setAttribute","append","add","clearIndicators","remove","setActiveIndicator","activeIndicatorClass","activeIndicator","removeClass","addClass"],"mappings":";;;;;;;AAACA,QACC,sBACA,uBACA,uBACA,qBACA,oBACA,4BACA,aACA,SAASC,EAAMC,EAAQC,EAAQC,EAAEC,EAAKC,EAAQC,GAuF9C,OApFiBD,EAAQE,OAAOC,SAC9BC,UAAY,aAEZC,WAAa,kCAGbC,SACEC,WAAY,EAEZC,WACCC,SAAW,QACXC,cAAgB,aAChBC,SAAW,OACXC,SACIC,OAAS,YAKhBC,WAAY,SAASC,EAAKT,GACzBN,EAAQE,OAAOc,UAAUF,WAAWG,KAAKC,KAAKH,EAAIT,GAEjDY,KAAKC,MAAQD,KAAKnB,OACnBmB,KAAKE,YAAcF,KAAKC,MAAME,MAAMH,KAAKZ,QAAQE,UAAUG,UAE1DO,KAAKC,MAAMG,GAAG,YAAaJ,KAAKZ,QAAQE,UAAUE,iBAAmBa,IACjE,IACIC,EADa1B,EAAEyB,EAAEE,QACOC,KAAKR,KAAKZ,QAAQE,UAAUE,eAExDQ,KAAKZ,QAAQqB,SAASC,KAAKJ,GAC3BD,EAAEM,oBAKRC,gBAAiB,SAAUC,GAsBzB,OArBKb,KAAKc,uBACRd,KAAKc,qBAAuBrC,EAAMc,SAASS,KAAKZ,QAAQE,UAAUC,WAoB7DX,EAAEoB,KAAKc,qBAAqBD,IAAW,IAGhDE,aAAc,SAAUC,EAAMH,GAC1B,IAAIvB,EAAYU,KAAKY,gBAAgBC,GACrCvB,EAAU2B,aAAa,aAAcD,GACrChB,KAAKC,MAAMiB,OAAO5B,GAClBU,KAAKE,YAAcF,KAAKE,YAAYiB,IAAI7B,IAG5C8B,gBAAkB,WACfpB,KAAKE,YAAYmB,UAGpBC,mBAAoB,SAAUN,GAC5B,GAAIhB,KAAKE,YAAa,CACpB,IAAIqB,EAAuBvB,KAAKZ,QAAQE,UAAUI,QAAQC,OACtDK,KAAKwB,iBACPxB,KAAKwB,gBAAgBC,YAAYF,GAEnCvB,KAAKwB,gBAAkB5C,EAAEoB,KAAKE,YAAYc,IAC1ChB,KAAKwB,gBAAgBE,SAASH","file":"../../_carousel/indicators.js","sourcesContent":[" define([\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"../groups\"\r\n],function(langx,browser,eventer,$,elmx,plugins,groups){\r\n\r\n\r\n  var Indicators = plugins.Plugin.inherit({\r\n    klassName : \"Indicators\",\r\n\r\n    pluginName : \"lark.groups.carousel.indicators\",\r\n\r\n\r\n    options : {\r\n      thumbnail : true,\r\n\r\n      indicator : {\r\n\t      template : \"<li/>\",\r\n\t      indexAttrName : \"data-index\",\r\n\t      selector : \"> li\",\r\n\t      classes : {\r\n\t          active : \"active\"\r\n\t      }\r\n      }\r\n    },\r\n\r\n    _construct: function(elm, options) {\r\n    \tplugins.Plugin.prototype._construct.call(this,elm,options);\r\n\r\n      this._velm = this.elmx();\r\n    \tthis.$indicators = this._velm.query(this.options.indicator.selector);\r\n\r\n      this._velm.on(\"click\", `[${this.options.indicator.indexAttrName}]`, (e) => {\r\n          var $indicator = $(e.target),\r\n              slideIndex = $indicator.attr(this.options.indicator.indexAttrName);\r\n\r\n          this.options.carousel.jump(slideIndex);\r\n          e.preventDefault();\r\n      });\r\n    },\r\n\r\n\r\n    createIndicator: function (itemData) {\r\n      if (!this._renderIndicatorHtml) {\r\n        this._renderIndicatorHtml = langx.template(this.options.indicator.template);\r\n      }\r\n\r\n      /*\r\n      var indicator = noder.createElement(\"li\");\r\n      var title = itemData.title;\r\n      var thumbnailUrl\r\n      var thumbnail\r\n      if (this.options.thumbnail) {\r\n        thumbnailUrl = itemData[\"thumbnail\"]\r\n\r\n        if (thumbnailUrl) {\r\n          indicator.style.backgroundImage = 'url(\"' + thumbnailUrl + '\")'\r\n        }\r\n      }\r\n      if (title) {\r\n        indicator.title = title;\r\n      }\r\n      */\r\n\r\n      return $(this._renderIndicatorHtml(itemData))[0];\r\n    },\r\n\r\n    addIndicator: function (index,itemData) {\r\n        var indicator = this.createIndicator(itemData)\r\n        indicator.setAttribute('data-index', index)\r\n        this._velm.append(indicator)\r\n        this.$indicators = this.$indicators.add(indicator);\r\n    },\r\n\r\n    clearIndicators : function() {\r\n       this.$indicators.remove();\r\n    },\r\n    \r\n    setActiveIndicator: function (index) {\r\n      if (this.$indicators) {\r\n        let activeIndicatorClass = this.options.indicator.classes.active;\r\n        if (this.activeIndicator) {\r\n          this.activeIndicator.removeClass(activeIndicatorClass)\r\n        }\r\n        this.activeIndicator = $(this.$indicators[index])\r\n        this.activeIndicator.addClass(activeIndicatorClass)\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  return Indicators;\r\n});"]}