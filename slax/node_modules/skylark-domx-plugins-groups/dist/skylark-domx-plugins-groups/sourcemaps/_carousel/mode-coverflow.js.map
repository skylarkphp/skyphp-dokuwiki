{"version":3,"sources":["_carousel/mode-coverflow.js"],"names":["define","langx","events","$","Emitter","inherit","_construct","carsouel","this","_itemOffsets","_currentIndex","classes","options","modes","coverflow","_classRemover","RegExp","itemCurrent","itemPast","itemFuture","_whiteSpaceRemover","resetItems","$itemsContainer","_$itemsContainer","$items","getItems","spacing","css","each","i","item","$item","attr","c","replace","children","itemContent","length","wrapInner","width","outerWidth","containerWidth","itemHeight","biggestHeight","height","left","position","setTimeout","center","currentIndex","undefined","newClass","zIndex","total","jump","toIndex","type","ended","one","emulateTransitionEnd"],"mappings":"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","file":"../../_carousel/mode-coverflow.js","sourcesContent":[" define([\r\n  \"skylark-langx/langx\",\r\n  \"skylark-langx-events\",\r\n  \"skylark-domx-query\",\r\n],function(langx,events,$){\r\n  'use strict'\r\n\r\n\r\n  var ModeCoverflow = events.Emitter.inherit({\r\n\r\n\r\n    _construct : function(carsouel) {\r\n    \tthis.carsouel = carsouel;\r\n\r\n    \tthis._itemOffsets = [];\r\n    \tthis._currentIndex = -1;\r\n\r\n    \tlet classes = this.carsouel.options.modes.coverflow.classes;\r\n\r\n        this._classRemover = new RegExp('\\\\b(' + classes.itemCurrent + '|' + classes.itemPast + '|' + classes.itemFuture + ')(.*?)(\\\\s|$)', 'g');\r\n        this._whiteSpaceRemover = new RegExp('\\\\s\\\\s+', 'g');\r\n\r\n    \tthis.resetItems();\r\n    },\r\n\r\n\r\n    resetItems : function () {\r\n    \tlet classes = this.carsouel.options.modes.coverflow.classes,\r\n    \t\t$itemsContainer = this.carsouel._$itemsContainer,\r\n    \t\t$items = this.carsouel.getItems(),\r\n    \t\tspacing = this.carsouel.options.modes.coverflow.spacing;\r\n\r\n\r\n\r\n        function noTransition() {\r\n            $itemsContainer.css('transition', 'none');\r\n            $items.css('transition', 'none');\r\n        }\r\n\r\n        function resetTransition() {\r\n            $itemsContainer.css('transition', '');\r\n            $items.css('transition', '');\r\n        }\r\n\r\n\t    function calculateBiggestItemHeight() {\r\n\t        var biggestHeight = 0,\r\n\t            itemHeight;\r\n\r\n\t        $items.each(function() {\r\n\t            itemHeight = $(this).height();\r\n\t            if ( itemHeight > biggestHeight ) { biggestHeight = itemHeight; }\r\n\t        });\r\n\t        return biggestHeight;\r\n\t    }\r\n\r\n\r\n        let skipTransition = true;\r\n        if ( skipTransition ) { \r\n        \tnoTransition(); \r\n        }\r\n\r\n         $items.each((i,item) => {\r\n            let $item = $(item);\r\n\r\n            $item.attr('class', function(i, c) {\r\n                return c && c.replace(this._classRemover, '').replace(this._whiteSpaceRemover, ' ');\r\n            });\r\n\r\n            if ( !$item.children('.' + classes.itemContent ).length) {\r\n                $item.wrapInner('<div class=\"' + classes.itemContent + '\" />');\r\n            }\r\n            let width = $item.outerWidth();\r\n\r\n            if ( spacing !== 0 ) {\r\n               $item.css('margin-right', ( width * spacing ) + 'px');\r\n             }\r\n        });\r\n\r\n\r\n        this._itemOffsets = [];\r\n        let containerWidth = $itemsContainer.width();\r\n        $itemsContainer.height(calculateBiggestItemHeight());\r\n        ///$itemsContainer.height(\"300px\");\r\n\r\n        $items.each((i,item) => {\r\n            let $item = $(item),\r\n                width,\r\n                left;\r\n            width = $item.outerWidth();\r\n            left = $item.position().left;\r\n            this._itemOffsets[i] = -1 * ((left + (width / 2)) - (containerWidth / 2));\r\n\r\n        });\r\n\r\n        if ( skipTransition ) { \r\n        \tsetTimeout(resetTransition, 1); \r\n        }\r\n    },\r\n\r\n    center : function (currentIndex) {\r\n    \tif (currentIndex !== undefined) {\r\n\t        this._currentIndex = currentIndex;\r\n    \t} else {\r\n    \t\tcurrentIndex = this._currentIndex;\r\n    \t}\r\n    \tif (currentIndex>=0)  {\r\n\t        var classes = this.carsouel.options.modes.coverflow.classes,\r\n\t        \t$itemsContainer = this.carsouel._$itemsContainer,\r\n\t        \t$items =  this.carsouel.getItems(),\r\n\t        \ttotal = $items.length;\r\n\t        var $item;\r\n\t        var newClass;\r\n\t        var zIndex;\r\n\r\n\t        $items.each((i,item) => {\r\n\t            $item = $(item);\r\n\t            newClass = ' ';\r\n\r\n\t            if (i === currentIndex)  {\r\n\t                newClass += classes.itemCurrent;\r\n\t                zIndex = (total + 1);\r\n\t            }\r\n\t            else if (i < currentIndex) {\r\n\t                newClass += classes.itemPast + ' ' +\r\n\t                    classes.itemPast + '-' + (currentIndex - i);\r\n\t                zIndex = total - (currentIndex - i);\r\n\t            } else  {\r\n\t                newClass += classes.itemFuture + ' ' +\r\n\t                    classes.itemFuture + '-' + (i - currentIndex);\r\n\t                \r\n\t                zIndex = total -  (i - currentIndex);\r\n\t            }\r\n\r\n\t            $item.css('z-index', zIndex )\r\n\t              .attr('class',(i, c) => {\r\n\t                return c && c.replace(this._classRemover, '').replace(this._whiteSpaceRemover,' ') + newClass;\r\n\t              });\r\n\t        });\r\n\r\n\r\n\t        $itemsContainer.css('transform', 'translateX(' + this._itemOffsets[currentIndex] + 'px)');\r\n    \t}\r\n    },\r\n\r\n    jump : function(toIndex,currentIndex,type,ended) {\r\n        var $itemsContainer = this.carsouel._$itemsContainer;\r\n        this.center(toIndex);\r\n        $itemsContainer\r\n            .one('transitionEnd', function() {\r\n                ended();\r\n            })\r\n            .emulateTransitionEnd();\r\n\r\n        return this;\r\n    }\r\n\r\n  });\r\n\r\n\r\n  return ModeCoverflow;\t\r\n});"]}