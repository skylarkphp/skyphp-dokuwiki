{"version":3,"sources":["carousel.js"],"names":["define","langx","browser","eventer","$","elmx","plugins","groups","Group","Indicators","ModeSlide","ModeRotate","ModeCoverflow","Carousel","inherit","klassName","pluginName","options","classes","display","single","leftEdge","rightEdge","cycling","controls","cycle","interval","pause","loop","wrap","keyboard","selectors","toggle","prev","next","close","cycleStop","indicators","indicator","template","indexAttrName","itemsContainer","indicatorsContainer","item","selector","base","data","mode","modes","slide","rotate","threedContainer","radius","coverflow","itemPast","itemFuture","itemCurrent","itemContent","spacing","onjumped","onjumping","_construct","elm","prototype","call","this","selectable","multiSelect","_$elm","_$itemsContainer","find","$indicators","length","_indicators","mixin","carousel","active","setActiveIndicator","paused","moving","$active","on","proxy","keydown","document","documentElement","e","stop","cycled","items","addItems","_mode","startIndex","start","undefined","Math","floor","getItemsCount","jump","changeMode","dispose","clearItems","removeClass","addClass","$items","test","target","tagName","which","preventDefault","isDefined","_velm","clearInterval","setInterval","getItemForDirection","direction","activeIndex","getItemIndex","_$items","itemIndex","eq","setActiveItem","toIndex","to","jumping","itemsCount","type","currentItem","getActiveItem","currentIndex","parseInt","jumpingEvent","create","trigger","isDefaultPrevented","jumpedEvent","setTimeout","pausing","isUndefined","resetItems","index","i","addItem","itemData","itemHtml","renderItemHtml","baseClass","$item","append","addIndicator","attr","remove","clearIndicators","register"],"mappings":"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","file":"../carousel.js","sourcesContent":[" define([\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"./groups\",\r\n  \"./group\",\r\n  \"./_carousel/indicators\",\r\n  \"./_carousel/mode-slide\",\r\n  \"./_carousel/mode-rotate\",\r\n  \"./_carousel/mode-coverflow\"\r\n],function(langx,browser,eventer,$,elmx,plugins,groups,Group,Indicators,ModeSlide,ModeRotate,ModeCoverflow){\r\n  'use strict'\r\n\r\n \r\n  var Carousel = Group.inherit({\r\n    klassName : \"Carousel\",\r\n\r\n    pluginName : \"lark.groups.carousel\",\r\n\r\n        options : {\r\n            classes : {\r\n             // The class to add when the carousel is visible:\r\n              display: 'display',\r\n              // The class to add when the carousel only displays one item:\r\n              single: 'single',\r\n              // The class to add when the left edge has been reached:\r\n              leftEdge: 'left',\r\n              // The class to add when the right edge has been reached:\r\n              rightEdge: 'right',\r\n              // The class to add when the automatic slideshow is active:\r\n              cycling: 'cycling',\r\n\r\n              // The class to add when the carousel controls are visible:\r\n              controls: 'controls',\r\n            },\r\n\r\n            cycle : {\r\n              // [milliseconds]\r\n              // If a positive number, Carousel will automatically advance to next item after that number of milliseconds\r\n              interval: 5000,\r\n\r\n              pause: 'hover',\r\n            },\r\n\r\n            loop : true,\r\n\r\n            wrap: true,\r\n            keyboard: true,\r\n\r\n            controls : {\r\n              selectors : {\r\n               // The class for the \"toggle\" control:\r\n                toggle: '.toggle',\r\n                // The class for the \"prev\" control:\r\n                prev: '.prev',\r\n                // The class for the \"next\" control:\r\n                next: '.next',\r\n                // The class for the \"close\" control:\r\n                close: '.close',\r\n                // The class for the \"play-pause\" toggle control:\r\n                cycleStop: '.cycle-stop'\r\n              }\r\n            },\r\n\r\n            indicators : {\r\n                indicator : {\r\n                  template : \"<li/>\",\r\n                  indexAttrName : \"data-index\"\r\n                },\r\n\r\n            },\r\n\r\n            selectors :{\r\n              itemsContainer : \".items\",\r\n              indicatorsContainer : \".indicators\"\r\n            },\r\n\r\n            item : {\r\n              selector : \".item\",\r\n              classes : {\r\n                base : \"item\"\r\n              }\r\n            },\r\n\r\n            data : {\r\n              //items : \".carousel-item\",  // the items are from dom elements\r\n              //items : [{                 // the items are from json object\r\n              //  type: 'image',href : \"https://xxx.com/1.jpg\",title : \"1\"\r\n              //},{\r\n              //  type: 'image',href : \"https://xxx.com/1.jpg\",title : \"1\"\r\n              // }],\r\n            },\r\n\r\n            mode : \"slide\",\r\n\r\n            //start : \"center\", //ex:0\r\n\r\n            modes : {\r\n              slide : {\r\n                classes : {\r\n                  base : \"slide\"\r\n                }\r\n              },\r\n\r\n              rotate : {\r\n                classes : {\r\n                  base : \"rotate\",\r\n                  threedContainer : \"items-container\"\r\n                },\r\n                radius : 240\r\n              },\r\n\r\n              coverflow : {\r\n                classes : {\r\n                  base : \"coverflow\",\r\n                  itemPast : \"past\",\r\n                  itemFuture : \"future\",\r\n                  itemCurrent : \"current\",\r\n                  itemContent : \"content\"\r\n                },\r\n                spacing :-0.6\r\n              }\r\n            },\r\n\r\n            onjumped : null,\r\n            onjumping : null\r\n        },\r\n\r\n        _construct: function(elm, options) {\r\n            //this.options = options\r\n            Group.prototype._construct.call(this,elm,options);\r\n\r\n            this.options.item.selectable = true;\r\n            this.options.item.multiSelect = false;\r\n\r\n\r\n            this._$elm = this.$();\r\n            this._$itemsContainer = this._$elm.find(this.options.selectors.itemsContainer);\r\n            \r\n            let $indicators = this._$elm.find(this.options.selectors.indicatorsContainer); \r\n            if ($indicators.length>0) {\r\n              this._indicators = new Indicators($indicators[0],langx.mixin({\r\n                carousel : this,\r\n                active : 0\r\n              },this.options.indicators));\r\n              this._indicators.setActiveIndicator(0);\r\n            }\r\n\r\n            this.paused = null;\r\n            this.moving = null;\r\n            this.interval = null;\r\n            this.$active = null;\r\n\r\n            if (this.options.cycle.interval >0) {\r\n              this.cycle(true);\r\n            } else {\r\n              this.cycle(false);\r\n            }\r\n\r\n            var self = this;\r\n            this.options.keyboard && this._$elm.on('keydown.lark.carousel', langx.proxy(this.keydown, this))\r\n\r\n            this.options.cycle.pause == 'hover' && !('ontouchstart' in document.documentElement) && this._$elm\r\n                .on('mouseenter.lark.carousel', (e) => {\r\n                  this.pause(true);\r\n                }).on('mouseleave.lark.carousel', (e) => {\r\n                  this.pause(false)\r\n                });\r\n\r\n            this._$elm.find(this.options.controls.selectors.prev).on(\"click\",(e)=>{\r\n                this.prev();\r\n                eventer.stop(e);\r\n            });\r\n\r\n            this._$elm.find(this.options.controls.selectors.next).on(\"click\",(e)=>{\r\n                this.next();\r\n                eventer.stop(e);\r\n            });\r\n\r\n            this._$elm.find(this.options.controls.selectors.cycleStop).on(\"click\",(e)=>{\r\n                this.cycle(!this.cycled);\r\n                eventer.stop(e);\r\n            });\r\n\r\n\r\n            if (this.options.data.items) {\r\n                this.addItems(this.options.data.items);\r\n            }\r\n            \r\n            this._mode = new modes[this.options.mode](this);\r\n\r\n\r\n            let startIndex = this.options.start;\r\n            if (startIndex !== undefined) {\r\n              if (startIndex === 'center' ) {\r\n                startIndex = Math.floor(this.getItemsCount() / 2)\r\n              } \r\n\r\n              this.jump(startIndex)              \r\n            }\r\n\r\n            if (this.options.onjumped) {\r\n              this.on(\"jumped\",this.options.onjumped)\r\n            }\r\n\r\n            if (this.options.onjumping) {\r\n              this.on(\"jumping\",this.options.onjumping)\r\n            }\r\n        },\r\n\r\n        changeMode : function(mode) {\r\n          if (mode == this.options.mode) {\r\n            return;\r\n          }\r\n\r\n          this.options.mode = mode;\r\n\r\n          if (this._mode && this._mode.dispose) {\r\n            this._mode.dispose();\r\n          }\r\n          this._mode = null;\r\n          this.clearItems();\r\n\r\n          this.$().removeClass(\"slide rotate coverflow\").addClass(this.options.modes[mode].classes.base);\r\n          this.$items\r\n\r\n          this.addItems(this.options.data.items);\r\n\r\n          this._mode = new modes[this.options.mode](this);\r\n\r\n          let startIndex = this.options.start;\r\n          if (startIndex !== undefined) {\r\n            if (startIndex === 'center' ) {\r\n              startIndex = Math.floor(this.getItemsCount() / 2)\r\n            } \r\n            this.jump(startIndex)              \r\n          }\r\n        },\r\n\r\n        keydown : function(e) {\r\n            if (/input|textarea/i.test(e.target.tagName)) return\r\n            switch (e.which) {\r\n                case 37:\r\n                    this.prev();\r\n                    break\r\n                case 39:\r\n                    this.next();\r\n                    break\r\n                default:\r\n                    return\r\n            }\r\n\r\n            e.preventDefault()\r\n        },\r\n\r\n\r\n        /*\r\n         * Cycles through the carousel items from left to right.\r\n         */\r\n        cycle : function(cycling) {\r\n            if (langx.isDefined(cycling)) {\r\n              this.cycled = !!cycling;\r\n             ///  e || (this.paused = false)\r\n              if (this.cycled) {\r\n                 this._velm.addClass(this.options.classes.cycling)\r\n              } else {\r\n                 this._velm.removeClass(this.options.classes.cycling)\r\n              }\r\n            } \r\n\r\n            if (this.interval){\r\n              clearInterval(this.interval);\r\n            }\r\n\r\n            if (this.options.cycle.interval && this.cycled && !this.paused ) {\r\n                this.interval = setInterval(langx.proxy(this.next, this), this.options.cycle.interval);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n\r\n        getItemForDirection : function(direction, active) {\r\n            var activeIndex = this.getItemIndex(active)\r\n            var willWrap = (direction == 'prev' && activeIndex === 0) ||\r\n                (direction == 'next' && activeIndex == (this._$items.length - 1))\r\n            if (willWrap && !this.options.wrap) return active\r\n            var delta = direction == 'prev' ? -1 : 1\r\n            var itemIndex = (activeIndex + delta) % this._$items.length\r\n            return this._$items.eq(itemIndex);\r\n        },\r\n\r\n        setActiveItem : function(toIndex) {\r\n            Group.prototype.setActiveItem.call(this,toIndex);\r\n\r\n            if (this._indicators) {\r\n              this._indicators.setActiveIndicator(toIndex);\r\n            }  \r\n        },\r\n\r\n        jump : function (to) {\r\n          if (this.jumping) {\r\n            return\r\n          }\r\n\r\n          let itemsCount = this.getItemsCount();\r\n          if (itemsCount<=1) {\r\n            return;\r\n          } \r\n\r\n          let currentItem = this.getActiveItem(),\r\n              currentIndex = currentItem ? this.getItemIndex(currentItem) : -1,\r\n              toItem,\r\n              toIndex,\r\n              type;\r\n\r\n          if (to === 'prev') {\r\n              type = to;\r\n              if (currentIndex > 0 ) { \r\n                toIndex = currentIndex -1; \r\n              } else if ( this.options.loop ) { \r\n                toIndex = itemsCount - 1; \r\n              }\r\n          } else if (to === 'next') {\r\n              type = to;\r\n              if ( currentIndex < itemsCount - 1 ) { \r\n                toIndex = currentIndex + 1; \r\n              } else if ( this.options.loop ) { \r\n                toIndex = 0; \r\n              }\r\n          } else if (typeof to === 'number') {\r\n              toIndex = to;\r\n          } else if ( typeof to == 'string') {\r\n              toIndex = parseInt(to);\r\n          } else if ( to !== undefined ) {\r\n              // if object is sent, get its index\r\n              toIndex = this.getItemIndex(to);\r\n          }\r\n\r\n          if (toIndex<0 || toIndex==currentIndex) {\r\n            return;\r\n          }\r\n\r\n          if (!type) {\r\n            type = toIndex > currentIndex ? 'next' : 'prev';\r\n          }\r\n\r\n          this.jumping =true;\r\n\r\n          var jumpingEvent = eventer.create('jumping.lark.carousel', {\r\n              toIndex,\r\n              currentIndex,\r\n              type\r\n          });\r\n\r\n          this.trigger(jumpingEvent);\r\n          if (jumpingEvent.isDefaultPrevented()) {\r\n            this.jumping =false;\r\n            return;\r\n          }\r\n\r\n          this._mode.jump(toIndex,currentIndex,type,() => {\r\n            //    $next.removeClass([type, direction].join(' ')).addClass('active')\r\n            //    $active.removeClass(['active', direction].join(' '))\r\n            this.setActiveItem(toIndex);\r\n\r\n            var jumpedEvent = eventer.create('jumped.lark.carousel', { \r\n              toIndex,\r\n              currentIndex,\r\n              type\r\n            });\r\n\r\n            setTimeout(()=> {\r\n              this.trigger(jumpedEvent)\r\n            }, 0)\r\n\r\n\r\n            this.jumping  = false;\r\n\r\n          });\r\n\r\n          return this;\r\n        },\r\n\r\n        /*\r\n         *Cycles the carousel to a particular frame (0 based, similar to an array). Returns to the caller before the target item has been shown\r\n        jump : function(pos) {\r\n            var that = this;\r\n\r\n            var activeItem = this.getActiveItem(),\r\n                activeIndex = activeItem ? this.getItemIndex(activeItem) : -1;\r\n\r\n            if (pos > (this._$items.length - 1) || pos < 0) return\r\n\r\n            if (this.moving) return this._$elm.one('jumped.lark.carousel', function() { that.jump(pos) }) // yes, \"slid\"\r\n            if (activeIndex == pos)  return this.pause().cycle()\r\n\r\n            return this._mode.jump(pos > activeIndex ? 'next' : 'prev', this._$items.eq(pos))\r\n        },\r\n         */\r\n\r\n        /*\r\n         * Stops the carousel from cycling through items.\r\n         */\r\n        pause : function(pausing) {\r\n            if (langx.isUndefined(pausing)) {\r\n              pausing = true;\r\n            }\r\n            this.paused = !!pausing;\r\n\r\n            ///e || (this.paused = true)\r\n\r\n            ///if (this._$elm.find(this.options.controls.selectors.next + \",\"+ this.options.controls.selectors.prev).length) { //.next,.prev\r\n                ///this._$elm.trigger(browser.support.transition.end)\r\n                ///this.cycle(true)\r\n            ///}\r\n\r\n            ///this.interval = clearInterval(this.interval)\r\n            this.cycle();\r\n\r\n            return this\r\n        },\r\n\r\n        /*\r\n         * Cycles to the next item. Returns to the caller before the next item has been shown\r\n         */\r\n        next : function() {\r\n            return this.jump('next')\r\n        },\r\n\r\n        /*\r\n         * Cycles to the previous item. Returns to the caller before the previous item has been shown.\r\n         */\r\n        prev : function() {\r\n            return this.jump('prev')\r\n        },\r\n\r\n        resetItems : function() {\r\n          Group.prototype.resetItems.call(this);\r\n\r\n          if (this._mode && this._mode.resetItems) {\r\n            this._mode.resetItems();\r\n          }\r\n        },\r\n\r\n        addItems : function(items) {\r\n            let index = this.getItemsCount();\r\n            for (var i=0; i<items.length;i++) {\r\n              this.addItem(index++,items[i]);\r\n            }\r\n            this.resetItems();\r\n        },\r\n\r\n        addItem : function(index,itemData) {\r\n          let itemHtml = this.renderItemHtml(itemData),\r\n              baseClass = this.options.item.classes.base;\r\n\r\n\r\n          let $item = $(itemHtml);\r\n          if (baseClass) {\r\n            $item.addClass(baseClass);\r\n          }\r\n\r\n          if (this._$itemsContainer) {\r\n            this._$itemsContainer.append($item);\r\n          }\r\n          if (this._indicators) {\r\n            this._indicators.addIndicator(index,itemData);\r\n          }\r\n        },\r\n\r\n        clearItems : function() {\r\n          if (this._$itemsContainer) {\r\n            this._$itemsContainer.attr(\"style\",\"\");\r\n          }\r\n          this._$items.remove();\r\n          this._$items = $();\r\n\r\n          if (this._indicators) {\r\n            this._indicators.clearIndicators();\r\n          }\r\n        }\r\n  });\r\n\r\n  var modes = Carousel.modes = {\r\n    \"slide\" : ModeSlide,\r\n    \"rotate\" : ModeRotate,\r\n    \"coverflow\" : ModeCoverflow\r\n  };\r\n\r\n  plugins.register(Carousel);\r\n\r\n  return groups.Carousel = Carousel;\t\r\n});"]}