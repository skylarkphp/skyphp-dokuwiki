{"version":3,"sources":["sortable.js"],"names":["define","groups","langx","noder","datax","geom","eventer","styler","$","plugins","Draggable","Droppable","on","off","attr","removeAttr","pagePosition","addClass","height","Array","prototype","some","map","Plugin","inherit","klassName","enable","disable","destory","dragging","placeholders","Sortable","pluginName","options","connectWith","placeholder","placeholderClass","draggingClass","items","_construct","container","this","overrided","index","$container","$items","children","createElement","test","tagName","class","source","handle","preparing","e","started","ghost","dragSource","transfer","text","ended","show","detach","parent","trigger","item","acceptable","activeClass","hoverClass","overing","is","overElm","forcePlaceholderSize","outerHeight","hide","not","length","append","dropped","filter","after","data","add","register"],"mappings":";;;;;;;AAAAA,QACI,WACA,sBACA,qBACA,oBACA,oBACA,uBACA,sBACA,qBACA,4BACA,qCACA,sCACF,SAASC,EAAQC,EAAMC,EAAMC,EAAMC,EAAKC,EAAQC,EAAOC,EAAEC,EAAQC,EAAUC,GAC1E,aAEUL,EAAQM,GACPN,EAAQO,IACPT,EAAMU,KACAV,EAAMW,WACVV,EAAKW,aACHT,EAAOU,SACTZ,EAAKa,OACPC,MAAMC,UAAUC,KACjBF,MAAMC,UAAUE,IAEbb,EAAQc,OAAOC,SACxBC,UAAc,SAEdC,OAAS,aAITC,QAAU,aAIVC,QAAU,eArBd,IA2BIC,EAAUC,EAAetB,IAGzBuB,EAAWtB,EAAQc,OAAOC,SAC1BC,UAAW,WAEXO,WAAa,uBAEbC,SACIC,aAAa,EACbC,YAAa,KACbC,iBAAkB,uBAClBC,cAAe,oBACfC,MAAQ,MAWZC,WAAa,SAAUC,EAAUP,GAC7BQ,KAAKC,UAAUF,EAAUP,GAEzBA,EAAUQ,KAAKR,QAEf,IAAcU,EACVC,EAAapC,EAAEgC,GACfK,EAASD,EAAWE,SAASb,EAAQK,OACrCH,EAAc3B,EAAEyB,EAAQE,aAAehC,EAAM4C,cAAc,aAAaC,KAAKR,EAAUS,SAAW,KAAO,OACzGC,MAAUjB,EAAQG,oBAGtB1B,EAAU8B,GACNW,OAASlB,EAAQK,MACjBc,OAASnB,EAAQmB,OACjBf,cAAgBJ,EAAQI,cACxBgB,UAAY,SAASC,KAGrBC,QAAS,SAASD,GACdA,EAAEE,MAAQF,EAAEG,WACZH,EAAEI,UACEC,KAAQ,SAEZhB,GAASd,EAAWrB,EAAE8C,EAAEG,aAAad,SAEzCiB,MAAQ,SAASN,GACRzB,IAGLA,EAASgC,OACT/B,EAAagC,SACTnB,GAASd,EAASc,SAClBd,EAASkC,SAASC,QAAQ,cAAeC,KAAMpC,IAEnDA,EAAW,SAMnBlB,EAAU6B,GACNe,QAAS,SAASD,GACdA,EAAEY,YAAa,EACfZ,EAAEa,YAAc,SAChBb,EAAEc,WAAa,QAEnBC,QAAU,SAASf,GACXT,EAAOyB,GAAGhB,EAAEiB,UACRtC,EAAQuC,sBACRrC,EAAYjB,OAAOW,EAAS4C,eAEhC5C,EAAS6C,OACTlE,EAAE8C,EAAEiB,SAASpC,EAAYQ,QAAUnC,EAAE8C,EAAEiB,SAAS5B,QAAU,QAAU,UAAUR,GAC9EL,EAAa6C,IAAIxC,GAAa2B,UACtBhC,EAAawC,GAAGhB,EAAEiB,UAAa/D,EAAE8C,EAAEiB,SAASzB,SAASb,EAAQK,OAAOsC,SAC5E9C,EAAagC,SACbtD,EAAE8C,EAAEiB,SAASM,OAAO1C,KAG5B2C,QAAU,SAASxB,GACfxB,EAAaiD,OAAO,YAAYC,MAAMnD,GACtCA,EAASgC,OACT/B,EAAagC,SAEbjC,EAAW,QAInBe,EAAWqC,KAAK,QAAShD,EAAQK,OACjCR,EAAeA,EAAaoD,IAAI/C,GAC5BF,EAAQC,aACR1B,EAAEyB,EAAQC,aAAagD,IAAIzC,MAAMwC,KAAK,cAAehD,EAAQC,gBAQzE,OAFAzB,EAAQ0E,SAASpD,EAAS,YAEnB9B,EAAO8B,SAAWA","file":"../sortable.js","sourcesContent":["define([\r\n    \"./groups\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-plugins-base\",\r\n    \"skylark-domx-plugins-dnd/draggable\",\r\n    \"skylark-domx-plugins-dnd/droppable\"\r\n],function(groups, langx,noder,datax,geom,eventer,styler,$,plugins,Draggable,Droppable){\r\n   'use strict'\r\n\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n    var Sorter = plugins.Plugin.inherit({\r\n        \"klassName\" : \"Sorter\",\r\n\r\n        enable : function() {\r\n\r\n        },\r\n        \r\n        disable : function() {\r\n\r\n        },\r\n\r\n        destory : function() {\r\n\r\n        }\r\n    });\r\n\r\n\r\n    var dragging, placeholders = $();\r\n\r\n\r\n    var Sortable = plugins.Plugin.inherit({\r\n        klassName: \"Sortable\",\r\n\r\n        pluginName : \"lark.groups.sortable\",\r\n        \r\n        options : {\r\n            connectWith: false,\r\n            placeholder: null,\r\n            placeholderClass: 'sortable-placeholder',\r\n            draggingClass: 'sortable-dragging',\r\n            items : null\r\n        },\r\n\r\n        /*\r\n         * @param {HTMLElement} container  the element to use as a sortable container\r\n         * @param {Object} options  options object\r\n         * @param {String} [options.items = \"\"] \r\n         * @param {Object} [options.connectWith =] the selector to create connected groups\r\n         * @param {Object} [options\r\n         * @param {Object} [options\r\n         */\r\n        _construct : function (container,options) {\r\n            this.overrided(container,options);\r\n\r\n            options = this.options;\r\n\r\n            var isHandle, index, \r\n                $container = $(container), \r\n                $items = $container.children(options.items);\r\n            var placeholder = $(options.placeholder || noder.createElement(/^(ul|ol)$/i.test(container.tagName) ? 'li' : 'div',{\r\n                \"class\" : options.placeholderClass\r\n            }));\r\n\r\n            Draggable(container,{\r\n                source : options.items,\r\n                handle : options.handle,\r\n                draggingClass : options.draggingClass,\r\n                preparing : function(e) {\r\n                    //e.dragSource = e.handleElm;\r\n                },\r\n                started :function(e) {\r\n                    e.ghost = e.dragSource;\r\n                    e.transfer = {\r\n                        \"text\": \"dummy\"\r\n                    };\r\n                    index = (dragging = $(e.dragSource)).index();\r\n                },\r\n                ended : function(e) {\r\n                    if (!dragging) {\r\n                        return;\r\n                    }\r\n                    dragging.show();\r\n                    placeholders.detach();\r\n                    if (index != dragging.index()) {\r\n                        dragging.parent().trigger('sortupdate', {item: dragging});\r\n                    }\r\n                    dragging = null;                \r\n                }\r\n\r\n            });\r\n\r\n            \r\n            Droppable(container,{\r\n                started: function(e) {\r\n                    e.acceptable = true;\r\n                    e.activeClass = \"active\";\r\n                    e.hoverClass = \"over\";\r\n                },\r\n                overing : function(e) {\r\n                    if ($items.is(e.overElm)) {\r\n                        if (options.forcePlaceholderSize) {\r\n                            placeholder.height(dragging.outerHeight());\r\n                        }\r\n                        dragging.hide();\r\n                        $(e.overElm)[placeholder.index() < $(e.overElm).index() ? 'after' : 'before'](placeholder);\r\n                        placeholders.not(placeholder).detach();\r\n                    } else if (!placeholders.is(e.overElm) && !$(e.overElm).children(options.items).length) {\r\n                        placeholders.detach();\r\n                        $(e.overElm).append(placeholder);\r\n                    }                \r\n                },\r\n                dropped : function(e) {\r\n                    placeholders.filter(':visible').after(dragging);\r\n                    dragging.show();\r\n                    placeholders.detach();\r\n\r\n                    dragging = null;                \r\n                  }\r\n            });\r\n\r\n            $container.data('items', options.items)\r\n            placeholders = placeholders.add(placeholder);\r\n            if (options.connectWith) {\r\n                $(options.connectWith).add(this).data('connectWith', options.connectWith);\r\n            }\r\n            \r\n        }\r\n    });\r\n\r\n    plugins.register(Sortable,\"sortable\");\r\n\r\n    return groups.Sortable = Sortable;\r\n});\r\n"]}