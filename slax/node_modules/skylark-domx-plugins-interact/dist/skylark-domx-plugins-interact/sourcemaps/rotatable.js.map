{"version":3,"sources":["rotatable.js"],"names":["define","langx","noder","datax","geom","eventer","styler","plugins","interact","on","off","attr","removeAttr","pagePosition","addClass","height","Array","prototype","some","map","applyTranform","obj","tX","tY","style","transform","Rotatable","Plugin","inherit","klassName","pluginName","_construct","elm","options","this","overrided","overlayDiv","prevX","prevY","timer","handleEl","handle","doc","document","startingCallback","starting","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","deltaX","deltaY","move","e","clientX","clientY","preventDefault","stop","setInterval","Math","abs","clearInterval","remove","pointerType","button","cursor","docSize","getDocumentSize","ret","isPlainObject","css","createElement","position","top","left","width","zIndex","opacity","append","body","_handleEl","register"],"mappings":";;;;;;;AAAAA,QACI,sBACA,qBACA,oBACA,oBACA,uBACA,sBACA,4BACA,cACF,SAASC,EAAMC,EAAMC,EAAMC,EAAKC,EAAQC,EAAOC,EAAQC,GAC5CH,EAAQI,GACPJ,EAAQK,IACPP,EAAMQ,KACAR,EAAMS,WACVR,EAAKS,aACHP,EAAOQ,SACTV,EAAKW,OACPC,MAAMC,UAAUC,KACjBF,MAAMC,UAAUE,IAI1B,SAASC,EAAcC,EAAIC,EAAGC,GAEtBA,EAAK,MAAKA,EAAK,KACfA,EAAK,IAAGA,EAAK,GAGjBF,EAAIG,MAAMC,UAAY,YAAcF,EAAK,gBAAkBD,EAAK,OAIpE,IAAII,EAAYnB,EAAQoB,OAAOC,SAC3BC,UAAW,YAEXC,WAAa,0BAGbC,WAAa,SAAUC,EAAKC,GACxBC,KAAKC,UAAUH,EAAIC,GAInB,IAEIG,EAKAC,EACAC,EAWAC,EAlBAC,GAFJP,EAAUC,KAAKD,SAEQQ,QAAUT,EAE7BU,EAAMT,EAAQU,UAAYA,SAM1BC,EAAmBX,EAAQY,SAC3BC,EAAkBb,EAAQc,QAC1BC,EAAiBf,EAAQgB,OACzBC,EAAkBjB,EAAQkB,QAE1B7B,EAAK,EACLC,EAAK,GACL6B,EAAS,EACTC,EAAS,EA8DTC,EAAO,SAASC,GAGZH,EAASG,EAAEH,OAASG,EAAEC,QAAUnB,EAChCgB,EAASE,EAAEF,OAASE,EAAEE,QAAUnB,EAEhCD,EAAQkB,EAAEC,QACVlB,EAAQiB,EAAEE,QAKVrC,EAAcY,EAFdV,GAAe,GAAT8B,EACN7B,GAAe,GAAT8B,GAGNE,EAAEG,iBAEEV,GACAA,EAAeO,IAIvBI,EAAO,SAASJ,GACZlD,EAAQK,IAAIgC,EAAK,cAAeY,GAAM5C,IAAIgC,EAAK,YAAaiB,GAI5DpB,EAAQqB,YAAY,WAEhBP,GAAU,IAGVjC,EAAcY,EAFdV,GAAe,IAFf8B,GAAU,KAGV7B,GAAe,GAAT6B,GAIFS,KAAKC,IAAIV,GAAU,IAAOS,KAAKC,IAAIT,GAAU,IAC/CU,cAAcxB,IAGjB,IAEHrC,EAAM8D,OAAO5B,GAETc,GACAA,EAAgBK,IAI5BlD,EAAQI,GAAG+B,EAAU,cAzGT,SAASe,GACb,GAAmB,SAAfA,EAAEU,aAAsC,IAAbV,EAAEW,OAC7B,OAAOP,EAAKJ,GAGhB,IACIY,EADAC,EAAUhE,EAAKiE,gBAAgB3B,GAGnC,GAAIE,EAAkB,CAClB,IAAI0B,EAAM1B,EAAiBW,GAC3B,IAAa,IAARe,EACD,OACOrE,EAAMsE,cAAcD,KACvBA,EAAIvB,UACJD,EAAkBwB,EAAIvB,SAEtBuB,EAAIrB,SACJD,EAAiBsB,EAAIrB,QAErBqB,EAAInB,UACJD,EAAkBoB,EAAInB,UAKlCI,EAAEG,iBAEWH,EAAEW,OAGf7B,EAAQkB,EAAEC,QACVlB,EAAQiB,EAAEE,QAGVU,EAAS7D,EAAOkE,IAAIhC,EAAU,UAE9BJ,EAAalC,EAAMuE,cAAc,OACjCnE,EAAOkE,IAAIpC,GACPsC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,MAAOT,EAAQS,MACf9D,OAAQqD,EAAQrD,OAChB+D,OAAQ,WACRC,QAAS,KACTZ,OAAQA,IAEZjE,EAAM8E,OAAOtC,EAAIuC,KAAM7C,GAEvB2B,cAAcxB,GAEdlC,EAAQI,GAAGiC,EAAK,cAAeY,GAAM7C,GAAGiC,EAAK,YAAaiB,GAEtDb,GACAA,EAAgBS,KAqD5BrB,KAAKgD,UAAY1C,GAIrBwB,OAAS,WACL3D,EAAQK,IAAIwB,KAAKgD,cAMzB,OAFA3E,EAAQ4E,SAASzD,EAAU,aAEpBlB,EAASkB,UAAYA","file":"../rotatable.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-plugins-base\",\r\n    \"./interact\"\r\n],function(langx,noder,datax,geom,eventer,styler,plugins,interact){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n\r\n\r\n    function applyTranform(obj,tX,tY) {\r\n        // Constrain the angle of camera (between 0 and 180)\r\n        if (tY > 180) tY = 180;\r\n        if (tY < 0) tY = 0;\r\n\r\n        // Apply the angle\r\n        obj.style.transform = \"rotateX(\" + -tY + \"deg) rotateY(\" + tX + \"deg)\";\r\n    }\r\n\r\n\r\n    var Rotatable = plugins.Plugin.inherit({\r\n        klassName: \"Rotatable\",\r\n\r\n        pluginName : \"lark.interact.rotatable\",\r\n\r\n\r\n        _construct : function (elm, options) {\r\n            this.overrided(elm,options);\r\n\r\n\r\n            options = this.options;\r\n            var self = this,\r\n                handleEl = options.handle || elm,\r\n                overlayDiv,\r\n                doc = options.document || document,\r\n                downButton,\r\n                start,\r\n                stop,\r\n                prevX,\r\n                prevY,\r\n                startingCallback = options.starting,\r\n                startedCallback = options.started,\r\n                movingCallback = options.moving,\r\n                stoppedCallback = options.stopped,\r\n\r\n                tX = 0,\r\n                tY = 10,\r\n                deltaX = 0,\r\n                deltaY = 0,\r\n\r\n                timer,\r\n\r\n                start = function(e) {\r\n                    if (e.pointerType==\"mouse\" &&  e.button !== 0) {\r\n                        return stop(e);\r\n                    }\r\n                    \r\n                    var docSize = geom.getDocumentSize(doc),\r\n                        cursor;\r\n\r\n                    if (startingCallback) {\r\n                        var ret = startingCallback(e)\r\n                        if ( ret === false) {\r\n                            return;\r\n                        } else if (langx.isPlainObject(ret)) {\r\n                            if (ret.started) {\r\n                                startedCallback = ret.started;\r\n                            }\r\n                            if (ret.moving) {\r\n                                movingCallback = ret.moving;\r\n                            }                            \r\n                            if (ret.stopped) {\r\n                                stoppedCallback = ret.stopped;\r\n                            }     \r\n                        }\r\n                    }\r\n\r\n                    e.preventDefault();\r\n\r\n                    downButton = e.button;\r\n\r\n                    //handleEl = getHandleEl();\r\n                    prevX = e.clientX;\r\n                    prevY = e.clientY;\r\n\r\n                    // Grab cursor from handle so we can place it on overlay\r\n                    cursor = styler.css(handleEl, \"cursor\");\r\n\r\n                    overlayDiv = noder.createElement(\"div\");\r\n                    styler.css(overlayDiv, {\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        left: 0,\r\n                        width: docSize.width,\r\n                        height: docSize.height,\r\n                        zIndex: 0x7FFFFFFF,\r\n                        opacity: 0.0001,\r\n                        cursor: cursor\r\n                    });\r\n                    noder.append(doc.body, overlayDiv);\r\n\r\n                    clearInterval(timer);\r\n\r\n                    eventer.on(doc, \"pointermove\", move).on(doc, \"pointerup\", stop);\r\n\r\n                    if (startedCallback) {\r\n                        startedCallback(e);\r\n                    }\r\n                },\r\n\r\n                move = function(e) {\r\n\r\n\r\n                    deltaX = e.deltaX = e.clientX - prevX;\r\n                    deltaY = e.deltaY = e.clientY - prevY;\r\n\r\n                    prevX = e.clientX;\r\n                    prevY = e.clientY;\r\n\r\n\r\n                    tX += deltaX * 0.1;\r\n                    tY += deltaY * 0.1;\r\n                    applyTranform(elm,tX,tY);\r\n\r\n                    e.preventDefault();\r\n\r\n                    if (movingCallback) {\r\n                        movingCallback(e);\r\n                    }\r\n                },\r\n\r\n                stop = function(e) { \r\n                    eventer.off(doc, \"pointermove\", move).off(doc, \"pointerup\", stop);\r\n\r\n                    let deta\r\n\r\n                    timer = setInterval(function() {\r\n                        deltaX *= 0.95;\r\n                        deltaY *= 0.95;\r\n                        tX += deltaX * 0.1;\r\n                        tY += deltaX * 0.1;\r\n                        applyTranform(elm,tX,tY);\r\n\r\n                        ///playSpin(false);\r\n                        if (Math.abs(deltaX) < 0.5 && Math.abs(deltaY) < 0.5) {\r\n                          clearInterval(timer);\r\n                          //playSpin(true);\r\n                        }\r\n                    }, 17);\r\n\r\n                    noder.remove(overlayDiv);\r\n\r\n                    if (stoppedCallback) {\r\n                        stoppedCallback(e);\r\n                    }\r\n                };\r\n\r\n            eventer.on(handleEl, \"pointerdown\", start);\r\n\r\n            this._handleEl = handleEl;\r\n\r\n        },\r\n\r\n        remove : function() {\r\n            eventer.off(this._handleEl);\r\n        }\r\n    });\r\n\r\n    plugins.register(Rotatable,\"rotatable\");\r\n\r\n    return interact.Rotatable = Rotatable;\r\n});\r\n"]}