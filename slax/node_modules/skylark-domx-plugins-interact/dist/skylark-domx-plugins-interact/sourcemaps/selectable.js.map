{"version":3,"sources":["selectable.js"],"names":["define","langx","noder","datax","geom","eventer","styler","$","interact","Movable","on","off","attr","removeAttr","pagePosition","addClass","height","Array","prototype","some","map","container","handlers","target","startSize","currentSize","startedCallback","resizingCallback","stoppedCallback","classPrefix","direction","left","right","top","bottom","started","e","size","resizing","width","deltaX","deltaY","pageRect","stopped","selector","mixin","init","options","appendTo","document","body","n","createElement","class","append","forEach","data-resize-handler","handler","auto","moving","select","el","startDim","rectDim","startPos","show","unselect","hide","Selectable"],"mappings":";;;;;;;AAAAA,QACI,sBACA,qBACA,oBACA,oBACA,uBACA,sBACA,qBACA,aACA,aACF,SAASC,EAAMC,EAAMC,EAAMC,EAAKC,EAAQC,EAAOC,EAAEC,EAASC,GAC/CJ,EAAQK,GACPL,EAAQM,IACPR,EAAMS,KACAT,EAAMU,WACVT,EAAKU,aACHR,EAAOS,SACTX,EAAKY,OACPC,MAAMC,UAAUC,KACjBF,MAAMC,UAAUE,IAR1B,IA2EIC,EACAC,EACAC,EAOAC,EACAC,EAEAC,EACAC,EACAC,EAfAC,EAAc,GAIdC,GACIC,MAAO,EACPC,OAAQ,EACRC,KAAM,EACNC,QAAS,GAyCjB,SAASC,EAAQC,GACCA,EAAEb,OAChBC,EAAYpB,EAAKiC,KAAKd,GAClBG,GACAA,EAAgBU,GAIxB,SAASE,EAASF,GACdX,KAEIK,EAAUC,MAAQD,EAAUE,MAC5BP,EAAYc,MAAQf,EAAUe,MAAQH,EAAEI,OAExCf,EAAYc,MAAQf,EAAUe,MAG9BT,EAAUG,KAAOH,EAAUI,OAC3BT,EAAYT,OAASQ,EAAUR,OAASoB,EAAEK,OAE1ChB,EAAYT,OAASQ,EAAUR,OAGnCZ,EAAKiC,KAAKd,EAAOE,GACjBrB,EAAKsC,SAASrB,EAAUjB,EAAKsC,SAASnB,IAElCI,GACAA,EAAiBS,GAKzB,SAASO,EAAQP,GACTR,GACAA,EAAgBQ,GAyCxB,SAASQ,IACP,OAAOA,EAYT,OATA3C,EAAM4C,MAAMD,GACRE,KAhHJ,SAAeC,GAEXlB,GADAkB,EAAUA,OACYlB,aAAe,GAErC,IAAImB,EAAWD,EAAQC,UAAYC,SAASC,KAgB5C,IAAK,IAAIC,KAfT9B,EAAYnB,EAAMkD,cAAc,OAC5BC,MAAUxB,EAAc,cAE5B3B,EAAMoD,OAAON,EAAS3B,GAItBC,MACC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAMiC,QAAQ,SAASJ,GAC9D,OAAO7B,EAAS6B,GAAKjD,EAAMkD,cAAc,KACjCC,MAAUxB,EAAc,aAAeA,EAAc,aAAesB,EACpEK,sBAAwBL,MAItB7B,EAAU,CACpB,IAAImC,EAAUnC,EAAS6B,GACvBjD,EAAMoD,OAAOjC,EAAUoC,GACvBhD,EAAQgD,GACJC,MAAO,EACPvB,QAAUA,EACVwB,OAASrB,EACTK,QAAUA,MAuFlBiB,OA3CJ,SAAgBC,EAAGd,GAEXc,GAAMA,IAAOtC,IAIjBA,EAASsC,EACTC,SAAWC,QAAUC,SAAW,KAEhC5D,EAAKsC,SAASrB,EAAUjB,EAAKsC,SAASnB,IACtCjB,EAAO2D,KAAK5C,KAmCZ6C,SA9BJ,SAAkB9B,GACVf,GACAf,EAAO6D,KAAK9C,GAEhBE,EAAS,QA8BNf,EAAS4D,WAAaxB","file":"../selectable.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-query\",\r\n    \"./interact\",\r\n    \"./Movable\"\r\n],function(langx,noder,datax,geom,eventer,styler,$,interact,Movable){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n\r\n\r\n    var options = {\r\n        // Function which returns custom X and Y coordinates of the mouse\r\n            mousePosFetcher: null,\r\n            // Indicates custom target updating strategy\r\n            updateTarget: null,\r\n            // Function which gets HTMLElement as an arg and returns it relative position\r\n            ratioDefault: 0,\r\n            posFetcher: null,\r\n\r\n            started: null,\r\n            moving: null,\r\n            ended: null,\r\n\r\n            // Resize unit step\r\n            step: 1,\r\n\r\n            // Minimum dimension\r\n            minDim: 32,\r\n\r\n            // Maximum dimension\r\n            maxDim: '',\r\n\r\n            // Unit used for height resizing\r\n            unitHeight: 'px',\r\n\r\n            // Unit used for width resizing\r\n            unitWidth: 'px',\r\n\r\n            // The key used for height resizing\r\n            keyHeight: 'height',\r\n\r\n            // The key used for width resizing\r\n            keyWidth: 'width',\r\n\r\n            // If true, will override unitHeight and unitWidth, on start, with units\r\n            // from the current focused element (currently used only in SelectComponent)\r\n            currentUnit: 1,\r\n\r\n            // Handlers\r\n            direction : {\r\n                tl: 1, // Top left\r\n                tc: 1, // Top center\r\n                tr: 1, // Top right\r\n                cl: 1, // Center left\r\n                cr: 1, // Center right\r\n                bl: 1, // Bottom left\r\n                bc: 1, // Bottom center\r\n                br: 1 // Bottom right,\r\n            },\r\n            handler : {\r\n                border : true,\r\n                grabber: \"\",\r\n                selector: true\r\n            }\r\n        } ,\r\n\r\n\r\n        currentPos,\r\n        startRect,\r\n        currentRect,\r\n        delta;\r\n\r\n    var classPrefix = \"\",\r\n        container,\r\n        handlers,\r\n        target,\r\n        direction ={\r\n            left : true,\r\n            right : true,\r\n            top : true,\r\n            bottom : true\r\n        },\r\n        startSize,\r\n        currentSize,\r\n\r\n        startedCallback,\r\n        resizingCallback,\r\n        stoppedCallback;\r\n\r\n    function init (options) {\r\n        options = options || {};\r\n        classPrefix = options.classPrefix || \"\";\r\n\r\n        var appendTo = options.appendTo || document.body;\r\n        container = noder.createElement('div',{\r\n            \"class\" : classPrefix + 'resizer-c'\r\n        });\r\n        noder.append(appendTo,container);\r\n\r\n\r\n        // Create handlers\r\n        handlers = {};\r\n        ['tl', 'tc', 'tr', 'cl', 'cr', 'bl', 'bc', 'br'].forEach(function(n) {\r\n            return handlers[n] = noder.createElement(\"i\",{\r\n                    \"class\" : classPrefix + 'resizer-h ' + classPrefix + 'resizer-h-' + n,\r\n                    \"data-resize-handler\" : n\r\n                });\r\n        });\r\n\r\n        for (var n in handlers) {\r\n            var handler = handlers[n];\r\n            noder.append(container,handler);\r\n            Movable(handler,{\r\n                auto : false,\r\n                started : started,\r\n                moving : resizing,\r\n                stopped : stopped\r\n            })\r\n        }\r\n    }\r\n\r\n    function started(e) {\r\n        var handler = e.target;\r\n        startSize = geom.size(target);\r\n        if (startedCallback) {\r\n            startedCallback(e);\r\n        }\r\n    }\r\n\r\n    function resizing(e) {\r\n        currentSize = {};\r\n\r\n        if (direction.left || direction.right) {\r\n            currentSize.width = startSize.width + e.deltaX;\r\n        } else {\r\n            currentSize.width = startSize.width;\r\n        }\r\n\r\n        if (direction.top || direction.bottom) {\r\n            currentSize.height = startSize.height + e.deltaY;\r\n        } else {\r\n            currentSize.height = startSize.height;\r\n        }\r\n\r\n        geom.size(target,currentSize);\r\n        geom.pageRect(container,geom.pageRect(target));\r\n\r\n        if (resizingCallback) {\r\n            resizingCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function stopped(e) {\r\n        if (stoppedCallback) {\r\n            stoppedCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function select(el,options) {\r\n        // Avoid focusing on already focused element\r\n        if (el && el === target) {\r\n          return;\r\n        } \r\n\r\n        target = el; \r\n        startDim = rectDim = startPos = null;\r\n\r\n        geom.pageRect(container,geom.pageRect(target));\r\n        styler.show(container);\r\n\r\n    }\r\n\r\n\r\n    function unselect(e) {\r\n        if (container) {\r\n            styler.hide(container);\r\n        }\r\n        target = null;\r\n    }\r\n\r\n    function isHandler(el) {\r\n        if (handlers) {\r\n            for (var n in handlers) {\r\n              if (handlers[n] === el) return true;\r\n            }                \r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    function docs(el) {\r\n        return [noder.ownerDoc(el), noder.doc()];\r\n    }\r\n\r\n    function selector(){\r\n      return selector;\r\n    }\r\n\r\n    langx.mixin(selector, {\r\n        init : init,\r\n\r\n        select : select,\r\n\r\n        unselect : unselect\r\n\r\n    });\r\n\r\n    return interact.Selectable = selector;\r\n});\r\n"]}