{"version":3,"sources":["nav-menu.js"],"names":["define","langx","$","lists","plugins","menus","Menu","NavMenu","inherit","klassName","pluginName","options","item","templates","_construct","elm","prototype","call","this","data","items","resetItems","multitier","togglable","classes","active","selectors","general","sublist","submenu","descendant","hasSublist","hasChildren","multiExpand","itemsData","self","$itemsContainer","container","forEach","itemData","renderItem","$container","$item","children","renderHasChildrenMenuItem","renderGeneralMenuItem","append","$childrenContainer","find","childItemData","register"],"mappings":";;;;;;;AAAAA,QACE,sBACA,qBACA,qBACA,4BACA,UACA,UACA,SAASC,EAAMC,EAAEC,EAAMC,EAAQC,EAAMC,GACrC,aAEA,IAAIC,EAAUD,EAAKE,SACjBC,UAAY,UAEZC,WAAa,iBAEbC,SACEC,MACEC,eAKJC,WAAa,SAASC,EAAIJ,GACtBL,EAAKU,UAAUF,WAAWG,KAAKC,KAAKH,EAAIJ,GAEpCO,KAAKP,QAAQQ,KAAKC,OACpBF,KAAKG,WAAWH,KAAKP,QAAQQ,KAAKC,OAGpCjB,EAAMmB,UAAUP,GACdQ,WAAY,EAEZC,SACEC,OAAUP,KAAKP,QAAQC,KAAKY,QAAQC,QAKtCC,WACEd,KAAOM,KAAKP,QAAQC,KAAKc,UAAUC,QACnCC,QAAUV,KAAKP,QAAQkB,QAAQH,UAAUI,WACzCC,WAAab,KAAKP,QAAQC,KAAKc,UAAUM,aAI3CC,aAAc,KAKpBZ,WAAa,SAASa,GACpB,IAAIC,EAAOjB,KAqBX,IAAIkB,EAAkBlB,KAAKhB,EAAEgB,KAAKP,QAAQe,UAAUW,WAEpDH,EAAUI,QAASC,KArBnB,SAASC,EAAWD,EAASE,GAC3B,IAAIC,EAUJ,IAREA,EADEH,EAASI,SACHR,EAAKS,0BAA0BL,GAE/BJ,EAAKU,sBAAsBN,IAG/BpB,KAAK,OAAOoB,GAClBE,EAAWK,OAAOJ,GAEdH,EAASI,SAAU,CACrB,IAAII,EAAqBL,EAAMM,KAAKb,EAAKxB,QAAQkB,QAAQH,UAAUiB,UACnEJ,EAASI,SAASL,QAASW,IACzBT,EAAWS,EAAcF,MAQ7BP,CAAWD,EAASH,QAS1B,OAFAhC,EAAQ8C,SAAS3C,GAEVF,EAAME,QAAUA","file":"../nav-menu.js","sourcesContent":["define([\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-lists\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"./menus\",\r\n  \"./menu\"\r\n],function(langx,$,lists,plugins,menus,Menu){\r\n  'use strict'\r\n\r\n  var NavMenu = Menu.inherit({\r\n    klassName : \"NavMenu\",\r\n\r\n    pluginName : \"lark.menus.nav\",\r\n\r\n    options : {\r\n      item : {\r\n        templates : {\r\n        } \r\n      }\r\n    },\r\n\r\n    _construct : function(elm,options) {\r\n        Menu.prototype._construct.call(this,elm,options);\r\n\r\n        if (this.options.data.items) {\r\n          this.resetItems(this.options.data.items);\r\n        }\r\n\r\n        lists.multitier(elm, {\r\n          togglable : false,\r\n\r\n          classes : {\r\n            active :  this.options.item.classes.active  // active\r\n           /// collapse : \"collapse\",\r\n           /// in : \"in\",\r\n          },\r\n\r\n          selectors : {\r\n            item : this.options.item.selectors.general,          //li\r\n            sublist : this.options.submenu.selectors.descendant, //\"ul\",\r\n            hasSublist : this.options.item.selectors.hasChildren//\":has(ul)\",\r\n            ///handler : \" > a\"\r\n          },\r\n\r\n          multiExpand : false\r\n\r\n        });\r\n    },\r\n\r\n    resetItems : function(itemsData) {\r\n      let self = this;\r\n\r\n      function renderItem(itemData,$container) {\r\n        let $item;\r\n        if (itemData.children) {\r\n          $item = self.renderHasChildrenMenuItem(itemData);\r\n        } else {\r\n          $item = self.renderGeneralMenuItem(itemData);\r\n        }\r\n\r\n        $item.data(\"item\",itemData);\r\n        $container.append($item)\r\n\r\n        if (itemData.children) {\r\n          let $childrenContainer = $item.find(self.options.submenu.selectors.children);\r\n          itemData.children.forEach((childItemData) => {\r\n            renderItem(childItemData,$childrenContainer);            \r\n          });\r\n        }\r\n      }\r\n        \r\n      let $itemsContainer = this.$(this.options.selectors.container)\r\n\r\n      itemsData.forEach((itemData)=>{\r\n        renderItem(itemData,$itemsContainer);\r\n      });\r\n    }\r\n\r\n  });\r\n\r\n\r\n  plugins.register(NavMenu);\r\n\r\n  return menus.NavMenu = NavMenu;\t\r\n});"]}