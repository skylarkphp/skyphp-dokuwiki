{"version":3,"sources":["viewer.js"],"names":["define","langx","eventer","geom","$","preload","plugins","Movable","pictures","PictureViewer","Plugin","inherit","klassName","pluginName","options","ratioThreshold","minRatio","maxRatio","movable","classes","grab","loader","_construct","elm","prototype","call","this","$stage","$image","find","off","on","e","_handleWheel","_movable","starting","imageWidth","width","imageHeight","height","stageWidth","stageHeight","minX","minY","maxX","maxY","constraints","started","stop","getImageScaleToStage","scale","isRotated","Math","min","img","setGrabCursor","imageData","stageData","h","w","addClass","removeClass","setImageSize","css","ceil","left","top","mixin","initWidth","initHeight","initLeft","initTop","imageLoaded","remove","initAnimation","progressiveLoading","fadeIn","loadImage","imgSrc","fn","err","removeAttr","attr","rotateAngle","append","hide","then","data","imgs","originalWidth","originalHeight","$photoviewer","preventDefault","delta","deltaY","wheelDelta","detail","ratio","pointer","x","clientX","offset","scrollLeft","document","body","y","clientY","scrollTop","zoom","origin","zoomTo","imgData","newWidth","newHeight","newLeft","newTop","Î´","imgNewWidth","imgNewHeight","offsetX","offsetY","abs","round","extend","rotate","angle","rotateTo","transform","resize","shortcut","keyCode","ctrlKey","altKey","handled"],"mappings":"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","file":"../viewer.js","sourcesContent":["define([\r\n    \"skylark-langx\",\r\n    \"skylark-domx/eventer\",\r\n    \"skylark-domx/geom\",\r\n    \"skylark-domx/query\",\r\n    \"skylark-domx-images/preload\",\r\n    \"skylark-domx-plugins-base\",\r\n    \"skylark-domx-plugins-interact/movable\",\r\n    \"./pictures\"\r\n], function (langx,eventer,geom,$,preload,plugins,Movable,pictures) {\r\n    'use strict';\r\n\r\n    var PictureViewer = plugins.Plugin.inherit({\r\n        klassName : \"PictureViewer\",\r\n\r\n        pluginName : \"lark.pictures.pictureviewer\",\r\n\r\n        options : {\r\n            ratioThreshold: 0.1,\r\n            minRatio: 0.05,\r\n            maxRatio: 16,\r\n            movable : true,\r\n\r\n            classes : {\r\n                grab : null,\r\n                loader : null\r\n            }\r\n        },\r\n\r\n        _construct : function(elm,options) {\r\n            plugins.Plugin.prototype._construct.call(this,elm,options);\r\n\r\n            this.$stage = this.$();\r\n            this.$image = this.$stage.find(\"img\");\r\n            \r\n\r\n            this.$stage.off(\"wheel\").on(\"wheel\", e => {\r\n                this._handleWheel(e);\r\n            });\r\n\r\n            if (this.options.movable) {\r\n                this._movable = new Movable(this.$image[0],{\r\n                    starting : (e) => {\r\n                        const imageWidth = this.$image.width();\r\n                        const imageHeight = this.$image.height();\r\n                        const stageWidth = this.$stage.width();\r\n                        const stageHeight = this.$stage.height();\r\n                        let minX,minY,maxX,maxY;\r\n\r\n                        if (stageWidth>=imageWidth && stageHeight>=imageHeight) {\r\n                            return false;\r\n                        }\r\n\r\n                        if (stageWidth>=imageWidth) {\r\n                            minX=maxX=(stageWidth-imageWidth) / 2;\r\n                        } else {\r\n                            minX = stageWidth - imageWidth;\r\n                            maxX = 0;\r\n                        }\r\n\r\n                        if (stageHeight>=imageHeight) {\r\n                            minY=maxY=(stageHeight-imageHeight) / 2;\r\n                        } else {\r\n                            minY = stageHeight - imageHeight;\r\n                            maxY = 0;\r\n                        }\r\n\r\n                        return {\r\n                            constraints : {\r\n                                minX,\r\n                                maxX,\r\n                                minY,\r\n                                maxY\r\n                            }\r\n                        };\r\n                    },\r\n                    started : function(e) {\r\n                        eventer.stop(e);\r\n                    }\r\n                });\r\n            }\r\n\r\n        }, \r\n\r\n        getImageScaleToStage : function(stageWidth, stageHeight) {\r\n            let scale = 1;\r\n            if (!this.isRotated) {\r\n                scale = Math.min(stageWidth / this.img.width, stageHeight / this.img.height, 1);\r\n            } else {\r\n                scale = Math.min(stageWidth / this.img.height, stageHeight / this.img.width, 1);\r\n            }\r\n            return scale;\r\n        },\r\n\r\n        setGrabCursor : function (imageData, stageData, isRotated) {\r\n            const imageWidth = !isRotated ? imageData.w : imageData.h;\r\n            const imageHeight = !isRotated ? imageData.h : imageData.w;\r\n            if (imageHeight > stageData.h || imageWidth > stageData.w) {\r\n                this.$stage.addClass('is-grab');\r\n            }\r\n            if (imageHeight <= stageData.h && imageWidth <= stageData.w) {\r\n                this.$stage.removeClass('is-grab');\r\n            }\r\n        },\r\n\r\n        setImageSize: function(img) {\r\n            const stageData = {\r\n                w: this.$stage.width(),\r\n                h: this.$stage.height()\r\n            };\r\n            const scale = this.getImageScaleToStage(stageData.w, stageData.h);\r\n            this.$image.css({\r\n                width: Math.ceil(img.width * scale) + 'px',\r\n                height: Math.ceil(img.height * scale) + 'px',\r\n                left: (stageData.w - Math.ceil(img.width * scale)) / 2 + 'px',\r\n                top: (stageData.h - Math.ceil(img.height * scale)) / 2 + 'px'\r\n            });\r\n            langx.mixin(this.imageData, {\r\n                initWidth: img.width * scale,\r\n                initHeight: img.height * scale,\r\n                initLeft: (stageData.w - img.width * scale) / 2,\r\n                initTop: (stageData.h - img.height * scale) / 2,\r\n                width: img.width * scale,\r\n                height: img.height * scale,\r\n                left: (stageData.w - img.width * scale) / 2,\r\n                top: (stageData.h - img.height * scale) / 2\r\n            });\r\n            this.setGrabCursor({\r\n                w: this.$image.width(),\r\n                h: this.$image.height()\r\n            }, {\r\n                w: this.$stage.width(),\r\n                h: this.$stage.height()\r\n            }, this.isRotated);\r\n            if (!this.imageLoaded) {\r\n                this.$stage.find(\".${ this.options.classes.loader }\").remove();\r\n                this.$stage.removeClass('stage-ready');\r\n                this.$image.removeClass('image-ready');\r\n                if (this.options.initAnimation && !this.options.progressiveLoading) {\r\n                    this.$image.fadeIn();\r\n                }\r\n                this.imageLoaded = true;\r\n            }\r\n        },\r\n\r\n        loadImage : function(imgSrc, fn, err) {\r\n            this.$image.removeAttr('style').attr('src', '');\r\n            this.isRotated = false;\r\n            this.rotateAngle = 0;\r\n            this.imageLoaded = false;\r\n            this.$stage.append(`<div class=\"${ this.options.classes.loader }\"></div>`);\r\n            this.$stage.addClass('stage-ready');\r\n            this.$image.addClass('image-ready');\r\n            if (this.options.initAnimation && !this.options.progressiveLoading) {\r\n                this.$image.hide();\r\n            }\r\n            this.$image.attr('src', imgSrc);\r\n            preload(imgSrc).then((data) => {\r\n                var img = data.imgs[0];\r\n                this.img = img;\r\n                this.imageData = {\r\n                    originalWidth: img.width,\r\n                    originalHeight: img.height\r\n                };\r\n                ///if (this.isMaximized || this.isOpened && this.options.fixedModalPos) {\r\n                ///    this.setImageSize(img);\r\n                ///} else {\r\n                ///    this.setModalSize(img);\r\n                ///}\r\n                if (fn) {\r\n                    fn(img);\r\n                }\r\n            }, () => {\r\n                this.$photoviewer.find(\".${ this.options.classes.loader }\").remove();\r\n                if (err) {\r\n                    err.call();\r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        _handleWheel : function(e) {\r\n            e.preventDefault();\r\n            let delta = 1;\r\n            if (e.deltaY) {\r\n                delta = e.deltaY > 0 ? 1 : -1;\r\n            } else if (e.wheelDelta) {\r\n                delta = -e.wheelDelta / 120;\r\n            } else if (e.detail) {\r\n                delta = e.detail > 0 ? 1 : -1;\r\n            }\r\n            const ratio = -delta * this.options.ratioThreshold;\r\n            const pointer = {\r\n                x: e.clientX - this.$stage.offset().left + geom.scrollLeft(document.body),\r\n                y: e.clientY - this.$stage.offset().top + geom.scrollTop(document.body)\r\n            };\r\n            this.zoom(ratio, pointer, e);\r\n        },\r\n\r\n        zoom : function(ratio, origin, e) {\r\n            ratio = ratio < 0 ? 1 / (1 - ratio) : 1 + ratio;\r\n            ratio = this.$image.width() / this.imageData.originalWidth * ratio;\r\n            if (ratio > this.options.maxRatio || ratio < this.options.minRatio) {\r\n                return;\r\n            }\r\n            this.zoomTo(ratio, origin, e);\r\n        },\r\n\r\n        zoomTo : function(ratio, origin, e) {\r\n            const $image = this.$image;\r\n            const $stage = this.$stage;\r\n            const imgData = {\r\n                w: this.imageData.width,\r\n                h: this.imageData.height,\r\n                x: this.imageData.left,\r\n                y: this.imageData.top\r\n            };\r\n            const stageData = {\r\n                w: $stage.width(),\r\n                h: $stage.height(),\r\n                x: $stage.offset().left,\r\n                y: $stage.offset().top\r\n            };\r\n            const newWidth = this.imageData.originalWidth * ratio;\r\n            const newHeight = this.imageData.originalHeight * ratio;\r\n            let newLeft = origin.x - (origin.x - imgData.x) / imgData.w * newWidth;\r\n            let newTop = origin.y - (origin.y - imgData.y) / imgData.h * newHeight;\r\n            const Î´ = !this.isRotated ? 0 : (newWidth - newHeight) / 2;\r\n            const imgNewWidth = !this.isRotated ? newWidth : newHeight;\r\n            const imgNewHeight = !this.isRotated ? newHeight : newWidth;\r\n            const offsetX = stageData.w - newWidth;\r\n            const offsetY = stageData.h - newHeight;\r\n            if (imgNewHeight <= stageData.h) {\r\n                newTop = (stageData.h - newHeight) / 2;\r\n            } else {\r\n                newTop = newTop > Î´ ? Î´ : newTop > offsetY - Î´ ? newTop : offsetY - Î´;\r\n            }\r\n            if (imgNewWidth <= stageData.w) {\r\n                newLeft = (stageData.w - newWidth) / 2;\r\n            } else {\r\n                newLeft = newLeft > -Î´ ? -Î´ : newLeft > offsetX + Î´ ? newLeft : offsetX + Î´;\r\n            }\r\n            if (Math.abs(this.imageData.initWidth - newWidth) < this.imageData.initWidth * 0.05) {\r\n                this.setImageSize(this.img);\r\n            } else {\r\n                $image.css({\r\n                    width: Math.round(newWidth) + 'px',\r\n                    height: Math.round(newHeight) + 'px',\r\n                    left: Math.round(newLeft) + 'px',\r\n                    top: Math.round(newTop) + 'px'\r\n                });\r\n                this.setGrabCursor({\r\n                    w: Math.round(imgNewWidth),\r\n                    h: Math.round(imgNewHeight)\r\n                }, {\r\n                    w: stageData.w,\r\n                    h: stageData.h\r\n                });\r\n            }\r\n            $.extend(this.imageData, {\r\n                width: newWidth,\r\n                height: newHeight,\r\n                left: newLeft,\r\n                top: newTop\r\n            });\r\n        },\r\n\r\n        rotate : function(angle) {\r\n            this.rotateAngle = this.rotateAngle + angle;\r\n            if (this.rotateAngle / 90 % 2 === 0) {\r\n                this.isRotated = false;\r\n            } else {\r\n                this.isRotated = true;\r\n            }\r\n            this.rotateTo(this.rotateAngle);\r\n        },\r\n        rotateTo: function(angle) {\r\n            this.$image.css({ transform: 'rotate(' + angle + 'deg)' });\r\n            this.setImageSize({\r\n                width: this.imageData.originalWidth,\r\n                height: this.imageData.originalHeight\r\n            });\r\n            this.$stage.removeClass('is-grab');\r\n        },\r\n        resize: function() {\r\n            const imageWidth = this.$image.width();\r\n            const imageHeight = this.$image.height();\r\n            const stageWidth = this.$stage.width();\r\n            const stageHeight = this.$stage.height();\r\n            const left = (stageWidth - imageWidth) /2;\r\n            const top = (stageHeight- imageHeight) /2;\r\n            this.$image.css({\r\n                left,\r\n                top\r\n            });\r\n        },\r\n\r\n        shortcut: function(keyCode,ctrlKey,altKey) {\r\n            var handled = false;\r\n            switch (keyCode) {\r\n                // +\r\n                case 187:\r\n                    this.zoom(this.options.ratioThreshold * 3, {\r\n                        x: this.$stage.width() / 2,\r\n                        y: this.$stage.height() / 2\r\n                    }, e);\r\n                    handled = true;\r\n                    break;\r\n                // -\r\n                case 189:\r\n                    this.zoom(-this.options.ratioThreshold * 3, {\r\n                        x: this.$stage.width() / 2,\r\n                        y: this.$stage.height() / 2\r\n                    }, e);\r\n                    handled = true;\r\n                    break;\r\n                // + Firefox\r\n                case 61:\r\n                    this.zoom(this.options.ratioThreshold * 3, {\r\n                        x: this.$stage.width() / 2,\r\n                        y: this.$stage.height() / 2\r\n                    }, e);\r\n                    handled = true;\r\n                    break;\r\n                // - Firefox\r\n                case 173:\r\n                    this.zoom(-this.options.ratioThreshold * 3, {\r\n                        x: this.$stage.width() / 2,\r\n                        y: this.$stage.height() / 2\r\n                    }, e);\r\n                    handled = true;\r\n                    break;\r\n                // Ctrl + Alt + 0\r\n                case 48:\r\n                    if (ctrlKey && altKey) {\r\n                        this.zoomTo(1, {\r\n                            x: this.$stage.width() / 2,\r\n                            y: this.$stage.height() / 2\r\n                        }, e);\r\n                    }\r\n                    handled = true;\r\n                    break;\r\n                // Ctrl + ,\r\n                case 188:\r\n                    if (ctrlKey) {\r\n                        this.rotate(-90);\r\n                    }\r\n                    break;\r\n                // Ctrl + .\r\n                case 190:\r\n                    if (ctrlKey) {\r\n                        this.rotate(90);\r\n                    }\r\n                    handled = true;\r\n                    break;\r\n                default:\r\n            }\r\n\r\n            return handled;\r\n        }\r\n    });\r\n\r\n    return pictures.PictureViewer = PictureViewer;\r\n});"]}