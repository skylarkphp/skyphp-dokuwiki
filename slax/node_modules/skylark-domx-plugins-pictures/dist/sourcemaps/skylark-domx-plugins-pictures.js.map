{"version":3,"sources":["skylark-domx-plugins-pictures.js"],"names":["define","plugins","pictures","langx","eventer","geom","$","preload","Movable","PictureViewer","Plugin","inherit","klassName","pluginName","options","ratioThreshold","minRatio","maxRatio","movable","classes","grab","loader","_construct","elm","prototype","call","this","$stage","$image","find","off","on","e","_handleWheel","_movable","starting","imageWidth","width","imageHeight","height","stageWidth","stageHeight","minX","minY","maxX","maxY","constraints","started","stop","getImageScaleToStage","scale","isRotated","Math","min","img","setGrabCursor","imageData","stageData","h","w","addClass","removeClass","setImageSize","css","ceil","left","top","mixin","initWidth","initHeight","initLeft","initTop","imageLoaded","remove","initAnimation","progressiveLoading","fadeIn","loadImage","imgSrc","fn","err","removeAttr","attr","rotateAngle","append","hide","then","data","imgs","originalWidth","originalHeight","$photoviewer","preventDefault","delta","deltaY","wheelDelta","detail","ratio","pointer","x","clientX","offset","scrollLeft","document","body","y","clientY","scrollTop","zoom","origin","zoomTo","imgData","newWidth","newHeight","newLeft","newTop","Î´","imgNewWidth","imgNewHeight","offsetX","offsetY","abs","round","extend","rotate","angle","rotateTo","transform","resize","shortcut","keyCode","ctrlKey","altKey","handled","main"],"mappings":"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","file":"../skylark-domx-plugins-pictures.js","sourcesContent":["define('skylark-domx-plugins-pictures/pictures',[\n    \"skylark-domx-plugins-base/plugins\"\n], function(plugins) {\n    'use strict';\n\n\treturn plugins.pictures = {};\n});\n\n\ndefine('skylark-domx-plugins-pictures/viewer',[\r\n    \"skylark-langx\",\r\n    \"skylark-domx/eventer\",\r\n    \"skylark-domx/geom\",\r\n    \"skylark-domx/query\",\r\n    \"skylark-domx-images/preload\",\r\n    \"skylark-domx-plugins-base\",\r\n    \"skylark-domx-plugins-interact/movable\",\r\n    \"./pictures\"\r\n], function (langx,eventer,geom,$,preload,plugins,Movable,pictures) {\r\n    'use strict';\r\n\r\n    var PictureViewer = plugins.Plugin.inherit({\r\n        klassName : \"PictureViewer\",\r\n\r\n        pluginName : \"lark.pictures.pictureviewer\",\r\n\r\n        options : {\r\n            ratioThreshold: 0.1,\r\n            minRatio: 0.05,\r\n            maxRatio: 16,\r\n            movable : true,\r\n\r\n            classes : {\r\n                grab : null,\r\n                loader : null\r\n            }\r\n        },\r\n\r\n        _construct : function(elm,options) {\r\n            plugins.Plugin.prototype._construct.call(this,elm,options);\r\n\r\n            this.$stage = this.$();\r\n            this.$image = this.$stage.find(\"img\");\r\n            \r\n\r\n            this.$stage.off(\"wheel\").on(\"wheel\", e => {\r\n                this._handleWheel(e);\r\n            });\r\n\r\n            if (this.options.movable) {\r\n                this._movable = new Movable(this.$image[0],{\r\n                    starting : (e) => {\r\n                        const imageWidth = this.$image.width();\r\n                        const imageHeight = this.$image.height();\r\n                        const stageWidth = this.$stage.width();\r\n                        const stageHeight = this.$stage.height();\r\n                        let minX,minY,maxX,maxY;\r\n\r\n                        if (stageWidth>=imageWidth && stageHeight>=imageHeight) {\r\n                            return false;\r\n                        }\r\n\r\n                        if (stageWidth>=imageWidth) {\r\n                            minX=maxX=(stageWidth-imageWidth) / 2;\r\n                        } else {\r\n                            minX = stageWidth - imageWidth;\r\n                            maxX = 0;\r\n                        }\r\n\r\n                        if (stageHeight>=imageHeight) {\r\n                            minY=maxY=(stageHeight-imageHeight) / 2;\r\n                        } else {\r\n                            minY = stageHeight - imageHeight;\r\n                            maxY = 0;\r\n                        }\r\n\r\n                        return {\r\n                            constraints : {\r\n                                minX,\r\n                                maxX,\r\n                                minY,\r\n                                maxY\r\n                            }\r\n                        };\r\n                    },\r\n                    started : function(e) {\r\n                        eventer.stop(e);\r\n                    }\r\n                });\r\n            }\r\n\r\n        }, \r\n\r\n        getImageScaleToStage : function(stageWidth, stageHeight) {\r\n            let scale = 1;\r\n            if (!this.isRotated) {\r\n                scale = Math.min(stageWidth / this.img.width, stageHeight / this.img.height, 1);\r\n            } else {\r\n                scale = Math.min(stageWidth / this.img.height, stageHeight / this.img.width, 1);\r\n            }\r\n            return scale;\r\n        },\r\n\r\n        setGrabCursor : function (imageData, stageData, isRotated) {\r\n            const imageWidth = !isRotated ? imageData.w : imageData.h;\r\n            const imageHeight = !isRotated ? imageData.h : imageData.w;\r\n            if (imageHeight > stageData.h || imageWidth > stageData.w) {\r\n                this.$stage.addClass('is-grab');\r\n            }\r\n            if (imageHeight <= stageData.h && imageWidth <= stageData.w) {\r\n                this.$stage.removeClass('is-grab');\r\n            }\r\n        },\r\n\r\n        setImageSize: function(img) {\r\n            const stageData = {\r\n                w: this.$stage.width(),\r\n                h: this.$stage.height()\r\n            };\r\n            const scale = this.getImageScaleToStage(stageData.w, stageData.h);\r\n            this.$image.css({\r\n                width: Math.ceil(img.width * scale) + 'px',\r\n                height: Math.ceil(img.height * scale) + 'px',\r\n                left: (stageData.w - Math.ceil(img.width * scale)) / 2 + 'px',\r\n                top: (stageData.h - Math.ceil(img.height * scale)) / 2 + 'px'\r\n            });\r\n            langx.mixin(this.imageData, {\r\n                initWidth: img.width * scale,\r\n                initHeight: img.height * scale,\r\n                initLeft: (stageData.w - img.width * scale) / 2,\r\n                initTop: (stageData.h - img.height * scale) / 2,\r\n                width: img.width * scale,\r\n                height: img.height * scale,\r\n                left: (stageData.w - img.width * scale) / 2,\r\n                top: (stageData.h - img.height * scale) / 2\r\n            });\r\n            this.setGrabCursor({\r\n                w: this.$image.width(),\r\n                h: this.$image.height()\r\n            }, {\r\n                w: this.$stage.width(),\r\n                h: this.$stage.height()\r\n            }, this.isRotated);\r\n            if (!this.imageLoaded) {\r\n                this.$stage.find(\".${ this.options.classes.loader }\").remove();\r\n                this.$stage.removeClass('stage-ready');\r\n                this.$image.removeClass('image-ready');\r\n                if (this.options.initAnimation && !this.options.progressiveLoading) {\r\n                    this.$image.fadeIn();\r\n                }\r\n                this.imageLoaded = true;\r\n            }\r\n        },\r\n\r\n        loadImage : function(imgSrc, fn, err) {\r\n            this.$image.removeAttr('style').attr('src', '');\r\n            this.isRotated = false;\r\n            this.rotateAngle = 0;\r\n            this.imageLoaded = false;\r\n            this.$stage.append(`<div class=\"${ this.options.classes.loader }\"></div>`);\r\n            this.$stage.addClass('stage-ready');\r\n            this.$image.addClass('image-ready');\r\n            if (this.options.initAnimation && !this.options.progressiveLoading) {\r\n                this.$image.hide();\r\n            }\r\n            this.$image.attr('src', imgSrc);\r\n            preload(imgSrc).then((data) => {\r\n                var img = data.imgs[0];\r\n                this.img = img;\r\n                this.imageData = {\r\n                    originalWidth: img.width,\r\n                    originalHeight: img.height\r\n                };\r\n                ///if (this.isMaximized || this.isOpened && this.options.fixedModalPos) {\r\n                ///    this.setImageSize(img);\r\n                ///} else {\r\n                ///    this.setModalSize(img);\r\n                ///}\r\n                if (fn) {\r\n                    fn(img);\r\n                }\r\n            }, () => {\r\n                this.$photoviewer.find(\".${ this.options.classes.loader }\").remove();\r\n                if (err) {\r\n                    err.call();\r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        _handleWheel : function(e) {\r\n            e.preventDefault();\r\n            let delta = 1;\r\n            if (e.deltaY) {\r\n                delta = e.deltaY > 0 ? 1 : -1;\r\n            } else if (e.wheelDelta) {\r\n                delta = -e.wheelDelta / 120;\r\n            } else if (e.detail) {\r\n                delta = e.detail > 0 ? 1 : -1;\r\n            }\r\n            const ratio = -delta * this.options.ratioThreshold;\r\n            const pointer = {\r\n                x: e.clientX - this.$stage.offset().left + geom.scrollLeft(document.body),\r\n                y: e.clientY - this.$stage.offset().top + geom.scrollTop(document.body)\r\n            };\r\n            this.zoom(ratio, pointer, e);\r\n        },\r\n\r\n        zoom : function(ratio, origin, e) {\r\n            ratio = ratio < 0 ? 1 / (1 - ratio) : 1 + ratio;\r\n            ratio = this.$image.width() / this.imageData.originalWidth * ratio;\r\n            if (ratio > this.options.maxRatio || ratio < this.options.minRatio) {\r\n                return;\r\n            }\r\n            this.zoomTo(ratio, origin, e);\r\n        },\r\n\r\n        zoomTo : function(ratio, origin, e) {\r\n            const $image = this.$image;\r\n            const $stage = this.$stage;\r\n            const imgData = {\r\n                w: this.imageData.width,\r\n                h: this.imageData.height,\r\n                x: this.imageData.left,\r\n                y: this.imageData.top\r\n            };\r\n            const stageData = {\r\n                w: $stage.width(),\r\n                h: $stage.height(),\r\n                x: $stage.offset().left,\r\n                y: $stage.offset().top\r\n            };\r\n            const newWidth = this.imageData.originalWidth * ratio;\r\n            const newHeight = this.imageData.originalHeight * ratio;\r\n            let newLeft = origin.x - (origin.x - imgData.x) / imgData.w * newWidth;\r\n            let newTop = origin.y - (origin.y - imgData.y) / imgData.h * newHeight;\r\n            const Î´ = !this.isRotated ? 0 : (newWidth - newHeight) / 2;\r\n            const imgNewWidth = !this.isRotated ? newWidth : newHeight;\r\n            const imgNewHeight = !this.isRotated ? newHeight : newWidth;\r\n            const offsetX = stageData.w - newWidth;\r\n            const offsetY = stageData.h - newHeight;\r\n            if (imgNewHeight <= stageData.h) {\r\n                newTop = (stageData.h - newHeight) / 2;\r\n            } else {\r\n                newTop = newTop > Î´ ? Î´ : newTop > offsetY - Î´ ? newTop : offsetY - Î´;\r\n            }\r\n            if (imgNewWidth <= stageData.w) {\r\n                newLeft = (stageData.w - newWidth) / 2;\r\n            } else {\r\n                newLeft = newLeft > -Î´ ? -Î´ : newLeft > offsetX + Î´ ? newLeft : offsetX + Î´;\r\n            }\r\n            if (Math.abs(this.imageData.initWidth - newWidth) < this.imageData.initWidth * 0.05) {\r\n                this.setImageSize(this.img);\r\n            } else {\r\n                $image.css({\r\n                    width: Math.round(newWidth) + 'px',\r\n                    height: Math.round(newHeight) + 'px',\r\n                    left: Math.round(newLeft) + 'px',\r\n                    top: Math.round(newTop) + 'px'\r\n                });\r\n                this.setGrabCursor({\r\n                    w: Math.round(imgNewWidth),\r\n                    h: Math.round(imgNewHeight)\r\n                }, {\r\n                    w: stageData.w,\r\n                    h: stageData.h\r\n                });\r\n            }\r\n            $.extend(this.imageData, {\r\n                width: newWidth,\r\n                height: newHeight,\r\n                left: newLeft,\r\n                top: newTop\r\n            });\r\n        },\r\n\r\n        rotate : function(angle) {\r\n            this.rotateAngle = this.rotateAngle + angle;\r\n            if (this.rotateAngle / 90 % 2 === 0) {\r\n                this.isRotated = false;\r\n            } else {\r\n                this.isRotated = true;\r\n            }\r\n            this.rotateTo(this.rotateAngle);\r\n        },\r\n        rotateTo: function(angle) {\r\n            this.$image.css({ transform: 'rotate(' + angle + 'deg)' });\r\n            this.setImageSize({\r\n                width: this.imageData.originalWidth,\r\n                height: this.imageData.originalHeight\r\n            });\r\n            this.$stage.removeClass('is-grab');\r\n        },\r\n        resize: function() {\r\n            const imageWidth = this.$image.width();\r\n            const imageHeight = this.$image.height();\r\n            const stageWidth = this.$stage.width();\r\n            const stageHeight = this.$stage.height();\r\n            const left = (stageWidth - imageWidth) /2;\r\n            const top = (stageHeight- imageHeight) /2;\r\n            this.$image.css({\r\n                left,\r\n                top\r\n            });\r\n        },\r\n\r\n        shortcut: function(keyCode,ctrlKey,altKey) {\r\n            var handled = false;\r\n            switch (keyCode) {\r\n                // +\r\n                case 187:\r\n                    this.zoom(this.options.ratioThreshold * 3, {\r\n                        x: this.$stage.width() / 2,\r\n                        y: this.$stage.height() / 2\r\n                    }, e);\r\n                    handled = true;\r\n                    break;\r\n                // -\r\n                case 189:\r\n                    this.zoom(-this.options.ratioThreshold * 3, {\r\n                        x: this.$stage.width() / 2,\r\n                        y: this.$stage.height() / 2\r\n                    }, e);\r\n                    handled = true;\r\n                    break;\r\n                // + Firefox\r\n                case 61:\r\n                    this.zoom(this.options.ratioThreshold * 3, {\r\n                        x: this.$stage.width() / 2,\r\n                        y: this.$stage.height() / 2\r\n                    }, e);\r\n                    handled = true;\r\n                    break;\r\n                // - Firefox\r\n                case 173:\r\n                    this.zoom(-this.options.ratioThreshold * 3, {\r\n                        x: this.$stage.width() / 2,\r\n                        y: this.$stage.height() / 2\r\n                    }, e);\r\n                    handled = true;\r\n                    break;\r\n                // Ctrl + Alt + 0\r\n                case 48:\r\n                    if (ctrlKey && altKey) {\r\n                        this.zoomTo(1, {\r\n                            x: this.$stage.width() / 2,\r\n                            y: this.$stage.height() / 2\r\n                        }, e);\r\n                    }\r\n                    handled = true;\r\n                    break;\r\n                // Ctrl + ,\r\n                case 188:\r\n                    if (ctrlKey) {\r\n                        this.rotate(-90);\r\n                    }\r\n                    break;\r\n                // Ctrl + .\r\n                case 190:\r\n                    if (ctrlKey) {\r\n                        this.rotate(90);\r\n                    }\r\n                    handled = true;\r\n                    break;\r\n                default:\r\n            }\r\n\r\n            return handled;\r\n        }\r\n    });\r\n\r\n    return pictures.PictureViewer = PictureViewer;\r\n});\ndefine('skylark-domx-plugins-pictures/main',[\n\t'./pictures',\n\t\"./viewer\"\n], function (pictures) {\n    'use strict';\n    return pictures;\n});\ndefine('skylark-domx-plugins-pictures', ['skylark-domx-plugins-pictures/main'], function (main) { return main; });\n\n"]}