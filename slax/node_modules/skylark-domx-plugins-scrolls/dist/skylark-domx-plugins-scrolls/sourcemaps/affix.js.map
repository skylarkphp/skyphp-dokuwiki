{"version":3,"sources":["affix.js"],"names":["define","langx","browser","eventer","noder","geom","$","plugins","scrolls","Affix","Plugin","inherit","klassName","pluginName","options","offset","target","window","_construct","elm","this","overrided","$target","on","proxy","checkPosition","checkPositionWithEventLoop","$element","affixed","unpin","pinnedOffset","getState","scrollHeight","height","offsetTop","offsetBottom","scrollTop","position","targetHeight","top","initializing","colliderTop","getPinnedOffset","removeClass","RESET","addClass","setTimeout","is","bottom","Math","max","document","body","affix","css","affixType","e","create","trigger","isDefaultPrevented","replace","register"],"mappings":"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","file":"../affix.js","sourcesContent":["define([\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins-base\",\n  \"./scrolls\"\n],function(langx,browser,eventer,noder,geom,$,plugins,scrolls){\n\n  'use strict';\n\n  // AFFIX CLASS DEFINITION\n  // ======================\n\n  var Affix = plugins.Plugin.inherit({\n        klassName: \"Affix\",\n\n        pluginName : \"lark.scrolls.affix\",\n\n        options : {\n          offset: 0,\n          target: window\n        },\n\n        _construct : function(elm,options) {\n          this.overrided(elm,options);\n\n          this.$target = $(this.options.target)\n            .on('scroll.affix.data-api', langx.proxy(this.checkPosition, this))\n            .on('click.affix.data-api',  langx.proxy(this.checkPositionWithEventLoop, this))\n\n          this.$element     = this.$()\n          this.affixed      = null;\n          this.unpin        = null;\n          this.pinnedOffset = null;\n\n          this.checkPosition();\n        },\n\n        getState : function (scrollHeight, height, offsetTop, offsetBottom) {\n          var scrollTop    = this.$target.scrollTop()\n          var position     = this.$element.offset()\n          var targetHeight = this.$target.height()\n\n          if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false\n\n          if (this.affixed == 'bottom') {\n            if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'\n            return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'\n          }\n\n          var initializing   = this.affixed == null\n          var colliderTop    = initializing ? scrollTop : position.top\n          var colliderHeight = initializing ? targetHeight : height\n\n          if (offsetTop != null && scrollTop <= offsetTop) return 'top'\n          if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'\n\n          return false\n        },\n\n        getPinnedOffset : function () {\n          if (this.pinnedOffset) return this.pinnedOffset\n          this.$element.removeClass(Affix.RESET).addClass('affix')\n          var scrollTop = this.$target.scrollTop()\n          var position  = this.$element.offset()\n          return (this.pinnedOffset = position.top - scrollTop)\n        },\n\n        checkPositionWithEventLoop : function () {\n          setTimeout(langx.proxy(this.checkPosition, this), 1)\n        },\n\n        checkPosition : function () {\n          if (!this.$element.is(':visible')) return\n\n          var height       = this.$element.height()\n          var offset       = this.options.offset\n          var offsetTop    = offset.top\n          var offsetBottom = offset.bottom\n          var scrollHeight = Math.max($(document).height(), $(document.body).height())\n\n          if (typeof offset != 'object')         offsetBottom = offsetTop = offset\n          if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)\n          if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)\n\n          var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)\n\n          if (this.affixed != affix) {\n            if (this.unpin != null) this.$element.css('top', '')\n\n            var affixType = 'affix' + (affix ? '-' + affix : '')\n            var e         = eventer.create(affixType + '.affix')\n\n            this.$element.trigger(e)\n\n            if (e.isDefaultPrevented()) return\n\n            this.affixed = affix\n            this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null\n\n            this.$element\n              .removeClass(Affix.RESET)\n              .addClass(affixType)\n              .trigger(affixType.replace('affix', 'affixed') + '.affix')\n          }\n\n          if (affix == 'bottom') {\n            this.$element.offset({\n              top: scrollHeight - height - offsetBottom\n            })\n          }\n        }\n  });\n\n  Affix.RESET    = 'affix affix-top affix-bottom'\n\n  plugins.register(Affix);\n\n  return scrolls.Affix = Affix;\n});\n"]}