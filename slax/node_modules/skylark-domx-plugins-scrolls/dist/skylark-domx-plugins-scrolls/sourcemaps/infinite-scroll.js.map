{"version":3,"sources":["infinite-scroll.js"],"names":["define","langx","browser","eventer","noder","geom","$","plugins","scrolls","InfiniteScroll","Plugin","inherit","klassName","pluginName","options","dataSource","hybrid","percentage","_construct","elm","this","overrided","$element","addClass","curScrollTop","scrollTop","curPercentage","getPercentage","fetchingData","on","proxy","onScroll","destroy","remove","empty","outerHTML","disable","off","enable","end","content","append","height","css","outerHeight","scrollHeight","get","fetchData","force","moreBtn","load","self","fetch","helpers","$loader","loader","resp","undefined","label","e","register"],"mappings":";;;;;;;AAAAA,QACE,sBACA,uBACA,uBACA,qBACA,oBACA,qBACA,4BACA,aACA,SAASC,EAAMC,EAAQC,EAAQC,EAAMC,EAAKC,EAAEC,EAAQC,GAEpD,aAIA,IAAIC,EAAiBF,EAAQG,OAAOC,SAC9BC,UAAW,iBAEXC,WAAa,8BAEbC,SACLC,WAAY,KACZC,QAAQ,EACRC,WAAY,IAGPC,WAAa,SAASC,EAAIL,GACzBM,KAAKC,UAAUF,EAAIL,GACzBM,KAAKE,SAAWF,KAAKd,IACrBc,KAAKE,SAASC,SAAS,kBAGvBH,KAAKI,aAAeJ,KAAKE,SAASG,YAClCL,KAAKM,cAAgBN,KAAKO,gBAC1BP,KAAKQ,cAAe,EAEpBR,KAAKE,SAASO,GAAG,6BAA8B5B,EAAM6B,MAAMV,KAAKW,SAAUX,OAC1EA,KAAKW,YAGNC,QAAS,WAQR,OAPAZ,KAAKE,SAASW,SAKdb,KAAKE,SAASY,QAEPd,KAAKE,SAAS,GAAGa,WAGzBC,QAAS,WACRhB,KAAKE,SAASe,IAAI,+BAGnBC,OAAQ,WACPlB,KAAKE,SAASO,GAAG,6BAA8B5B,EAAM6B,MAAMV,KAAKW,SAAUX,QAG3EmB,IAAK,SAAUC,GACd,IAAID,EAAMjC,EAAE,0CACRkC,EACHD,EAAIE,OAAOD,GAEXD,EAAIE,OAAO,aAGZrB,KAAKE,SAASmB,OAAOF,GACrBnB,KAAKgB,WAGNT,cAAe,WACd,IAAIe,EAA8C,eAApCtB,KAAKE,SAASqB,IAAI,cAAkCvB,KAAKE,SAASsB,cAAgBxB,KAAKE,SAASoB,SAC1GG,EAAezB,KAAKE,SAASwB,IAAI,GAAGD,aACxC,OAAQA,EAAeH,EAAYA,GAAUG,EAAezB,KAAKI,cAAiB,IAAO,GAG1FuB,UAAW,SAAUC,GACpB,IAEIC,EAFAC,EAAO5C,EAAE,2CACT6C,EAAO/B,KAGPgC,EAAQ,WACX,IAAIC,GACHpC,WAAYkC,EAAKzB,cACjBD,UAAW0B,EAAK3B,cAEb8B,EAAUhD,EAAE,8BAChB4C,EAAKT,OAAOa,GACZA,EAAQC,SACJJ,EAAKrC,QAAQC,YAChBoC,EAAKrC,QAAQC,WAAWsC,EAAS,SAAUG,GAC1C,IAAIjB,EACJW,EAAKjB,SACDuB,EAAKhB,SACRW,EAAK7B,SAASmB,OAAOe,EAAKhB,SAGvBgB,EAAKjB,MACRA,GAAoB,IAAbiB,EAAKjB,IAAgBiB,EAAKjB,SAAMkB,EACvCN,EAAKZ,IAAIA,IAGVY,EAAKvB,cAAe,KAKvBR,KAAKQ,cAAe,EACpBR,KAAKE,SAASmB,OAAOS,GACjB9B,KAAKN,QAAQE,SAAoB,IAAVgC,GAC1BC,EAAU3C,EAAE,2DACuB,iBAAxBc,KAAKN,QAAQE,OACvBiC,EAAQR,OAAOrB,KAAKN,QAAQE,OAAO0C,OAEnCT,EAAQR,OAAO,oDAGhBQ,EAAQpB,GAAG,4BAA6B,WACvCoB,EAAQhB,SACRmB,MAEDF,EAAKT,OAAOQ,IAEZG,KAIFrB,SAAU,SAAU4B,GACnBvC,KAAKI,aAAeJ,KAAKE,SAASG,YAClCL,KAAKM,cAAgBN,KAAKO,iBACrBP,KAAKQ,cAAgBR,KAAKM,eAAiBN,KAAKN,QAAQG,YAC5DG,KAAK2B,eAOP,OAFAxC,EAAQqD,SAASnD,GAEVD,EAAQC,eAAiBA","file":"../infinite-scroll.js","sourcesContent":["define([\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"./scrolls\"\r\n],function(langx,browser,eventer,noder,geom,$,plugins,scrolls){\r\n\r\n  'use strict';\r\n\r\n\t// INFINITE SCROLL CONSTRUCTOR AND PROTOTYPE\r\n\r\n  var InfiniteScroll = plugins.Plugin.inherit({\r\n        klassName: \"InfiniteScroll\",\r\n\r\n        pluginName : \"lark.scrolls.infinitescroll\",\r\n\r\n        options : {\r\n\t\t\tdataSource: null,\r\n\t\t\thybrid: false,//can be true or an object with structure: { 'label': (markup or jQuery obj) }\r\n\t\t\tpercentage: 95//percentage scrolled to the bottom before more is loaded\r\n        },\r\n\r\n        _construct : function(elm,options) {\r\n\t        this.overrided(elm,options);\r\n\t\t\tthis.$element = this.$();\r\n\t\t\tthis.$element.addClass('infinitescroll');\r\n\t\t\t//this.options = langx.mixin({}, $.fn.infinitescroll.defaults, options);\r\n\r\n\t\t\tthis.curScrollTop = this.$element.scrollTop();\r\n\t\t\tthis.curPercentage = this.getPercentage();\r\n\t\t\tthis.fetchingData = false;\r\n\r\n\t\t\tthis.$element.on('scroll.domx.infinitescroll', langx.proxy(this.onScroll, this));\r\n\t\t\tthis.onScroll();\r\n\t\t},\r\n\r\n\t\tdestroy: function () {\r\n\t\t\tthis.$element.remove();\r\n\t\t\t// any external bindings\r\n\t\t\t// [none]\r\n\r\n\t\t\t// empty elements to return to original markup\r\n\t\t\tthis.$element.empty();\r\n\r\n\t\t\treturn this.$element[0].outerHTML;\r\n\t\t},\r\n\r\n\t\tdisable: function () {\r\n\t\t\tthis.$element.off('scroll.domx.infinitescroll');\r\n\t\t},\r\n\r\n\t\tenable: function () {\r\n\t\t\tthis.$element.on('scroll.domx.infinitescroll', langx.proxy(this.onScroll, this));\r\n\t\t},\r\n\r\n\t\tend: function (content) {\r\n\t\t\tvar end = $('<div class=\"infinitescroll-end\"></div>');\r\n\t\t\tif (content) {\r\n\t\t\t\tend.append(content);\r\n\t\t\t} else {\r\n\t\t\t\tend.append('---------');\r\n\t\t\t}\r\n\r\n\t\t\tthis.$element.append(end);\r\n\t\t\tthis.disable();\r\n\t\t},\r\n\r\n\t\tgetPercentage: function () {\r\n\t\t\tvar height = (this.$element.css('box-sizing') === 'border-box') ? this.$element.outerHeight() : this.$element.height();\r\n\t\t\tvar scrollHeight = this.$element.get(0).scrollHeight;\r\n\t\t\treturn (scrollHeight > height) ? ((height / (scrollHeight - this.curScrollTop)) * 100) : 0;\r\n\t\t},\r\n\r\n\t\tfetchData: function (force) {\r\n\t\t\tvar load = $('<div class=\"infinitescroll-load\"></div>');\r\n\t\t\tvar self = this;\r\n\t\t\tvar moreBtn;\r\n\r\n\t\t\tvar fetch = function () {\r\n\t\t\t\tvar helpers = {\r\n\t\t\t\t\tpercentage: self.curPercentage,\r\n\t\t\t\t\tscrollTop: self.curScrollTop\r\n\t\t\t\t};\r\n\t\t\t\tvar $loader = $('<div class=\"loader\"></div>');\r\n\t\t\t\tload.append($loader);\r\n\t\t\t\t$loader.loader();\r\n\t\t\t\tif (self.options.dataSource) {\r\n\t\t\t\t\tself.options.dataSource(helpers, function (resp) {\r\n\t\t\t\t\t\tvar end;\r\n\t\t\t\t\t\tload.remove();\r\n\t\t\t\t\t\tif (resp.content) {\r\n\t\t\t\t\t\t\tself.$element.append(resp.content);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (resp.end) {\r\n\t\t\t\t\t\t\tend = (resp.end !== true) ? resp.end : undefined;\r\n\t\t\t\t\t\t\tself.end(end);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tself.fetchingData = false;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tthis.fetchingData = true;\r\n\t\t\tthis.$element.append(load);\r\n\t\t\tif (this.options.hybrid && force !== true) {\r\n\t\t\t\tmoreBtn = $('<button type=\"button\" class=\"btn btn-primary\"></button>');\r\n\t\t\t\tif (typeof this.options.hybrid === 'object') {\r\n\t\t\t\t\tmoreBtn.append(this.options.hybrid.label);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmoreBtn.append('<span class=\"glyphicon glyphicon-repeat\"></span>');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmoreBtn.on('click.domx.infinitescroll', function () {\r\n\t\t\t\t\tmoreBtn.remove();\r\n\t\t\t\t\tfetch();\r\n\t\t\t\t});\r\n\t\t\t\tload.append(moreBtn);\r\n\t\t\t} else {\r\n\t\t\t\tfetch();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonScroll: function (e) {\r\n\t\t\tthis.curScrollTop = this.$element.scrollTop();\r\n\t\t\tthis.curPercentage = this.getPercentage();\r\n\t\t\tif (!this.fetchingData && this.curPercentage >= this.options.percentage) {\r\n\t\t\t\tthis.fetchData();\r\n\t\t\t}\r\n\t\t}\r\n  });\r\n\r\n  plugins.register(InfiniteScroll);\r\n\r\n  return scrolls.InfiniteScroll = InfiniteScroll;\t\r\n});\r\n"]}