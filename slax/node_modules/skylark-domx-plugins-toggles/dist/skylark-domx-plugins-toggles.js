/**
 * skylark-domx-plugins-toggles - The skylark toggle plugin library
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-domx-plugins/skylark-domx-plugins-toggles/
 * @license MIT
 */
!function(e,t){var i=t.define,require=t.require,s="function"==typeof i&&i.amd,a=!s&&"undefined"!=typeof exports;if(!s&&!i){var r={};i=t.define=function(e,t,i){"function"==typeof i?(r[e]={factory:i,deps:t.map(function(t){return function(e,t){if("."!==e[0])return e;var i=t.split("/"),s=e.split("/");i.pop();for(var a=0;a<s.length;a++)"."!=s[a]&&(".."==s[a]?i.pop():i.push(s[a]));return i.join("/")}(t,e)}),resolved:!1,exports:null},require(e)):r[e]={factory:null,resolved:!0,exports:i}},require=t.require=function(e){if(!r.hasOwnProperty(e))throw new Error("Module "+e+" has not been defined");var module=r[e];if(!module.resolved){var i=[];module.deps.forEach(function(e){i.push(require(e))}),module.exports=module.factory.apply(t,i)||null,module.resolved=!0}return module.exports}}if(!i)throw new Error("The module utility (ex: requirejs or skylark-utils) is not loaded!");if(function(e,require){e("skylark-domx-plugins-toggles/toggles",["skylark-domx-plugins-base/plugins"],function(e){"use strict";return e.toggles={}}),e("skylark-domx-plugins-toggles/checkbox",["skylark-langx/langx","skylark-domx/browser","skylark-domx/eventer","skylark-domx/noder","skylark-domx/geom","skylark-domx/query","skylark-domx-plugins-base","./toggles"],function(e,t,i,s,a,r,o,n){var l=o.Plugin.inherit({klassName:"Checkbox",pluginName:"lark.toggles.checkbox",options:{ignoreVisibilityCheck:!1},_construct:function(t,i){this.overrided(t,i);var s=this.$();if("label"!==t.tagName.toLowerCase())throw new Error("Checkbox must be initialized on the `label` that wraps the `input` element. See https://github.com/ExactTarget/fuelux/blob/master/reference/markup/checkbox.html for example of proper markup. Call `.checkbox()` on the `<label>` not the `<input>`");if(this.$label=s,this.$chk=this.$label.find('input[type="checkbox"]'),this.$container=s.parent(".checkbox"),!this.options.ignoreVisibilityCheck&&this.$chk.css("visibility").match(/hidden|collapse/))throw new Error("For accessibility reasons, in order for tab and space to function on checkbox, checkbox `<input />`'s `visibility` must not be set to `hidden` or `collapse`. See https://github.com/ExactTarget/fuelux/pull/1996 for more details.");var a=this.$chk.attr("data-toggle");this.$toggleContainer=r(a),this.$chk.on("change",e.proxy(this.itemchecked,this)),this.setInitialState()},setInitialState:function(){var e=this.$chk,t=e.prop("checked"),i=e.prop("disabled");this.setCheckedState(e,t),this.setDisabledState(e,i)},setCheckedState:function(e,t){var i=e,s=this.$label,a=this.$toggleContainer;t?(i.prop("checked",!0),s.addClass("checked"),a.removeClass("hide hidden"),s.trigger("checked.lark.toggles.checkbox")):(i.prop("checked",!1),s.removeClass("checked"),a.addClass("hidden"),s.trigger("unchecked.lark.toggles.checkbox")),s.trigger("changed.lark.toggles.checkbox",t)},setDisabledState:function(e,t){var i=r(e),s=this.$label;return t?(i.prop("disabled",!0),s.addClass("disabled"),s.trigger("disabled.lark.toggles.checkbox")):(i.prop("disabled",!1),s.removeClass("disabled"),s.trigger("enabled.lark.toggles.checkbox")),i},itemchecked:function(e){var t=r(e.target),i=t.prop("checked");this.setCheckedState(t,i)},toggle:function(){var e=this.isChecked();e?this.uncheck():this.check()},check:function(){this.setCheckedState(this.$chk,!0)},uncheck:function(){this.setCheckedState(this.$chk,!1)},isChecked:function(){var e=this.$chk.prop("checked");return e},enable:function(){this.setDisabledState(this.$chk,!1)},disable:function(){this.setDisabledState(this.$chk,!0)},destroy:function(){return this.$label.remove(),this.$label[0].outerHTML}});return l.prototype.getValue=l.prototype.isChecked,o.register(l),n.Checkbox=l}),e("skylark-domx-plugins-toggles/collapse",["skylark-langx/langx","skylark-domx-browser","skylark-domx-eventer","skylark-domx-query","skylark-domx-plugins-base","./toggles"],function(e,t,i,s,a,r){"use strict";var o=a.Plugin.inherit({klassName:"Collapse",pluginName:"lark.toggles.collapse",options:{toggle:!0},_construct:function(e,t){this.overrided(e,t),this.$element=this.$(),this.transitioning=null,this.options.toggle&&this.toggle()},dimension:function(){var e=this.$element.hasClass("width");return e?"width":"height"},show:function(){if(!this.transitioning&&!this.$element.hasClass("in")){var s=i.create("show.collapse");if(this.$element.trigger(s),!s.isDefaultPrevented()){var a=this.dimension();this.$element.removeClass("collapse").addClass("collapsing")[a](0).attr("aria-expanded",!0),this.transitioning=1;var r=function(){this.$element.removeClass("collapsing").addClass("collapse in")[a](""),this.transitioning=0,this.$element.trigger("shown.collapse")};if(!t.support.transition)return r.call(this);var n=e.camelCase(["scroll",a].join("-"));this.$element.one("transitionEnd",e.proxy(r,this)).emulateTransitionEnd(o.TRANSITION_DURATION)[a](this.$element[0][n])}}},hide:function(){if(!this.transitioning&&this.$element.hasClass("in")){var s=i.create("hide.collapse");if(this.$element.trigger(s),!s.isDefaultPrevented()){var a=this.dimension();this.$element[a](this.$element[a]())[0].offsetHeight,this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded",!1),this.transitioning=1;var r=function(){this.transitioning=0,this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.collapse")};if(!t.support.transition)return r.call(this);this.$element[a](0).one("transitionEnd",e.proxy(r,this)).emulateTransitionEnd(o.TRANSITION_DURATION)}}},toggle:function(){this[this.$element.hasClass("in")?"hide":"show"]()}});return o.TRANSITION_DURATION=350,a.register(o),r.Collapse=o}),e("skylark-domx-plugins-toggles/radio",["skylark-langx/langx","skylark-domx/browser","skylark-domx/eventer","skylark-domx/noder","skylark-domx/geom","skylark-domx/query","skylark-domx-plugins-base","./toggles"],function(e,t,i,s,a,r,o,n){var l=o.Plugin.inherit({klassName:"Radio",pluginName:"lark.toggles.radio",options:{ignoreVisibilityCheck:!1},_construct:function(t,i){if(this.overrided(t,i),"label"!==t.tagName.toLowerCase())throw new Error("Radio must be initialized on the `label` that wraps the `input` element. See https://github.com/ExactTarget/fuelux/blob/master/reference/markup/radio.html for example of proper markup. Call `.radio()` on the `<label>` not the `<input>`");if(this.$label=this.$(),this.$radio=this.$label.find('input[type="radio"]'),this.groupName=this.$radio.attr("name"),!this.options.ignoreVisibilityCheck&&this.$radio.css("visibility").match(/hidden|collapse/))throw new Error("For accessibility reasons, in order for tab and space to function on radio, `visibility` must not be set to `hidden` or `collapse`. See https://github.com/ExactTarget/fuelux/pull/1996 for more details.");var s=this.$radio.attr("data-toggle");this.$toggleContainer=r(s),this.$radio.on("change",e.proxy(this.itemchecked,this)),this.setInitialState()},setInitialState:function(){var e=this.$radio,t=e.prop("checked"),i=e.prop("disabled");this.setCheckedState(e,t),this.setDisabledState(e,i)},resetGroup:function(){var e=r('input[name="'+this.groupName+'"]');e.each(function(e,t){var i=r(t),s=i.parent(),a=i.attr("data-toggle"),o=r(a);s.removeClass("checked"),o.addClass("hidden")})},setCheckedState:function(e,t){var i=e,s=i.parent(),a=i.attr("data-toggle"),o=r(a);t?(this.resetGroup(),i.prop("checked",!0),s.addClass("checked"),o.removeClass("hide hidden"),s.trigger("checked.lark.toggles.radio")):(i.prop("checked",!1),s.removeClass("checked"),o.addClass("hidden"),s.trigger("unchecked.lark.toggles.radio")),s.trigger("changed.lark.toggles.radio",t)},setDisabledState:function(e,t){var i=r(e),s=this.$label;return t?(i.prop("disabled",!0),s.addClass("disabled"),s.trigger("disabled.lark.toggles.radio")):(i.prop("disabled",!1),s.removeClass("disabled"),s.trigger("enabled.lark.toggles.radio")),i},itemchecked:function(e){var t=r(e.target);this.setCheckedState(t,!0)},check:function(){this.setCheckedState(this.$radio,!0)},uncheck:function(){this.setCheckedState(this.$radio,!1)},isChecked:function(){var e=this.$radio.prop("checked");return e},enable:function(){this.setDisabledState(this.$radio,!1)},disable:function(){this.setDisabledState(this.$radio,!0)},destroy:function(){return this.$label.remove(),this.$label[0].outerHTML}});return l.prototype.getValue=l.prototype.isChecked,o.register(l),n.Radio=l}),e("skylark-domx-plugins-toggles/tab",["skylark-langx/langx","skylark-domx-browser","skylark-domx-eventer","skylark-domx-noder","skylark-domx-geom","skylark-domx-query","skylark-domx-plugins-base","./toggles"],function(e,t,i,s,a,r,o,n){"use strict";var l=o.Plugin.inherit({klassName:"Tab",pluginName:"lark.toggles.tab",_construct:function(t,i){this.element=r(t),this.target=i&&i.target,this.element.on("click.lark.toggles.tab",e.proxy(function(e){e.preventDefault(),this.show()},this))},show:function(){var e=this.element,t=e.closest("ul:not(.dropdown-menu)"),s=this.target||e.data("target");if(s||(s=(s=e.attr("href"))&&s.replace(/.*(?=#[^\s]*$)/,"")),!e.parent("li").hasClass("active")){var a=t.find(".active:last a"),o=i.create("hide.lark.toggles.tab",{relatedTarget:e[0]}),n=i.create("show.lark.toggles.tab",{relatedTarget:a[0]});if(a.trigger(o),e.trigger(n),!n.isDefaultPrevented()&&!o.isDefaultPrevented()){var l=r(s);this.activate(e.closest("li"),t),this.activate(l,l.parent(),function(){a.trigger({type:"hidden.lark.toggles.tab",relatedTarget:e[0]}),e.trigger({type:"shown.lark.toggles.tab",relatedTarget:a[0]})})}}},activate:function(e,i,s){var a=i.find("> .active"),r=s&&t.support.transition&&(a.length&&a.hasClass("fade")||!!i.find("> .fade").length);function o(){a.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!1),e.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded",!0),r?(e[0].offsetWidth,e.addClass("in")):e.removeClass("fade"),e.parent(".dropdown-menu").length&&e.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!0),s&&s()}a.length&&r?a.one("transitionEnd",o).emulateTransitionEnd(l.TRANSITION_DURATION):o(),a.removeClass("in")}});return l.TRANSITION_DURATION=150,o.register(l),n.Tab=l}),e("skylark-domx-plugins-toggles/main",["./toggles","./checkbox","./collapse","./radio","./tab"],function(e){return e}),e("skylark-domx-plugins-toggles",["skylark-domx-plugins-toggles/main"],function(e){return e})}(i),!s){var o=require("skylark-langx-ns");a?module.exports=o:t.skylarkjs=o}}(0,this);
//# sourceMappingURL=sourcemaps/skylark-domx-plugins-toggles.js.map
