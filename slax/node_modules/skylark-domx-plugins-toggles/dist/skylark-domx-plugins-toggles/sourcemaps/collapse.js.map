{"version":3,"sources":["collapse.js"],"names":["define","langx","browser","eventer","$","plugins","toggles","Collapse","Plugin","inherit","klassName","pluginName","options","toggle","_construct","elm","this","overrided","$element","transitioning","dimension","hasClass","show","startEvent","create","trigger","isDefaultPrevented","removeClass","addClass","attr","complete","support","transition","call","scrollSize","camelCase","join","one","proxy","emulateTransitionEnd","TRANSITION_DURATION","hide","offsetHeight","register"],"mappings":";;;;;;;AAAAA,QACI,sBACA,uBACA,uBACA,qBACA,4BACA,aACD,SAASC,EAAOC,EAASC,EAAUC,EAAGC,EAASC,GAGhD,aAKA,IAAIC,EAAYF,EAAQG,OAAOC,SAC7BC,UAAW,WAEXC,WAAa,wBAEbC,SACEC,QAAQ,GAGVC,WAAa,SAASC,EAAIH,GAExBI,KAAKC,UAAUF,EAAIH,GACnBI,KAAKE,SAAgBF,KAAKZ,IAG1BY,KAAKG,cAAgB,KAQjBH,KAAKJ,QAAQC,QACfG,KAAKH,UAITO,UAAY,WAEV,OADeJ,KAAKE,SAASG,SAAS,SACpB,QAAU,UAG9BC,KAAO,WACL,IAAIN,KAAKG,gBAAiBH,KAAKE,SAASG,SAAS,MAAjD,CAYA,IAAIE,EAAapB,EAAQqB,OAAO,iBAEhC,GADAR,KAAKE,SAASO,QAAQF,IAClBA,EAAWG,qBAAf,CAQA,IAAIN,EAAYJ,KAAKI,YAErBJ,KAAKE,SACFS,YAAY,YACZC,SAAS,cAAcR,GAAW,GAClCS,KAAK,iBAAiB,GAMzBb,KAAKG,cAAgB,EAErB,IAAIW,EAAW,WACbd,KAAKE,SACFS,YAAY,cACZC,SAAS,eAAeR,GAAW,IACtCJ,KAAKG,cAAgB,EACrBH,KAAKE,SACFO,QAAQ,mBAGb,IAAKvB,EAAQ6B,QAAQC,WACnB,OAAOF,EAASG,KAAKjB,MAGvB,IAAIkB,EAAajC,EAAMkC,WAAW,SAAUf,GAAWgB,KAAK,MAE5DpB,KAAKE,SACFmB,IAAI,gBAAiBpC,EAAMqC,MAAMR,EAAUd,OAC3CuB,qBAAqBhC,EAASiC,qBAAqBpB,GAAWJ,KAAKE,SAAS,GAAGgB,OAGpFO,KAAO,WACL,IAAIzB,KAAKG,eAAkBH,KAAKE,SAASG,SAAS,MAAlD,CAIA,IAAIE,EAAapB,EAAQqB,OAAO,iBAEhC,GADAR,KAAKE,SAASO,QAAQF,IAClBA,EAAWG,qBAAf,CAIA,IAAIN,EAAYJ,KAAKI,YAErBJ,KAAKE,SAASE,GAAWJ,KAAKE,SAASE,MAAc,GAAGsB,aAExD1B,KAAKE,SACFU,SAAS,cACTD,YAAY,eACZE,KAAK,iBAAiB,GAMzBb,KAAKG,cAAgB,EAErB,IAAIW,EAAW,WACbd,KAAKG,cAAgB,EACrBH,KAAKE,SACFS,YAAY,cACZC,SAAS,YACTH,QAAQ,oBAGb,IAAKvB,EAAQ6B,QAAQC,WACnB,OAAOF,EAASG,KAAKjB,MAGvBA,KAAKE,SACFE,GAAW,GACXiB,IAAI,gBAAiBpC,EAAMqC,MAAMR,EAAUd,OAC3CuB,qBAAqBhC,EAASiC,wBAGnC3B,OAAS,WACPG,KAAKA,KAAKE,SAASG,SAAS,MAAQ,OAAS,aAuCjD,OAdAd,EAASiC,oBAAsB,IAY/BnC,EAAQsC,SAASpC,GAEVD,EAAQC,SAAWA","file":"../collapse.js","sourcesContent":["define([\n    \"skylark-langx/langx\",\n    \"skylark-domx-browser\",\n    \"skylark-domx-eventer\",\n    \"skylark-domx-query\",\n    \"skylark-domx-plugins-base\",\n    \"./toggles\"\n], function(langx, browser, eventer,  $, plugins, toggles) {\n\n\n  'use strict';\n\n  // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse =  plugins.Plugin.inherit({\n    klassName: \"Collapse\",\n\n    pluginName : \"lark.toggles.collapse\",\n\n    options : {\n      toggle: true\n    },\n\n    _construct : function(elm,options) {\n      ////options = langx.mixin({}, Collapse.DEFAULTS, $(element).data(), options)\n      this.overrided(elm,options);\n      this.$element      = this.$();\n      //this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + elm.id + '\"],' +\n      //                     '[data-toggle=\"collapse\"][data-target=\"#' + elm.id + '\"]')\n      this.transitioning = null\n\n      //if (this.options.parent) {\n      //  this.$parent = this.getParent()\n      //} else {\n      //  this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n      //}\n\n      if (this.options.toggle) {\n        this.toggle();\n      }\n    },\n\n    dimension : function () {\n      var hasWidth = this.$element.hasClass('width');\n      return hasWidth ? 'width' : 'height';\n    },\n\n    show : function () {\n      if (this.transitioning || this.$element.hasClass('in')) {\n        return;\n      }\n\n      //var activesData;\n      //var actives = this.$parent && this.$parent.children('.collapsable').children('.in, .collapsing')\n\n      //if (actives && actives.length) {\n      //  activesData = actives.data('collapse')\n      //  if (activesData && activesData.transitioning) return\n      //}\n\n      var startEvent = eventer.create('show.collapse');\n      this.$element.trigger(startEvent)\n      if (startEvent.isDefaultPrevented()) return\n\n      //if (actives && actives.length) {\n      //  //Plugin.call(actives, 'hide')\n      //  actives.plugin(\"domx.collapse\").hide();\n      //  activesData || actives.data('collapse', null)\n      //}\n\n      var dimension = this.dimension();\n\n      this.$element\n        .removeClass('collapse')\n        .addClass('collapsing')[dimension](0)\n        .attr('aria-expanded', true)\n\n      //this.$trigger\n      //  .removeClass('collapsed')\n      //  .attr('aria-expanded', true)\n\n      this.transitioning = 1\n\n      var complete = function () {\n        this.$element\n          .removeClass('collapsing')\n          .addClass('collapse in')[dimension]('')\n        this.transitioning = 0\n        this.$element\n          .trigger('shown.collapse')\n      }\n\n      if (!browser.support.transition) {\n        return complete.call(this);\n      }\n\n      var scrollSize = langx.camelCase(['scroll', dimension].join('-'));\n\n      this.$element\n        .one('transitionEnd', langx.proxy(complete, this))\n        .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize]);\n    },\n\n    hide : function () {\n      if (this.transitioning || !this.$element.hasClass('in')) {\n        return ;\n      }\n\n      var startEvent = eventer.create('hide.collapse');\n      this.$element.trigger(startEvent);\n      if (startEvent.isDefaultPrevented()) {\n        return ;\n      } \n\n      var dimension = this.dimension();\n\n      this.$element[dimension](this.$element[dimension]())[0].offsetHeight;\n\n      this.$element\n        .addClass('collapsing')\n        .removeClass('collapse in')\n        .attr('aria-expanded', false);\n\n      //this.$trigger\n      //  .addClass('collapsed')\n      //  .attr('aria-expanded', false);\n\n      this.transitioning = 1;\n\n      var complete = function () {\n        this.transitioning = 0;\n        this.$element\n          .removeClass('collapsing')\n          .addClass('collapse')\n          .trigger('hidden.collapse');\n      }\n\n      if (!browser.support.transition) {\n        return complete.call(this);\n      }\n\n      this.$element\n        [dimension](0)\n        .one('transitionEnd', langx.proxy(complete, this))\n        .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n    },\n\n    toggle : function () {\n      this[this.$element.hasClass('in') ? 'hide' : 'show']();\n    }\n\n    /*\n    getParent : function () {\n      return $(this.options.parent)\n        .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\n        .each(langx.proxy(function (i, element) {\n          var $element = $(element)\n          this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n        }, this))\n        .end()\n    },\n\n    addAriaAndCollapsedClass : function ($element, $trigger) {\n      var isOpen = $element.hasClass('in');\n\n      $element.attr('aria-expanded', isOpen);\n      $trigger\n        .toggleClass('collapsed', !isOpen)\n        .attr('aria-expanded', isOpen);\n    }\n    */\n  });\n\n  Collapse.TRANSITION_DURATION = 350;\n\n  /*\n  function getTargetFromTrigger($trigger) {\n    var href\n    var target = $trigger.attr('data-target')\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n\n    return $(target)\n  }\n  */\n\n  plugins.register(Collapse);\n\n  return toggles.Collapse = Collapse;\n\n});\n"]}