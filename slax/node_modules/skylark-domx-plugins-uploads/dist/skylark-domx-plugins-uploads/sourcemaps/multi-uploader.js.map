{"version":3,"sources":["multi-uploader.js"],"names":["define","skylark","langx","$","elmx","FileUpload","plugins","uploads","MultiUploader","Plugin","inherit","klassName","pluginName","options","uploadUrl","params","formParamName","maxConnections","allowedExtensions","sizeLimit","minSizeLimit","autoUpload","selectors","fileList","fileItem","nodata","picker","dropzone","pastezone","startUploads","cancelUploads","template","dataType","name","size","cancel","clear","progress","message","_construct","elm","this","overrided","_velm","_elm","_initEventHandler","_initFileHandlers","_initUpoadHandler","_updateFileList","self","dzSelector","pzSelector","pkSelector","dropped","files","_addFiles","pasted","multiple","picked","_handler","url","onProgress","id","fileName","loaded","total","_onProgress","onComplete","result","_onComplete","onCancel","_onCancel","onFailure","e","_onFailure","itemSelectors","_listElement","on","$fileItem","closest","fileId","data","remove","click","find","forEach","send","$item","_getItemByFileId","percent","parseInt","progressHTML","_formatSize","css","parent","html","_updateFile","_filesInProgress","doneMsg","_addToList","getName","fileSize","getSize","item","_formatFileName","append","with_files_elements","without_files_elements","length","removeClass","addClass","when_pending","when_running","when_done","status","add","i","item2","_validateFile","_addFile","file","value","replace","_isAllowedExtension","_error","code","messages","r","replacement","join","showMessage","slice","ext","indexOf","toLowerCase","allowed","bytes","Math","max","toFixed","register"],"mappings":"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","file":"../multi-uploader.js","sourcesContent":["define([\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-net-http/upload\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"./uploads\"\r\n]  ,function(skylark,langx,$, elmx,FileUpload, plugins,uploads){\r\n\r\n    var fileListTemplate = '<div class=\"lark-multiuploader\">' + \r\n        '    <h3 class=\"popover-title\">Upload files</h3>' + \r\n        '    <div class=\"popover-content container-fluid\" class=\"file-list file-dropzone file-pastezone\">' + \r\n        '        <div class=\"no-data\"><em>Add files.</em></div>' + \r\n        '    </div>' + \r\n        '    <footer>' + \r\n        '        <button class=\"btn btn-warning pull-right btn-sm\" id=\"cancel-uploads-button\"><i class=\"icon-cancel\"></i>Cancel uploads</button>' + \r\n        '        <span class=\"btn btn-success fileinput-button btn-sm\" id=\"fileinput-button\">' + \r\n        '            <i class=\"icon-plus\"></i>' + \r\n        '            <span>Add files...</span>' + \r\n        '            <input id=\"fileupload\" type=\"file\" name=\"files[]\" multiple=\"multiple\">' + \r\n        '        </span>' + \r\n        '        <button class=\"btn btn-primary btn-sm\" id=\"start-uploads-button\"><i class=\"icon-start\"></i>Start uploads</button>' + \r\n        '    </footer>' + \r\n        '</div>',\r\n        fileItemTemplate = '<div class=\"file-item row\">' +\r\n        '   <div class=\"col-md-6\"><span class=\"name\"></span></div>' + \r\n        '   <div class=\"col-md-3\">' +\r\n        '    <span class=\"size\"></span>' +\r\n        '    <div class=\"progress hidden\">' +\r\n        '        <div class=\"progress-label\"></div>' +\r\n        '        <div class=\"bar\"></div>' +\r\n        '    </div>' +\r\n        '    <span class=\"message hidden\"></span>' +\r\n        '   </div>' +\r\n        '   <div class=\"col-md-3\">' +\r\n        '    <button class=\"btn btn-warning btn-xs cancel\"><i class=\"icon-remove\"></i>Cancel</button>' +\r\n        '    <button class=\"btn btn-xs clear hidden\">Clear</button>' +\r\n        '   </div>' +\r\n        '</div>';\r\n\r\n    var MultiUploader =  plugins.Plugin.inherit({\r\n        klassName : \"MultiUploader\",\r\n        pluginName : \"lark.uploads.multi\",\r\n\r\n        options: {\r\n            uploadUrl: '/upload',\r\n\r\n        \tparams: {\r\n                formParamName : \"file\"\r\n            },\r\n\r\n    \t    maxConnections: 3,\r\n        \t// validation\r\n        \tallowedExtensions: [],\r\n        \tsizeLimit: 0,\r\n        \tminSizeLimit: 0,\r\n\r\n            autoUpload: false,\r\n            selectors : {\r\n              fileList : \".file-list\",\r\n              fileItem : \".file-item\",\r\n              nodata : \".file-list .no-data\",\r\n\r\n              picker   : \".file-picker\",\r\n              dropzone : \".file-dropzone\",\r\n              pastezone: \".file-pastezone\",\r\n\r\n              startUploads: '.start-uploads',\r\n              cancelUploads: '.cancel-uploads',\r\n            },\r\n\r\n            template : fileListTemplate,\r\n\r\n            dataType: 'json',\r\n\r\n            fileItem : {\r\n            \tselectors : {\r\n                    name : \".name\",\r\n                    size : \".size\",\r\n                    cancel: \".cancel\",\r\n                    clear : \".clear\",\r\n                    progress : \".progress\",\r\n                    message : \".message\"                   \r\n            \t},\r\n\r\n            \ttemplate : fileItemTemplate\r\n            }\r\n        },\r\n\r\n\r\n        _construct : function(elm,options) {\r\n            var self = this;\r\n\r\n\r\n            // Render current files\r\n            /*\r\n            this.files.forEach(function (file) {\r\n                self.renderFile(file);\r\n            });\r\n            */\r\n\r\n            //this._refresh({files:true});\r\n        \r\n\r\n            //this._files.on('all', function(){\r\n            //  self._refresh({files:true});\r\n            //});\r\n\r\n\r\n           this.overrided(elm,options);\r\n\r\n\r\n           this._velm = elmx(this._elm);\r\n        \r\n\r\n\r\n            this._initEventHandler();\r\n            this._initFileHandlers();\r\n            this._initUpoadHandler();\r\n            this._updateFileList();\r\n        },\r\n\r\n        _initFileHandlers : function() {\r\n            var self = this;\r\n\r\n            var selectors = this.options.selectors,\r\n            \tdzSelector = selectors.dropzone,\r\n            \tpzSelector = selectors.pastezone,\r\n            \tpkSelector = selectors.picker;\r\n\r\n            if (dzSelector) {\r\n\t\t\t\tthis._velm.$(dzSelector).dropzone({\r\n\t                dropped : function (files) {\r\n                        self._addFiles(files);\r\n\t                }\r\n\t\t\t\t});\r\n            }\r\n\r\n\r\n            if (pzSelector) {\r\n                this._velm.$(pzSelector).pastezone({\r\n                    pasted : function (files) {\r\n                        self._addFiles(files);\r\n                    }\r\n                });                \r\n            }\r\n\r\n            if (pkSelector) {\r\n                this._velm.$(pkSelector).picker({\r\n                    multiple: true,\r\n                    picked : function (files) {\r\n                        self._addFiles(files);\r\n                    }\r\n                });                \r\n            }\r\n        },\r\n\r\n        _initUpoadHandler: function(){\r\n            var self = this,\r\n                handlerClass;\r\n\r\n            this._handler = new FileUpload({\r\n                url: this.options.uploadUrl,\r\n                maxConnections: this.options.maxConnections,\r\n                onProgress: function(id, fileName, loaded, total){\r\n                    self._onProgress(id, fileName, loaded, total);\r\n                },\r\n                onComplete: function(id, fileName, result){\r\n                    self._onComplete(id, fileName, result);\r\n                },\r\n                onCancel: function(id, fileName){\r\n                    self._onCancel(id, fileName);\r\n                },\r\n                onFailure: function(id,fileName,e){\r\n                    self._onFailure(id,fileName,e);\r\n                }\r\n            });\r\n        },\r\n        \r\n         /**\r\n         * delegate click event for cancel link\r\n         **/\r\n        _initEventHandler: function(){\r\n            var self = this,\r\n               selectors = this.options.selectors,\r\n               itemSelectors = this.options.fileItem.selectors, \r\n               list = this._listElement;\r\n\r\n            // Add cancel handler\r\n            this._velm.$(selectors.fileList).on(\"click\",itemSelectors.cancel,function(e){\r\n                var $fileItem = $(this).closest(selectors.fileItem),\r\n                    fileId = $fileItem.data(\"fileId\");\r\n                self._handler.cancel(fileId);\r\n                $fileItem.remove();\r\n                self._updateFileList();\r\n            });\r\n\r\n            // Add clear handler\r\n            this._velm.$(selectors.fileList).on(\"click\",itemSelectors.clear,function(e){\r\n                var $fileItem = $(this).closest(selectors.fileItem),\r\n                    fileId = $fileItem.data(\"fileId\");\r\n                $fileItem.remove();\r\n                self._updateFileList();\r\n            });\r\n\r\n            // Add cancel all handler\r\n            this._velm.$(selectors.cancelUploads).click(function(){\r\n                var $files = self._velm.$(selectors.fileList).find(selectors.fileItem);           \r\n                $files.forEach(function(fileItem){\r\n                    var $fileItem = $(fileItem),\r\n                        fileId = $fileItem.data(\"fileId\");\r\n                    self._handler.cancel(fileId);\r\n                    $fileItem.remove();\r\n                });\r\n                self._updateFileList();\r\n\r\n            });\r\n\r\n            // Add start uploads handler\r\n            this._velm.$(selectors.startUploads).click(function(){\r\n                var $files = self._velm.$(selectors.fileList).find(selectors.fileItem);           \r\n                $files.forEach(function(fileItem){\r\n                    var $fileItem = $(fileItem),\r\n                        fileId = $fileItem.data(\"fileId\");\r\n                    if (!$fileItem.data(\"status\")) {\r\n                        // The file has not yet been sent\r\n                        self._handler.send(fileId,self.options.params);\r\n                    }\r\n                });\r\n\r\n            });\r\n            \r\n\r\n        },       \r\n\r\n        _onProgress: function(id, fileName, loaded, total){          \r\n            var $item = this._getItemByFileId(id);\r\n\r\n            var percent = parseInt(loaded / total * 100, 10);\r\n            var progressHTML = this._formatSize(loaded)+' of '+ this._formatSize(total);\r\n\r\n            $item.data(\"status\",\"running\");\r\n            $item.find('.progress')\r\n                .find('.bar')\r\n                .css('width', percent+'%')\r\n                .parent()\r\n                .find('.progress-label')\r\n                .html(progressHTML);\r\n            this._updateFile($item);\r\n\r\n        },\r\n\r\n        _onComplete: function(id, fileName, result){\r\n            this._filesInProgress--;\r\n            var $item = this._getItemByFileId(id);\r\n            $item.data(\"status\",\"done\");\r\n            $item.find('.message').html('<i class=\"icon-success\"></i> ' + (this.doneMsg || 'Uploaded'));\r\n            this._updateFile($item);\r\n        },\r\n\r\n        _onFailure : function(id,fileName,e) {\r\n            this._filesInProgress--;\r\n            var $item = this._getItemByFileId(id);\r\n            $item.data(\"status\",\"error\");\r\n            $item.find('.message').html('<i class=\"icon-error\"></i> ');;\r\n            this._updateFile($item)\r\n\r\n        },\r\n\r\n        _onCancel: function(id, fileName){\r\n            this._filesInProgress--;\r\n            var $item = this._getItemByFileId(id);\r\n            $item.data(\"status\",\"cancel\");\r\n            this._updateFile($item)\r\n        },\r\n\r\n        _addToList: function(id, fileName){\r\n            var self = this;\r\n\r\n\r\n            var fileName = this._handler.getName(id),\r\n                fileSize = this._handler.getSize(id);\r\n\r\n            var item = $(this.options.fileItem.template);\r\n            item.data(\"fileId\",id);\r\n\r\n            item.find(this.options.fileItem.selectors.name).html(this._formatFileName(fileName));\r\n            item.find(this.options.fileItem.selectors.size).html(this._formatSize(fileSize));\r\n\r\n            this._velm.$(this.options.selectors.fileList).append(item);\r\n\r\n            this._updateFileList();\r\n        },\r\n    \r\n        _updateFileList : function ()  {\r\n            var selectors = this.options.selectors,\r\n                itemSelectors = this.options.fileItem.selectors,\r\n                files = this._velm.$(selectors.fileList).find(selectors.fileItem);\r\n\r\n            var with_files_elements = this._velm.$(selectors.cancelUploads + ',' + selectors.startUploads);\r\n            var without_files_elements = this._velm.$(selectors.nodata);\r\n            if (files.length > 0) {\r\n                with_files_elements.removeClass('hidden');\r\n                without_files_elements.addClass('hidden');\r\n            } else {\r\n                with_files_elements.addClass('hidden');\r\n                without_files_elements.removeClass('hidden');\r\n            }\r\n        },\r\n        \r\n        _updateFile: function ($item) {\r\n            var selectors = this.options.fileItem.selectors,\r\n                when_pending = $item.find(selectors.size + \",\" + selectors.cancel),\r\n                when_running = $item.find(selectors.progress + \",\" + selectors.cancel),\r\n                when_done = $item.find(selectors.message + \",\" + selectors.clear);\r\n\r\n            var status = $item.data(\"status\");    \r\n            if (status == \"pending\") {\r\n                when_running.add(when_done).addClass('hidden');\r\n                when_pending.removeClass('hidden');\r\n            } else if (status == \"running\") {\r\n                when_pending.add(when_done).addClass('hidden');\r\n                when_running.removeClass('hidden');\r\n            } else if (status == \"done\" || status == \"error\") {\r\n                when_pending.add(when_running).addClass('hidden');\r\n                when_done.removeClass('hidden');\r\n            }\r\n        },\r\n\r\n        _getItemByFileId: function(id){\r\n            var selectors = this.options.selectors,\r\n                files = this._velm.$(selectors.fileList).find(selectors.fileItem),\r\n                item;\r\n\r\n            // there can't be txt nodes in dynamically created list\r\n            // and we can  use nextSibling\r\n\r\n            for (var i = 0; i<files.length;i++){\r\n                var item2 = files[i];\r\n                if ($(item2).data(\"fileId\") == id) {\r\n                    item = item2;\r\n                    break;\r\n                }\r\n            }\r\n            if (item) {\r\n                return $(item);\r\n            }\r\n        },\r\n\r\n\r\n            \r\n        _addFiles: function(files){\r\n            for (var i=0; i<files.length; i++){\r\n                if ( !this._validateFile(files[i])){\r\n                    return;\r\n                }\r\n            }\r\n\r\n            for (var i=0; i<files.length; i++){\r\n                this._addFile(files[i]);\r\n            }\r\n        },\r\n\r\n        _addFile: function(file){\r\n            var id = this._handler.add(file);\r\n\r\n            this._filesInProgress++;\r\n            this._addToList(id);\r\n\r\n            //this._handler.upload(id, this.options.params);\r\n        },\r\n\r\n        _validateFile: function(file){\r\n            var name, size;\r\n\r\n            if (file.value){\r\n                // it is a file input\r\n                // get input value and remove path to normalize\r\n                name = file.value.replace(/.*(\\/|\\\\)/, \"\");\r\n            } else {\r\n                // fix missing properties in Safari\r\n                name = file.fileName != null ? file.fileName : file.name;\r\n                size = file.fileSize != null ? file.fileSize : file.size;\r\n            }\r\n\r\n            if (! this._isAllowedExtension(name)){\r\n                this._error('typeError', name);\r\n                return false;\r\n\r\n            } else if (size === 0){\r\n                this._error('emptyError', name);\r\n                return false;\r\n\r\n            } else if (size && this.options.sizeLimit && size > this.options.sizeLimit){\r\n                this._error('sizeError', name);\r\n                return false;\r\n\r\n            } else if (size && size < this.options.minSizeLimit){\r\n                this._error('minSizeError', name);\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        _error: function(code, fileName){\r\n            var message = this.options.messages[code];\r\n            function r(name, replacement){ message = message.replace(name, replacement); }\r\n\r\n            r('{file}', this._formatFileName(fileName));\r\n            r('{extensions}', this.options.allowedExtensions.join(', '));\r\n            r('{sizeLimit}', this._formatSize(this.options.sizeLimit));\r\n            r('{minSizeLimit}', this._formatSize(this.options.minSizeLimit));\r\n\r\n            this.options.showMessage(message);\r\n        },\r\n\r\n        _formatFileName: function(name){\r\n            if (name.length > 33){\r\n                name = name.slice(0, 19) + '...' + name.slice(-13);\r\n            }\r\n            return name;\r\n        },\r\n\r\n        _isAllowedExtension: function(fileName){\r\n            var ext = (-1 !== fileName.indexOf('.')) ? fileName.replace(/.*[.]/, '').toLowerCase() : '';\r\n            var allowed = this.options.allowedExtensions;\r\n\r\n            if (!allowed.length){return true;}\r\n\r\n            for (var i=0; i<allowed.length; i++){\r\n                if (allowed[i].toLowerCase() == ext){ return true;}\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        _formatSize: function(bytes){\r\n            var i = -1;\r\n            do {\r\n                bytes = bytes / 1024;\r\n                i++;\r\n            } while (bytes > 99);\r\n\r\n            return Math.max(bytes, 0.1).toFixed(1) + ['KB', 'MB', 'GB', 'TB', 'PB', 'EB'][i];\r\n        }\r\n\r\n    });\r\n\r\n   plugins.register(MultiUploader);\r\n\r\n\r\n\r\n\treturn uploads.MultiUploader = MultiUploader;\r\n});"]}