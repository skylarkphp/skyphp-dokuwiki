{"version":3,"sources":["transforms.js"],"names":["define","skylark","langx","browser","datax","styler","css3Transform","normalizeCssProperty","getZoom","scale","zoom","change","el","d","radian","x","y","Cos","Sin","matrix","Math","cos","sin","M11","M12","M21","M22","css","toFixed","transformData","data","calcs","vertical","PI","horizontal","rotate","degress","left","right","hZoom","vZoom","zoomin","zoomout","transforms","forEach","name","calcFunc","args","makeArray","arguments","shift","unshift","apply","this","mixin","reset","appliedTransforms","transform","parentElement","window","DOMMatrix","WebKitCSSMatrix","CSSMatrix","attach"],"mappings":";;;;;;;AAAAA,QACI,wBACA,sBACA,uBACA,oBACA,uBACD,SAASC,EAAQC,EAAMC,EAAQC,EAAMC,GACtC,IAAIC,EAAgBH,EAAQI,qBAAqB,aAYjD,SAASC,EAAQC,EAAOC,GACpB,OAAOD,EAAQ,GAAKA,GAASC,EAAOA,EAClCD,EAAQ,GAAKA,EAAQC,GAAQA,EAAO,EAG1C,SAASC,EAAOC,EAAGC,GACf,IAhBeC,EAAQC,EAAGC,EACxBC,EAAwBC,EAetBC,GAhBWL,EAgBQD,EAAEC,OAhBFC,EAgBUF,EAAEG,EAhBTA,EAgBYH,EAAEE,EAftCE,EAAMG,KAAKC,IAAIP,GAASI,EAAME,KAAKE,IAAIR,IAEzCS,IAAKN,EAAMF,EACXS,KAAMN,EAAMF,EACZS,IAAKP,EAAMH,EACXW,IAAKT,EAAMD,IAWXX,EAAOsB,IAAIf,EAAGN,EAAe,UACzBa,EAAOI,IAAIK,QAAQ,IAAM,IAAMT,EAAOM,IAAIG,QAAQ,IAAM,IACxDT,EAAOK,IAAII,QAAQ,IAAM,IAAMT,EAAOO,IAAIE,QAAQ,IAAM,WAIhE,SAASC,EAAcjB,EAAGC,GACxB,IAAIA,EAQF,OALAA,EAAIT,EAAM0B,KAAKlB,EAAG,kBAChBE,OAASD,EAAEC,QAAU,EACvBD,EAAEE,EAAIF,EAAEE,GAAK,EACbF,EAAEG,EAAIH,EAAEG,GAAK,EACbH,EAAEH,KAAOG,EAAEH,MAAQ,EACZG,EAPPT,EAAM0B,KAAKlB,EAAG,YAAYC,GAW9B,IAAIkB,GAEFC,SAAW,SAAUnB,GACjBA,EAAEC,OAASM,KAAKa,GAAKpB,EAAEC,OACvBD,EAAEG,IAAM,GAIZkB,WAAa,SAAUrB,GACnBA,EAAEC,OAASM,KAAKa,GAAKpB,EAAEC,OACvBD,EAAEE,IAAM,GAIZoB,OAAS,SAAUtB,EAAEuB,GACjBvB,EAAEC,OAASsB,EAAUhB,KAAKa,GAAK,KAInCI,KAAO,SAAUxB,GACbA,EAAEC,QAAUM,KAAKa,GAAK,GAI1BK,MAAQ,SAAUzB,GACdA,EAAEC,QAAUM,KAAKa,GAAK,GAI1BxB,MAAO,SAAUI,EAAEH,GACf,IAAI6B,EAAQ/B,EAAQK,EAAEG,EAAGN,GAAO8B,EAAQhC,EAAQK,EAAEE,EAAGL,GACjD6B,GAASC,IACX3B,EAAEG,GAAKuB,EACP1B,EAAEE,GAAKyB,IAKbC,OAAQ,SAAU5B,GAChBkB,EAAMtB,MAAMI,EAAE,KAIhB6B,QAAS,SAAU7B,GACjBkB,EAAMtB,MAAMI,GAAG,MAuCnB,SAAS8B,IACP,OAAOA,EAqBT,OAlBC,WAAW,aAAa,SAAS,OAAO,QAAQ,QAAQ,OAAO,SAAS,WAAWC,QAAQ,SAASC,GArCrG,IAA0BC,EAsCxBH,EAAWE,IAtCaC,EAsCYf,EAAMc,GArCnC,WACL,IAAIE,EAAO7C,EAAM8C,UAAUC,WACzBrC,EAAKmC,EAAKG,QACRrC,EAAIgB,EAAcjB,GACpBmC,EAAKI,QAAQtC,GACbiC,EAASM,MAAMC,KAAKN,GACpBpC,EAAOC,EAAGC,GACVgB,EAAcjB,EAAGC,OAiCvBX,EAAMoD,MAAMX,GACVY,MAAQ,SAAS3C,GACf,IAAIC,GACFE,EAAI,EACJC,EAAI,EACJF,OAAS,GAEXH,EAAOC,EAAGC,GACVgB,EAAcjB,EAAGC,IAEnBM,OAtCF,SAAgBP,GACd,IAAI4C,EAAoB,GACxB,EAAG,CACD,IAAIC,EAAYpD,EAAOsB,IAAIf,EAAI,aAE3B6C,GAA2B,SAAdA,IACfD,EAAoBC,EAAY,IAAMD,SAGjC5C,EAAKA,EAAG8C,eAEjB,OAAIC,OAAOC,UACF,IAAIA,UAAUJ,GACZG,OAAOE,gBACT,IAAIA,gBAAgBL,GAClBG,OAAOG,UACT,IAAIA,UAAUN,QADhB,KA2BFvD,EAAQ8D,OAAO,kBAAmBpB","file":"../transforms.js","sourcesContent":["define([\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-styler\"\r\n], function(skylark,langx,browser,datax,styler) {\r\n  var css3Transform = browser.normalizeCssProperty(\"transform\");\r\n\r\n  function getMatrix(radian, x, y) {\r\n    var Cos = Math.cos(radian), Sin = Math.sin(radian);\r\n    return {\r\n      M11: Cos * x, \r\n      M12: -Sin * y,\r\n      M21: Sin * x, \r\n      M22: Cos * y\r\n    };\r\n  }\r\n\r\n  function getZoom(scale, zoom) {\r\n      return scale > 0 && scale > -zoom ? zoom :\r\n        scale < 0 && scale < zoom ? -zoom : 0;\r\n  }\r\n\r\n  function change(el,d) {\r\n      var matrix = getMatrix(d.radian, d.y, d.x);\r\n      styler.css(el,css3Transform, \"matrix(\"\r\n        + matrix.M11.toFixed(16) + \",\" + matrix.M21.toFixed(16) + \",\"\r\n        + matrix.M12.toFixed(16) + \",\" + matrix.M22.toFixed(16) + \", 0, 0)\"\r\n      );      \r\n  }\r\n\r\n  function transformData(el,d) {\r\n    if (d) {\r\n      datax.data(el,\"transform\",d);\r\n    } else {\r\n      d = datax.data(el,\"transform\") || {};\r\n      d.radian = d.radian || 0;\r\n      d.x = d.x || 1;\r\n      d.y = d.y || 1;\r\n      d.zoom = d.zoom || 1;\r\n      return d;     \r\n    }\r\n  }\r\n\r\n  var calcs = {\r\n    //Vertical flip\r\n    vertical : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.y *= -1;\r\n    },\r\n\r\n   //Horizontal flip\r\n    horizontal : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.x *= -1;\r\n    },\r\n\r\n    //Rotate according to angle\r\n    rotate : function (d,degress) {\r\n        d.radian = degress * Math.PI / 180;; \r\n    },\r\n\r\n    //Turn left 90 degrees\r\n    left : function (d) {\r\n        d.radian -= Math.PI / 2; \r\n    },\r\n\r\n    //Turn right 90 degrees\r\n    right : function (d) {\r\n        d.radian += Math.PI / 2; \r\n    },\r\n \r\n    //zoom\r\n    scale: function (d,zoom) {\r\n        var hZoom = getZoom(d.y, zoom), vZoom = getZoom(d.x, zoom);\r\n        if (hZoom && vZoom) {\r\n          d.y += hZoom; \r\n          d.x += vZoom;\r\n        }\r\n    }, \r\n\r\n    //zoom in\r\n    zoomin: function (d) { \r\n      calcs.scale(d,0.1); \r\n    },\r\n    \r\n    //zoom out\r\n    zoomout: function (d) { \r\n      calcs.scale(d,-0.1); \r\n    }\r\n\r\n  };\r\n  \r\n  \r\n  function _createApiMethod(calcFunc) {\r\n    return function() {\r\n      var args = langx.makeArray(arguments),\r\n        el = args.shift(),\r\n          d = transformData(el);\r\n        args.unshift(d);\r\n        calcFunc.apply(this,args)\r\n        change(el,d);\r\n        transformData(el,d);\r\n    }\r\n  }\r\n  \r\n\r\n  function matrix(el) {\r\n    var appliedTransforms = '';\r\n    do {\r\n      var transform = styler.css(el, 'transform');\r\n\r\n      if (transform && transform !== 'none') {\r\n        appliedTransforms = transform + ' ' + appliedTransforms;\r\n      }\r\n      /* jshint boss:true */\r\n    } while (el = el.parentElement);\r\n\r\n    if (window.DOMMatrix) {\r\n      return new DOMMatrix(appliedTransforms);\r\n    } else if (window.WebKitCSSMatrix) {\r\n      return new WebKitCSSMatrix(appliedTransforms);\r\n    } else if (window.CSSMatrix) {\r\n      return new CSSMatrix(appliedTransforms);\r\n    }\r\n  }\r\n   \r\n  function transforms() {\r\n    return transforms;\r\n  }\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\"].forEach(function(name){\r\n    transforms[name] = _createApiMethod(calcs[name]);\r\n  });\r\n\r\n  langx.mixin(transforms, {\r\n    reset : function(el) {\r\n      var d = {\r\n        x : 1,\r\n        y : 1,\r\n        radian : 0,\r\n      }\r\n      change(el,d);\r\n      transformData(el,d);\r\n    },\r\n    matrix\r\n  });\r\n\r\n\r\n  return skylark.attach(\"domx.transforms\", transforms);\r\n});\r\n"]}