{"version":3,"sources":["bounce.js"],"names":["define","langx","geom","styler","transits","transit","bounce","elm","options","done","upAnim","downAnim","refValue","start","mode","hide","show","direction","distance","times","anims","speed","duration","easing","ref","motion","i","Deferred","funcs","css","msize","size","height","width","doAnimate","properties","d","resolve","promise","relativePosition","opacity","push","Math","pow","reduce","prev","curr","index","array","then","this"],"mappings":";;;;;;;AAAAA,QACI,sBACA,oBACA,sBACA,aACA,aACF,SAASC,EAAMC,EAAKC,EAAOC,EAASC,GAmGlC,OAAOD,EAASE,OAjGhB,SAAgBC,EAAKC,EAASC,GAC1B,IAAIC,EAAQC,EAAUC,EAMlBC,EAJAC,EAAON,EAAQM,KACfC,EAAgB,SAATD,EACPE,EAAgB,SAATF,EACPG,EAAYT,EAAQS,WAAa,KAEjCC,EAAWV,EAAQU,SACnBC,EAAQX,EAAQW,OAAS,EAGzBC,EAAgB,EAARD,GAAcH,GAAQD,EAAO,EAAI,GACzCM,EAAQb,EAAQc,SAAWF,EAC3BG,EAASf,EAAQe,OAGjBC,EAAsB,OAAdP,GAAoC,SAAdA,EAAyB,MAAQ,OAC/DQ,EAAyB,OAAdR,GAAoC,SAAdA,EACjCS,EAAI,EAIJC,EAAW1B,EAAM0B,SACjBC,KAKJ,GAHAhB,EAAWT,EAAO0B,IAAItB,EAAIiB,IAGpBN,EAAW,CACb,IAAIY,EAAQ5B,EAAK6B,KAAKxB,GACtBW,GAAoB,QAARM,EAAgBM,EAAME,OAASF,EAAMG,OAAS,EA0B9D,SAASC,EAAU3B,EAAI4B,EAAYb,EAAUC,GACzC,OAAO,WACH,IAAIa,EAAI,IAAIT,EAKZ,OAHAtB,EAAQE,EAAI4B,EAAYb,EAAUC,EAAQ,WACtCa,EAAEC,YAECD,EAAEE,SAMjB,IApCAzB,EAAQX,EAAKqC,iBAAiBhC,GAAKiB,GAE9BR,KACDL,GAAa6B,QAAS,IACZhB,GAAQZ,EAIlBT,EAAO0B,IAAItB,EAAK,UAAW,GAC3BJ,EAAO0B,IAAItB,EAAKiB,EAAKX,GAASY,EAAqB,GAAXP,EAA0B,EAAXA,IAEvDU,EAAMa,KAAKP,EAAU3B,EAAII,EAAUU,EAAOE,KAIzCR,IACDG,GAAsBwB,KAAKC,IAAK,EAAGxB,EAAQ,KAG/CR,MACUa,GAAQZ,EAgBVc,EAAIP,EAAOO,KACfhB,MACQc,GAAQX,GAAUY,GAAUP,EAAWA,GAE/CU,EAAMa,KAAKP,EAAU3B,EAAIG,EAAQW,EAAOE,IAExCK,EAAMa,KAAKP,EAAU3B,EAAII,EAAUU,EAAOE,IAE1CL,EAAWH,EAAkB,EAAXG,EAAeA,EAAW,EAgBhD,OAZKH,KACDL,GAAW8B,QAAS,IACZhB,GAAQX,GAAUY,GAAU,EAAIP,EAAWA,GAEnDU,EAAMa,KAAKP,EAAU3B,EAAIG,EAAQW,EAAOE,KAG5CK,EAAMa,KAAKhC,GACXmB,EAAMgB,OAAO,SAASC,EAAMC,EAAMC,EAAOC,GACrC,OAAOH,EAAKI,KAAKH,IAClBnB,EAASU,WAELa","file":"../bounce.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"./transits\",\r\n    \"./transit\"\r\n],function(langx,geom,styler,transits,transit) {\r\n\r\n    function bounce(elm, options, done ) {\r\n        var upAnim, downAnim, refValue,\r\n            // Defaults:\r\n            mode = options.mode,\r\n            hide = mode === \"hide\",\r\n            show = mode === \"show\",\r\n            direction = options.direction || \"up\",\r\n            start,\r\n            distance = options.distance,\r\n            times = options.times || 5,\r\n\r\n            // Number of internal animations\r\n            anims = times * 2 + ( show || hide ? 1 : 0 ),\r\n            speed = options.duration / anims,\r\n            easing = options.easing,\r\n\r\n            // Utility:\r\n            ref = ( direction === \"up\" || direction === \"down\" ) ? \"top\" : \"left\",\r\n            motion = ( direction === \"up\" || direction === \"left\" ),\r\n            i = 0;\r\n\r\n        //createPlaceholder(elm);\r\n\r\n        var Deferred = langx.Deferred;\r\n        var funcs = [];\r\n\r\n        refValue = styler.css(elm,ref );\r\n\r\n        // Default distance for the BIGGEST bounce is the outer Distance / 3\r\n        if ( !distance ) {\r\n            var msize = geom.size(elm);\r\n            distance = (ref === \"top\" ? msize.height : msize.width) / 3;\r\n        }\r\n\r\n        start = geom.relativePosition(elm)[ref];\r\n\r\n        if ( show ) {\r\n            downAnim = { opacity: 1 };\r\n            downAnim[ ref ] = refValue;\r\n\r\n            // If we are showing, force opacity 0 and set the initial position\r\n            // then do the \"first\" animation\r\n            styler.css(elm, \"opacity\", 0 );\r\n            styler.css(elm, ref, start + (motion ? -distance * 2 : distance * 2 ));\r\n\r\n            funcs.push(doAnimate(elm,downAnim, speed, easing));\r\n        }\r\n\r\n        // Start at the smallest distance if we are hiding\r\n        if ( hide ) {\r\n            distance = distance / Math.pow( 2, times - 1 );\r\n        }\r\n\r\n        downAnim = {};\r\n        downAnim[ ref ] = refValue;\r\n\r\n\r\n        function doAnimate(elm,properties, duration, easing) {\r\n            return function() {\r\n                var d = new Deferred();\r\n\r\n                transit(elm,properties, duration, easing ,function(){\r\n                    d.resolve();\r\n                });\r\n                return d.promise;\r\n\r\n            }\r\n        }\r\n\r\n        // Bounces up/down/left/right then back to 0 -- times * 2 animations happen here\r\n        for ( ; i < times; i++ ) {\r\n            upAnim = {};\r\n            upAnim[ ref ] = start + ( motion ? -distance : distance) ;\r\n\r\n            funcs.push(doAnimate(elm,upAnim, speed, easing));\r\n\r\n            funcs.push(doAnimate(elm,downAnim, speed, easing));\r\n\r\n            distance = hide ? distance * 2 : distance / 2;\r\n        }\r\n\r\n        // Last Bounce when Hiding\r\n        if ( hide ) {\r\n            upAnim = { opacity: 0 };\r\n            upAnim[ ref ] = start + ( motion ? -1 * distance : distance) ;\r\n\r\n            funcs.push(doAnimate(elm,upAnim, speed, easing ));\r\n        }\r\n\r\n        funcs.push(done);\r\n        funcs.reduce(function(prev, curr, index, array) {\r\n            return prev.then(curr);\r\n        }, Deferred.resolve());\r\n\r\n        return this;\r\n    } \r\n\r\n    return transits.bounce = bounce;\r\n});"]}