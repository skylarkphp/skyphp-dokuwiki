{"version":3,"sources":["explode.js"],"names":["define","langx","styler","geom","noder","$","transits","transit","show","hide","explode","elm","options","done","css","j","left","top","mx","my","rows","pieces","Math","round","sqrt","cells","mode","offset","pagePosition","size","marginSize","width","ceil","height","childComplete","push","this","length","visibility","remove","i","clone","appendTo","wrap","position","parent","addClass","explodeClass","overflow","opacity","duration","easing"],"mappings":";;;;;;;AAAAA,QACI,sBACA,sBACA,oBACA,qBACA,qBACA,aACA,YACA,SACA,UACF,SAASC,EAAMC,EAAOC,EAAKC,EAAMC,EAAEC,EAASC,EAAQC,EAAKC,GAoF1D,OAAOH,EAASI,QAlFb,SAAkBC,EAAIC,EAASC,GAGjCX,EAAOM,KAAKG,GACZT,EAAOY,IAAIH,EAAK,aAAc,UAE9B,IAAOI,EAAGC,EAAMC,EAAKC,EAAIC,EACxBC,EAAOR,EAAQS,OAASC,KAAKC,MAAOD,KAAKE,KAAMZ,EAAQS,SAAa,EACpEI,EAAQL,EAERZ,EAAgB,SADTI,EAAQc,KAEfC,EAASxB,EAAKyB,aAAajB,GAG3BkB,EAAO1B,EAAK2B,WAAWnB,GACvBoB,EAAQT,KAAKU,KAAMH,EAAKE,MAAQN,GAChCQ,EAASX,KAAKU,KAAMH,EAAKI,OAASb,GAClCC,KAGD,SAASa,IACRb,EAAOc,KAAMC,MACRf,EAAOgB,SAAWjB,EAAOK,IAiD9BvB,EAAOY,IAAIH,GACV2B,WAAY,YAEbjC,EAAGgB,GAASkB,SACZ1B,KA/CD,IAAM,IAAI2B,EAAI,EAAGA,EAAIpB,EAAMoB,IAI1B,IAHAvB,EAAMU,EAAOV,IAAMuB,EAAIP,EACvBd,EAAKqB,GAAMpB,EAAO,GAAM,EAElBL,EAAI,EAAGA,EAAIU,EAAOV,IACvBC,EAAOW,EAAOX,KAAOD,EAAIgB,EACzBb,EAAKH,GAAMU,EAAQ,GAAM,EAIzBpB,EAAEM,GACA8B,QACAC,SAAU,QACVC,KAAM,eACN7B,KACA8B,SAAU,WACVN,WAAY,UACZtB,MAAOD,EAAIgB,EACXd,KAAMuB,EAAIP,IAKVY,SACCC,SAAUlC,EAAQmC,cAAgB,sBAClCjC,KACA8B,SAAU,WACVI,SAAU,SACVjB,MAAOA,EACPE,OAAQA,EACRjB,KAAMA,GAASR,EAAOU,EAAKa,EAAQ,GACnCd,IAAKA,GAAQT,EAAOW,EAAKc,EAAS,GAClCgB,QAASzC,EAAO,EAAI,IAEpBD,SACAS,KAAMA,GAASR,EAAO,EAAIU,EAAKa,GAC/Bd,IAAKA,GAAQT,EAAO,EAAIW,EAAKc,GAC7BgB,QAASzC,EAAO,EAAI,GAClBI,EAAQsC,UAAY,IAAKtC,EAAQuC,OAAQjB,GAYhD,OAAOE","file":"../explode.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-query\",\r\n    \"./transits\",\r\n    \"./transit\",\r\n    \"./show\",\r\n    \"./hide\"\r\n],function(langx,styler,geom,noder,$,transits,transit,show,hide) {\r\n\r\n    function explode( elm,options, done ) {\r\n\r\n\t\t// Show and then visibility:hidden the element before calculating offset\r\n\t\tstyler.show(elm);\r\n\t\tstyler.css(elm, \"visibility\", \"hidden\" );\r\n\r\n\t\tvar i, j, left, top, mx, my,\r\n\t\t\trows = options.pieces ? Math.round( Math.sqrt( options.pieces ) ) : 3,\r\n\t\t\tcells = rows,\r\n\t\t\tmode = options.mode,\r\n\t\t\tshow = mode === \"show\",\r\n\t\t\toffset = geom.pagePosition(elm),\r\n\r\n\t\t\t// Width and height of a piece\r\n\t\t\tsize = geom.marginSize(elm),\r\n\t\t\twidth = Math.ceil( size.width / cells ),\r\n\t\t\theight = Math.ceil( size.height / rows ),\r\n\t\t\tpieces = [];\r\n\r\n\t\t// Children transit complete:\r\n\t\tfunction childComplete() {\r\n\t\t\tpieces.push( this );\r\n\t\t\tif ( pieces.length === rows * cells ) {\r\n\t\t\t\tanimComplete();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Clone the element for each row and cell.\r\n\t\tfor ( var i = 0; i < rows; i++ ) { // ===>\r\n\t\t\ttop = offset.top + i * height;\r\n\t\t\tmy = i - ( rows - 1 ) / 2;\r\n\r\n\t\t\tfor ( j = 0; j < cells; j++ ) { // |||\r\n\t\t\t\tleft = offset.left + j * width;\r\n\t\t\t\tmx = j - ( cells - 1 ) / 2;\r\n\r\n\t\t\t\t// Create a clone of the now hidden main element that will be absolute positioned\r\n\t\t\t\t// within a wrapper div off the -left and -top equal to size of our pieces\r\n\t\t\t\t$(elm)\r\n\t\t\t\t\t.clone()\r\n\t\t\t\t\t.appendTo( \"body\" )\r\n\t\t\t\t\t.wrap( \"<div></div>\" )\r\n\t\t\t\t\t.css( {\r\n\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t\tvisibility: \"visible\",\r\n\t\t\t\t\t\tleft: -j * width,\r\n\t\t\t\t\t\ttop: -i * height\r\n\t\t\t\t\t} )\r\n\r\n\t\t\t\t\t// Select the wrapper - make it overflow: hidden and absolute positioned based on\r\n\t\t\t\t\t// where the original was located +left and +top equal to the size of pieces\r\n\t\t\t\t\t.parent()\r\n\t\t\t\t\t\t.addClass( options.explodeClass || \"ui-effects-explode\" )\r\n\t\t\t\t\t\t.css( {\r\n\t\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t\t\toverflow: \"hidden\",\r\n\t\t\t\t\t\t\twidth: width,\r\n\t\t\t\t\t\t\theight: height,\r\n\t\t\t\t\t\t\tleft: left + ( show ? mx * width : 0 ),\r\n\t\t\t\t\t\t\ttop: top + ( show ? my * height : 0 ),\r\n\t\t\t\t\t\t\topacity: show ? 0 : 1\r\n\t\t\t\t\t\t} )\r\n\t\t\t\t\t\t.transit( {\r\n\t\t\t\t\t\t\tleft: left + ( show ? 0 : mx * width ),\r\n\t\t\t\t\t\t\ttop: top + ( show ? 0 : my * height ),\r\n\t\t\t\t\t\t\topacity: show ? 1 : 0\r\n\t\t\t\t\t\t}, options.duration || 500, options.easing, childComplete );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction animComplete() {\r\n\t\t\tstyler.css(elm, {\r\n\t\t\t\tvisibility: \"visible\"\r\n\t\t\t} );\r\n\t\t\t$( pieces ).remove();\r\n\t\t\tdone();\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\r\n\treturn transits.explode = explode;\r\n});\r\n"]}