{"version":3,"sources":["shake.js"],"names":["define","langx","geom","styler","transits","transit","shake","elm","options","done","i","direction","distance","times","anims","speed","Math","round","duration","ref","positiveMotion","animation0","animation","animation1","animation2","Deferred","doAnimate","properties","ease","d","resolve","promise","start","relativePosition","funcs","push","easing","reduce","prev","curr","index","array","then","this"],"mappings":";;;;;;;AAAAA,QACI,sBACA,oBACA,sBACA,aACA,aACF,SAASC,EAAMC,EAAKC,EAAOC,EAASC,GAwDrC,OAAOD,EAASE,MAvDhB,SAAeC,EAAKC,EAASC,GAE5B,IAAIC,EAAI,EACPC,EAAYH,EAAQG,WAAa,OACjCC,EAAWJ,EAAQI,UAAY,GAC/BC,EAAQL,EAAQK,OAAS,EACzBC,EAAgB,EAARD,EAAY,EACpBE,EAAQC,KAAKC,MAAOT,EAAQU,SAAWJ,GACvCK,EAAsB,OAAdR,GAAoC,SAAdA,EAAyB,MAAQ,OAC/DS,EAAiC,OAAdT,GAAoC,SAAdA,EACzCU,KACAC,KACAC,KACAC,KAEGC,EAAWxB,EAAMwB,SAIrB,SAASC,EAAUnB,EAAIoB,EAAYT,EAAUU,GAC5C,OAAO,WACN,IAAIC,EAAI,IAAIJ,EAKZ,OAHApB,EAAQE,EAAKoB,EAAYT,EAAUU,EAAM,WACxCC,EAAEC,YAEID,EAAEE,SAcX,IAxBCC,MAAQ9B,EAAK+B,iBAAiB1B,GAAKY,GACnCe,SAcDb,EAAYF,GAAQa,MACpBV,EAAWH,GAAQa,OAAUZ,GAAkB,EAAI,GAAMR,EACzDW,EAAYJ,GAAQG,EAAWH,IAAUC,EAAiB,GAAK,GAAMR,EAAW,EAChFY,EAAYL,GAAQI,EAAYJ,IAAUC,GAAkB,EAAI,GAAMR,EAAW,EAG9EsB,MAAMC,KAAKT,EAAUnB,EAAIe,EAAWP,EAAOP,EAAQ4B,SAG9C1B,EAAIG,EAAOH,IACfwB,MAAMC,KAAKT,EAAUnB,EAAIgB,EAAYR,EAAOP,EAAQ4B,SACpDF,MAAMC,KAAKT,EAAUnB,EAAIiB,EAAYT,EAAOP,EAAQ4B,SAUxD,OAPGF,MAAMC,KAAKT,EAAUnB,EAAIc,EAAYN,EAAO,EAAIP,EAAQ4B,SAE3DF,MAAMC,KAAK1B,GACXyB,MAAMG,OAAO,SAASC,EAAMC,EAAMC,EAAOC,GACtC,OAAOH,EAAKI,KAAKH,IACjBd,EAASK,WAELa","file":"../shake.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"./transits\",\r\n    \"./transit\"\r\n],function(langx,geom,styler,transits,transit) {\r\n\tfunction shake(elm, options, done ) {\r\n\r\n\t\tvar i = 1,\r\n\t\t\tdirection = options.direction || \"left\",\r\n\t\t\tdistance = options.distance || 20,\r\n\t\t\ttimes = options.times || 3,\r\n\t\t\tanims = times * 2 + 1,\r\n\t\t\tspeed = Math.round( options.duration / anims ),\r\n\t\t\tref = ( direction === \"up\" || direction === \"down\" ) ? \"top\" : \"left\",\r\n\t\t\tpositiveMotion = ( direction === \"up\" || direction === \"left\" ),\r\n\t\t\tanimation0 = {},\r\n\t\t\tanimation = {},\r\n\t\t\tanimation1 = {},\r\n\t\t\tanimation2 = {};\r\n\r\n\t\tvar Deferred = langx.Deferred;\r\n\t\t\tstart = geom.relativePosition(elm)[ref],\r\n\t\t\tfuncs = [];\r\n\r\n\t\tfunction doAnimate(elm,properties, duration, ease) {\r\n\t\t\treturn function() {\r\n\t\t\t\tvar d = new Deferred();\r\n\r\n\t\t\t\ttransit(elm, properties, duration, ease ,function(){\r\n\t\t\t\t\td.resolve();\r\n\t\t\t\t});\r\n\t\t\t\treturn d.promise;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Animation\r\n\t\tanimation0[ ref ] = start;\r\n\t\tanimation[ ref ] = start + ( positiveMotion ? -1 : 1 ) * distance;\r\n\t\tanimation1[ ref ] = animation[ ref ] + ( positiveMotion ? 1 : -1 ) * distance * 2;\r\n\t\tanimation2[ ref ] = animation1[ ref ] + ( positiveMotion ? -1 : 1 ) * distance * 2;\r\n\r\n\t\t// Animate\r\n\t    funcs.push(doAnimate(elm,animation, speed, options.easing ));\r\n\r\n\t\t// Shakes\r\n\t\tfor ( ; i < times; i++ ) {\r\n\t\t    funcs.push(doAnimate(elm,animation1, speed, options.easing ));\r\n\t\t    funcs.push(doAnimate(elm,animation2, speed, options.easing ));\r\n\t\t}\r\n\r\n\t    funcs.push(doAnimate(elm,animation0, speed /2 , options.easing ));\r\n\r\n\t\tfuncs.push(done);\r\n\t\tfuncs.reduce(function(prev, curr, index, array) {\r\n\t  \t\treturn prev.then(curr);\r\n\t\t}, Deferred.resolve());\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\treturn transits.shake = shake;\r\n\r\n});\r\n"]}