{"version":3,"sources":["skylark-easyeditor.js"],"names":["define","skylark","langx","browser","noder","eventer","finder","datax","$","plugins","EasyEditor","Plugin","inherit","klassName","_construct","element","options","this","elem","className","buttons","buttonsHtml","overwriteButtonSettings","css","onLoaded","randomString","Math","random","toString","substring","theme","dropdown","characterLimit","characterLimitText","characterLimitPreventKeypress","attachEvents","bootstrap","addToolbar","handleKeypress","handleResizeImage","utils","call","enableCharacterLimit","detachEvents","$container","closest","$toolbar","find","remove","removeClass","removeAttr","unwrap","tag","prop","toLowerCase","placeholderText","attr","marginTop","marginBottom","style","length","after","val","hide","addClass","document","getElementById","wrap","$wrapperElem","parent","containerClass","get","_this","keydown","e","keyCode","isSelectionInsideElement","preventDefault","shiftKey","execCommand","addEventListener","text","clipboardData","getData","replace","tagName","sel","containerNode","toUpperCase","window","getSelection","rangeCount","getRangeAt","commonAncestorContainer","selection","type","createRange","parentElement","nodeType","parentNode","before","$toolbarContainer","populateButtons","injectButton","settings","buttonTitle","undefined","buttonIdentifier","newSettings","extend","buttonHtml","childOf","$parentContainer","append","children","clickHandler","on","event","hasChild","stopPropagation","trigger","openDropdownOf","identifier","show","each","index","button","width","click","removeFormatting","arg","inFullArea","isSelectionOutsideOfEditor","selectedText","range","$parent","node","createElement","html","deleteContents","insertNode","contents","topMostParent","hasParentNode","parentsUntil","el","removeEmptyTags","removeBlockElementFromSelection","removeBr","removeBrNode","selectedHtml","cloneContents","temp","replaceWith","childNodes","wrapSelectionWithNodeName","name","blockElement","class","attribute","keepHtml","nodeName","isWrapped","isAlreadyWrapped","cloneRange","addAttribute","selectionContainsHtml","clonedSelection","div","appendChild","innerHTML","textContent","localName","surroundContents","removeAllRanges","addRange","removeWrappedDuplicateTag","wrapSelectionWithList","tagname","listArray","split","filter","v","wrappedListHtml","map","item","trim","startContainer","result","hasClass","inArray","isArray","pair","insertAtCaret","appendTo","elementContainsSelection","isActive","readonly","isOrContains","container","i","insertHtml","bindData","closeModal","clearTimeout","setTimeout","getValue","plainText","characterCount","wordCount","currentCharacterCount","remainingCount","$dom","getYoutubeVideoIdFromUrl","url","openModal","selector","$temp","focus","bold","italic","h2","h3","h4","x","alignleft","aligncenter","alignright","quote","code","link","prompt","list","source","thisButton","$tempTextarea","$elemContainer","$elem","top","offset","left","outerWidth","height","outerHeight","fn","easyEditor","data","main"],"mappings":"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","file":"../skylark-easyeditor.js","sourcesContent":["define('skylark-easyeditor/EasyEditor',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-finder\",\r\n  \"skylark-domx-data\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins-base\"\r\n],function(skylark, langx, browser, noder, eventer,finder, datax,$,   plugins) {\r\n\r\n\r\n    'use strict';\r\n\r\n\r\n  \tvar EasyEditor =  plugins.Plugin.inherit({\r\n\t    klassName : \"EasyEditor\",\r\n\t   \r\n\t    _construct : function( element, options ){\r\n\t        this.elem = element;\r\n\t        options = options || {};\r\n\t        this.className = options.className || 'easyeditor';\r\n\r\n\t        // 'bold', 'italic', 'link', 'h2', 'h3', 'h4', 'alignleft', 'aligncenter', 'alignright', 'quote', 'code', 'list', 'x', 'source'\r\n\t        var defaultButtons = ['bold', 'italic', 'link', 'h2', 'h3', 'h4', 'alignleft', 'aligncenter', 'alignright'];\r\n\t        this.buttons = options.buttons || defaultButtons;\r\n\t        this.buttonsHtml = options.buttonsHtml || null;\r\n\t        this.overwriteButtonSettings = options.overwriteButtonSettings || null;\r\n\t        this.css = options.css || null;\r\n\t        this.onLoaded = typeof options.onLoaded === 'function' ? options.onLoaded : null;\r\n\t        this.randomString = \"cls\"+Math.random().toString(36).substring(7);\r\n\t        this.theme = options.theme || null;\r\n\t        this.dropdown = options.dropdown || {};\r\n\t        this.characterLimit = options.characterLimit || null;\r\n\t        this.characterLimitText = options.characterLimitText || null;\r\n\t        this.characterLimitPreventKeypress = options.characterLimitPreventKeypress || false;\r\n\r\n\t        this.attachEvents();\r\n\t    },\r\n\r\n\t    // initialize\r\n\t    attachEvents: function() {\r\n\t        this.bootstrap();\r\n\t        this.addToolbar();\r\n\t        this.handleKeypress();\r\n\t        this.handleResizeImage();\r\n\t        this.utils();\r\n\r\n\t        if(this.onLoaded !== null) {\r\n\t            this.onLoaded.call(this, this);\r\n\t        }\r\n\t        \r\n\t        if (this.characterLimit) {\r\n\t            this.enableCharacterLimit();\r\n\t        }\r\n\t    },\r\n\r\n\t    // destory editor\r\n\t    detachEvents : function() {\r\n\t        var _this = this;\r\n\t        var $container = $(_this.elem).closest('.' + _this.className +'-wrapper');\r\n\t        var $toolbar = $container.find('.' + _this.className +'-toolbar');\r\n\r\n\t        $toolbar.remove();\r\n\t        $(_this.elem).removeClass(_this.className).removeAttr('contenteditable').unwrap();\r\n\t    },\r\n\r\n\t    // Adding necessary classes and attributes in editor\r\n\t    bootstrap : function() {\r\n\t        var _this = this;\r\n\t        var tag = $(_this.elem).prop('tagName').toLowerCase();\r\n\r\n\t        if(tag === 'textarea' || tag === 'input') {\r\n\t            var placeholderText = $(_this.elem).attr('placeholder') || '';\r\n\r\n\t            var marginTop = $(_this.elem).css('marginTop') || 0;\r\n\t            var marginBottom = $(_this.elem).css('marginBottom') || 0;\r\n\t            var style = '';\r\n\t            if(marginTop.length > 0 || marginBottom.length > 0) {\r\n\t                style = ' style=\"margin-top: ' + marginTop + '; margin-bottom: ' + marginBottom + '\" ';\r\n\t            }\r\n\r\n\t            $(_this.elem).after('<div id=\"' + _this.randomString + '-editor\" placeholder=\"' + placeholderText + '\">' + $(_this.elem).val() + '</div>');\r\n\t            $(_this.elem).hide().addClass(_this.randomString + '-bind');\r\n\r\n\t            _this.elem = document.getElementById(_this.randomString + '-editor');\r\n\t            $(_this.elem).attr('contentEditable', true).addClass(_this.className).wrap('<div class=\"'+ _this.className +'-wrapper\"' + style + '></div>');\r\n\t        }\r\n\t        else {\r\n\t            $(_this.elem).attr('contentEditable', true).addClass(_this.className).wrap('<div class=\"'+ _this.className +'-wrapper\"></div>');\r\n\t        }\r\n\r\n\t        this.$wrapperElem = $(_this.elem).parent();\r\n\r\n\t        if(_this.css !== null) {\r\n\t            $(_this.elem).css(_this.css);\r\n\t        }\r\n\r\n\t        this.containerClass = '.' + _this.className +'-wrapper';\r\n\r\n\t        if(typeof _this.elem === 'string') {\r\n\t            _this.elem = $(_this.elem).get(0);\r\n\t        }\r\n\r\n\t        if(_this.theme !== null) {\r\n\t            $(_this.elem).closest(_this.containerClass).addClass(_this.theme);\r\n\t        }\r\n\t    },\r\n\r\n\t    // enter and paste key handler\r\n\t    handleKeypress : function(){\r\n\t        var _this = this;\r\n\r\n\t        $(_this.elem).keydown(function(e) {\r\n\t            if(e.keyCode === 13 && _this.isSelectionInsideElement('li') === false) {\r\n\t                e.preventDefault();\r\n\r\n\t                if(e.shiftKey === true) {\r\n\t                    document.execCommand('insertHTML', false, '<br>');\r\n\t                }\r\n\t                else {\r\n\t                    document.execCommand('insertHTML', false, '<br><br>');\r\n\t                }\r\n\r\n\t                return false;\r\n\t            }\r\n\t        });\r\n\r\n\t        _this.elem.addEventListener('paste', function(e) {\r\n\t            e.preventDefault();\r\n\t            var text = e.clipboardData.getData('text/plain').replace(/\\n/ig, '<br>');\r\n\t            document.execCommand('insertHTML', false, text);\r\n\t        });\r\n\r\n\t    },\r\n\r\n\t    isSelectionInsideElement : function(tagName) {\r\n\t        var sel, containerNode;\r\n\t        tagName = tagName.toUpperCase();\r\n\t        if (window.getSelection) {\r\n\t            sel = window.getSelection();\r\n\t            if (sel.rangeCount > 0) {\r\n\t                containerNode = sel.getRangeAt(0).commonAncestorContainer;\r\n\t            }\r\n\t        } else if ( (sel = document.selection) && sel.type != \"Control\" ) {\r\n\t            containerNode = sel.createRange().parentElement();\r\n\t        }\r\n\t        while (containerNode) {\r\n\t            if (containerNode.nodeType == 1 && containerNode.tagName == tagName) {\r\n\t                return true;\r\n\t            }\r\n\t            containerNode = containerNode.parentNode;\r\n\t        }\r\n\t        return false;\r\n\t    },\r\n\r\n\t    // adding toolbar\r\n\t    addToolbar : function(){\r\n\t        var _this = this;\r\n\r\n\t        $(_this.elem).before('<div class=\"'+ _this.className +'-toolbar\"><ul></ul></div>');\r\n\t        this.$toolbarContainer = this.$wrapperElem.find('.' + _this.className +'-toolbar');\r\n\r\n\t        this.populateButtons();\r\n\t    },\r\n\r\n\t    // inejct button events\r\n\t    injectButton : function(settings){\r\n\t        var _this = this;\r\n\r\n\t        // overwritting default button settings\r\n\t        if(_this.overwriteButtonSettings !== null && _this.overwriteButtonSettings[settings.buttonIdentifier] !== undefined) {\r\n\t            var newSettings = langx.extend({}, settings, _this.overwriteButtonSettings[settings.buttonIdentifier]);\r\n\t            settings = newSettings;\r\n\t        }\r\n\r\n\t        // if button html exists overwrite default button html\r\n\t        if(_this.buttonsHtml !== null && _this.buttonsHtml[settings.buttonIdentifier] !== undefined) {\r\n\t            settings.buttonHtml = _this.buttonsHtml[settings.buttonIdentifier];\r\n\t        }\r\n\r\n\t        // if buttonTitle parameter exists\r\n\t        var buttonTitle;\r\n\t        if(settings.buttonTitle) {\r\n\t            buttonTitle = settings.buttonTitle;\r\n\t        }\r\n\t        else {\r\n\t            buttonTitle = settings.buttonIdentifier.replace(/\\W/g, ' ');\r\n\t        }\r\n\r\n\t        // adding button html\r\n\t        if(settings.buttonHtml) {\r\n\t            if(settings.childOf !== undefined) {\r\n\t                var $parentContainer = _this.$toolbarContainer.find('.toolbar-' + settings.childOf).parent('li');\r\n\r\n\t                if($parentContainer.find('ul').length === 0) {\r\n\t                    $parentContainer.append('<ul></ul>');\r\n\t                }\r\n\r\n\t                $parentContainer = $parentContainer.find('ul');\r\n\t                $parentContainer.append('<li><button type=\"button\" class=\"toolbar-'+ settings.buttonIdentifier +'\" title=\"'+ buttonTitle +'\">'+ settings.buttonHtml +'</button></li>');\r\n\t            }\r\n\t            else {\r\n\t                _this.$toolbarContainer.children('ul').append('<li><button type=\"button\" class=\"toolbar-'+ settings.buttonIdentifier +'\" title=\"'+ buttonTitle +'\">'+ settings.buttonHtml +'</button></li>');\r\n\t            }\r\n\t        }\r\n\r\n\t        // bind click event\r\n\t        if(typeof settings.clickHandler === 'function') {\r\n\t            $(_this.elem).closest(_this.containerClass).on('click', '.toolbar-'+ settings.buttonIdentifier, function(event){\r\n\t                if(typeof settings.hasChild !== undefined && settings.hasChild === true) {\r\n\t                    event.stopPropagation();\r\n\t                }\r\n\t                else {\r\n\t                    event.preventDefault();\r\n\t                }\r\n\r\n\t                settings.clickHandler.call(this, this);\r\n\t                $(_this.elem).trigger('keyup');\r\n\t            });\r\n\t        }\r\n\t    },\r\n\r\n\t    // open dropdown\r\n\t    openDropdownOf : function(identifier){\r\n\t        var _this = this;\r\n\t        $(_this.elem).closest(_this.containerClass).find('.toolbar-' + identifier).parent().children('ul').show();\r\n\t    },\r\n\r\n\t    // bidning all buttons\r\n\t    populateButtons : function(){\r\n\t        var _this = this;\r\n\r\n\t        langx.each(_this.buttons, function(index, button) {\r\n\t            if(typeof _this[button] === 'function'){\r\n\t                _this[button]();\r\n\t            }\r\n\t        });\r\n\r\n\t    },\r\n\r\n\t    // allowing resizing image\r\n\t    handleResizeImage : function(){\r\n\t        var _this = this;\r\n\r\n\t        $('html').on('click', _this.containerClass + ' figure', function(event) {\r\n\t            event.stopPropagation();\r\n\t            $(this).addClass('is-resizable');\r\n\t        });\r\n\r\n\t        $('html').on('mousemove', _this.containerClass + ' figure.is-resizable', function(event) {\r\n\t            $(this).find('img').css({ 'width' : $(this).width() + 'px' });\r\n\t        });\r\n\r\n\t        $(document).click(function() {\r\n\t            $(_this.elem).find('figure').removeClass('is-resizable');\r\n\t        });\r\n\t    },\r\n\r\n\t    // get selection\r\n\t    getSelection : function(){\r\n\t        if (window.getSelection) {\r\n\t            var selection = window.getSelection();\r\n\r\n\t            if (selection.rangeCount) {\r\n\t                return selection;\r\n\t            }\r\n\t        }\r\n\r\n\t        return false;\r\n\t    },\r\n\r\n\t    // remove formatting\r\n\t    removeFormatting : function(arg){\r\n\t        var _this = this;\r\n\t        var inFullArea = arg.inFullArea;\r\n\r\n\t        if(_this.isSelectionOutsideOfEditor() === true) {\r\n\t            return false;\r\n\t        }\r\n\r\n\t        if(inFullArea === false) {\r\n\t            var selection = _this.getSelection();\r\n\t            var selectedText = selection.toString();\r\n\r\n\t            if(selection && selectedText.length > 0) {\r\n\r\n\t                var range = selection.getRangeAt(0);\r\n\t                var $parent = $(range.commonAncestorContainer.parentNode);\r\n\r\n\t                if($parent.attr('class') === _this.className || $parent.attr('class') === _this.className + '-wrapper') {\r\n\t                    var node = document.createElement('span');\r\n\t                    $(node).attr('data-value', 'temp').html(selectedText.replace(/\\n/ig, '<br>'));\r\n\t                    range.deleteContents();\r\n\t                    range.insertNode(node);\r\n\r\n\t                    $('[data-value=\"temp\"]').contents().unwrap();\r\n\t                }\r\n\t                else {\r\n\r\n\t                    var topMostParent;\r\n\t                    var hasParentNode = false;\r\n\t                    langx.each($parent.parentsUntil(_this.elem), function(index, el) {\r\n\t                        topMostParent = el;\r\n\t                        hasParentNode = true;\r\n\t                    });\r\n\r\n\t                    if(hasParentNode === true) {\r\n\t                        $(topMostParent).html($(topMostParent).text().replace(/\\n/ig, '<br>')).contents().unwrap();\r\n\t                    }\r\n\t                    else {\r\n\t                        $parent.contents().unwrap();\r\n\t                    }\r\n\r\n\t                }\r\n\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            $(_this.elem).html($(_this.elem).text().replace(/\\n/ig, '<br>'));\r\n\t        }\r\n\r\n\t        // _this.removeEmptyTags();\r\n\t    },\r\n\r\n\t    // removing empty tags\r\n\t    removeEmptyTags : function(){\r\n\t        var _this = this;\r\n\t        $(_this.elem).html( $(_this.elem).html().replace(/(<(?!\\/)[^>]+>)+(<\\/[^>]+>)+/, '') );\r\n\t    },\r\n\r\n\t    // remove block elemenet from selection\r\n\t    removeBlockElementFromSelection : function(selection, removeBr){\r\n\t        var _this = this;\r\n\t        var result;\r\n\r\n\t        removeBr = removeBr === undefined ? false : removeBr;\r\n\t        var removeBrNode = '';\r\n\t        if(removeBr === true) {\r\n\t            removeBrNode = ', br';\r\n\t        }\r\n\r\n\t        var range = selection.getRangeAt(0);\r\n\t        var selectedHtml = range.cloneContents();\r\n\t        var temp = document.createElement('temp');\r\n\t        $(temp).html(selectedHtml);\r\n\t        $(temp).find('h1, h2, h3, h4, h5, h6, p, div' + removeBrNode).each(function() { $(this).replaceWith(this.childNodes); });\r\n\t        result = $(temp).html();\r\n\r\n\t        return result;\r\n\t    },\r\n\r\n\t    // wrap selction with a tag\r\n\t    wrapSelectionWithNodeName : function(arg){\r\n\t        var _this = this;\r\n\t        if(_this.isSelectionOutsideOfEditor() === true) {\r\n\t            return false;\r\n\t        }\r\n\r\n\t        var node = {\r\n\t            name: 'span',\r\n\t            blockElement: false,\r\n\t            style: null,\r\n\t            class: null,\r\n\t            attribute: null,\r\n\t            keepHtml: false\r\n\t        };\r\n\r\n\t        if(typeof arg === 'string') {\r\n\t            node.name = arg;\r\n\t        }\r\n\t        else {\r\n\t            node.name = arg.nodeName || node.name;\r\n\t            node.blockElement = arg.blockElement || node.blockElement;\r\n\t            node.style = arg.style || node.style;\r\n\t            node.class = arg.class || node.class;\r\n\t            node.attribute = arg.attribute || node.attribute;\r\n\t            node.keepHtml = arg.keepHtml || node.keepHtml;\r\n\t        }\r\n\r\n\t        var selection = _this.getSelection();\r\n\r\n\t        if(selection && selection.toString().length > 0 && selection.rangeCount) {\r\n\t            // checking if already wrapped\r\n\t            var isWrapped = _this.isAlreadyWrapped(selection, node);\r\n\r\n\t            // wrap node\r\n\t            var range = selection.getRangeAt(0).cloneRange();\r\n\t            var tag = document.createElement(node.name);\r\n\r\n\t                // adding necessary attribute to tag\r\n\t                if(node.style !== null || node.class !== null || node.attribute !== null) {\r\n\t                    tag = _this.addAttribute(tag, node);\r\n\t                }\r\n\r\n\t            // if selection contains html, surround contents has some problem with pre html tag and raw text selection\r\n\t            if(_this.selectionContainsHtml(range)) {\r\n\t                range = selection.getRangeAt(0);\r\n\r\n\t                if(node.keepHtml === true) {\r\n\t                    var clonedSelection = range.cloneContents();\r\n\t                    var div = document.createElement('div');\r\n\t                    div.appendChild(clonedSelection);\r\n\t                    $(tag).html(div.innerHTML);\r\n\t                }\r\n\t                else {\r\n\t                    tag.textContent = selection.toString();\r\n\t                }\r\n\r\n\t                range.deleteContents();\r\n\t                range.insertNode(tag);\r\n\r\n\t                if(range.commonAncestorContainer.localName === node.name) {\r\n\t                    $(range.commonAncestorContainer).contents().unwrap();\r\n\t                    _this.removeEmptyTags();\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                range.surroundContents(tag);\r\n\t                selection.removeAllRanges();\r\n\t                selection.addRange(range);\r\n\t            }\r\n\r\n\t            if(isWrapped === true) {\r\n\t                _this.removeWrappedDuplicateTag(tag);\r\n\t            }\r\n\r\n\t            _this.removeEmptyTags();\r\n\t            selection.removeAllRanges();\r\n\t        }\r\n\t    },\r\n\r\n\t    // wrap selection with unordered list\r\n\t    wrapSelectionWithList : function(tagname){\r\n\t        var _this = this;\r\n\t        tagname = tagname || 'ul';\r\n\r\n\t        // preventing outside selection\r\n\t        if(_this.isSelectionOutsideOfEditor() === true) {\r\n\t            return false;\r\n\t        }\r\n\r\n\t        // if text selected\r\n\t        var selection = _this.getSelection();\r\n\t        if(selection && selection.toString().length > 0 && selection.rangeCount) {\r\n\t            var selectedHtml = _this.removeBlockElementFromSelection(selection, true);\r\n\t            var listArray = selectedHtml.split('\\n').filter(function(v){return v!=='';});\r\n\t            var wrappedListHtml = langx.map(listArray, function(item) {\r\n\t                return '<li>' + langx.trim(item) + '</li>';\r\n\t            });\r\n\r\n\t            var node = document.createElement(tagname);\r\n\t            $(node).html(wrappedListHtml);\r\n\r\n\t            var range = selection.getRangeAt(0);\r\n\t            range.deleteContents();\r\n\t            range.insertNode(node);\r\n\r\n\t            selection.removeAllRanges();\r\n\t        }\r\n\r\n\t    },\r\n\r\n\t    // if selection contains html tag, surround content fails if selection contains html\r\n\t    selectionContainsHtml : function(range){\r\n\t        var _this = this;\r\n\t        if(range.startContainer.parentNode.className === _this.className + '-wrapper') return false;\r\n\t        else return true;\r\n\t    },\r\n\r\n\t    // if already wrapped with same tag\r\n\t    isAlreadyWrapped : function(selection, node){\r\n\t        var _this = this;\r\n\t        var range = selection.getRangeAt(0);\r\n\t        var el = $(range.commonAncestorContainer);\r\n\t        var result = false;\r\n\r\n\t        if( el.parent().prop('tagName').toLowerCase() === node.name && el.parent().hasClass(_this.className) === false ) {\r\n\t            result = true;\r\n\t        }\r\n\t        else if(node.blockElement === true) {\r\n\t            langx.each(el.parentsUntil(_this.elem), function(index, el) {\r\n\t                var tag = el.tagName.toLowerCase();\r\n\t                if( langx.inArray(tag, ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']) !== -1 ) {\r\n\t                    result = true;\r\n\t                }\r\n\t            });\r\n\t        }\r\n\t        else {\r\n\t            langx.each(el.parentsUntil(_this.elem), function(index, el) {\r\n\t                var tag = el.tagName.toLowerCase();\r\n\t                if( tag === node.name ) {\r\n\t                    result = true;\r\n\t                }\r\n\t            });\r\n\t        }\r\n\r\n\t        return result;\r\n\t    },\r\n\r\n\t    // remove wrap if already wrapped with same tag\r\n\t    removeWrappedDuplicateTag : function(tag){\r\n\t        var _this = this;\r\n\t        var tagName = tag.tagName;\r\n\r\n\t        $(tag).unwrap();\r\n\r\n\t        if($(tag).prop('tagName') === tagName && $(tag).parent().hasClass(_this.className) === false && $(tag).parent().hasClass(_this.className + '-wrapper')) {\r\n\t            $(tag).unwrap();\r\n\t        }\r\n\t    },\r\n\r\n\t    // adding attribute in tag\r\n\t    addAttribute : function(tag, node){\r\n\t        if(node.style !== null) {\r\n\t            $(tag).attr('style', node.style);\r\n\t        }\r\n\r\n\t        if(node.class !== null) {\r\n\t            $(tag).addClass(node.class);\r\n\t        }\r\n\r\n\t        if(node.attribute !== null) {\r\n\t            if(langx.isArray(node.attribute) === true) {\r\n\t                if(langx.isArray(node.attribute[0]) !== true){\r\n\t                    node.attribute[0] = [node.attribute[0], node.attribute[1]];\r\n\t                }\r\n\t                langx.each(node.attribute,function(index,pair){\r\n\t                    $(tag).attr(pair[0], pair[1]);\r\n\t                });\r\n\t            }\r\n\t            else {\r\n\t                $(tag).attr(node.attribute);\r\n\t            }\r\n\t        }\r\n\r\n\t        return tag;\r\n\t    },\r\n\r\n\t    // insert a node into cursor point in editor\r\n\t    insertAtCaret : function(node){\r\n\t        var _this = this;\r\n\t        if(_this.isSelectionOutsideOfEditor() === true) {\r\n\t            return false;\r\n\t        }\r\n\r\n\t        if(_this.getSelection()) {\r\n\t            var range = _this.getSelection().getRangeAt(0);\r\n\t            range.insertNode(node);\r\n\t        }\r\n\t        else {\r\n\t            $(node).appendTo(_this.elem);\r\n\t        }\r\n\t    },\r\n\r\n\t    // checking if selection outside of editor or not\r\n\t    isSelectionOutsideOfEditor : function(){\r\n\t        return !this.elementContainsSelection(this.elem);\r\n\t    },\r\n\r\n        isActive : function(){\r\n            //return false;\r\n            return this.elementContainsSelection(this.elem);\r\n        },\r\n\r\n        readonly : function(readonly) {\r\n            if (readonly === undefined) {\r\n                return $(this.elem).attr('contentEditable');\r\n            } else {\r\n                $(this.elem).attr('contentEditable', readonly && true);\r\n                return this;\r\n            }\r\n        },\r\n    \r\n\r\n\t    // node contains in containers or not\r\n\t    isOrContains : function(node, container) {\r\n\t        while (node) {\r\n\t            if (node === container) {\r\n\t                return true;\r\n\t            }\r\n\t            node = node.parentNode;\r\n\t        }\r\n\t        return false;\r\n\t    },\r\n\r\n\t    // selected text is inside container\r\n\t    elementContainsSelection : function(el) {\r\n\t        var _this = this;\r\n\t        var sel;\r\n\t        if (window.getSelection) {\r\n\t            sel = window.getSelection();\r\n\t            if (sel.rangeCount > 0) {\r\n\t                for (var i = 0; i < sel.rangeCount; ++i) {\r\n\t                    if (!_this.isOrContains(sel.getRangeAt(i).commonAncestorContainer, el)) {\r\n\t                        return false;\r\n\t                    }\r\n\t                }\r\n\t                return true;\r\n\t            }\r\n\t        } else if ( (sel = document.selection) && sel.type !== \"Control\") {\r\n\t            return _this.isOrContains(sel.createRange().parentElement(), el);\r\n\t        }\r\n\t        return false;\r\n\t    },\r\n\r\n\t    // insert html chunk into editor's temp tag\r\n\t    insertHtml : function(html){\r\n\t        var _this = this;\r\n\t        $(_this.elem).find('temp').html(html);\r\n\t    },\r\n\r\n\t    // utility of editor\r\n\t    utils : function(){\r\n\t        var _this = this;\r\n\r\n\t        $('html').on('click', '.'+ _this.className +'-modal-close', function(event) {\r\n\t            event.preventDefault();\r\n\t            _this.closeModal('#' + $(this).closest('.'+ _this.className + '-modal').attr('id'));\r\n\t        });\r\n\t        \r\n\t        // binding value in textarea if present\r\n\t        if( $('.' + _this.randomString + '-bind').length > 0 ) {\r\n\t            var bindData;\r\n\t            $('html').on('click keyup', _this.elem, function() {\r\n\t                var el = _this.elem;\r\n\t                clearTimeout(bindData);\r\n\t                bindData = setTimeout(function(){ $('.' + _this.randomString + '-bind').html( $(el).html() ); }, 250);\r\n\t            });\r\n\t        }\r\n\r\n\t        $(document).click(function(event) {\r\n\t            $('.' + _this.className).closest('.' + _this.className + '-wrapper').find('.' + _this.className + '-toolbar > ul > li > ul').hide();\r\n\t        });\r\n\t    },\r\n\t    \r\n\t    // Get value of current easy editor\r\n\t    getValue : function() {\r\n\t        var _this = this;\r\n\t        \r\n\t        var html = $(_this.elem).html();\r\n\t        var plainText = $(_this.elem).text();\r\n\t        var characterCount = plainText.length;\r\n\t        var wordCount = plainText.trim().split(/\\s+/).length;\r\n\t        \r\n\t        return {\r\n\t            html: html,\r\n\t            plainText: plainText,\r\n\t            characterCount: characterCount,\r\n\t            wordCount: wordCount\r\n\t        };\r\n\t    },\r\n\t    \r\n\t    \r\n\t    // Enable character limit\r\n\t    enableCharacterLimit : function() {\r\n\t        var _this = this;\r\n\t        \r\n\t        var currentCharacterCount = _this.characterLimit - _this.getValue().characterCount;\r\n\t        $(_this.elem).after('<div class=\"'+ _this.className +'-character-remaining '+ ((currentCharacterCount <= 0) ? 'is-invalid' : 'is-valid') +'\">'+ (_this.characterLimitText ? _this.characterLimitText + ' ' + currentCharacterCount : currentCharacterCount) +'</div>');\r\n\t        \r\n\t        $('html').on('keyup', _this.elem, function(){\r\n\t            var val = _this.getValue();\r\n\t            var remainingCount = _this.characterLimit - val.characterCount;\r\n\t            var $dom = $(_this.containerClass).find('[class*=\"-character-remaining\"]');\r\n\t            \r\n\t            if (_this.characterLimitText) {\r\n\t                $dom.text(_this.characterLimitText + ' ' + remainingCount);\r\n\t            } else {\r\n\t                $dom.text(remainingCount);\r\n\t            }\r\n\t            \r\n\t            if (remainingCount <= 0) {\r\n\t                $dom.removeClass('is-valid').addClass('is-invalid');\r\n\t            } else {\r\n\t                $dom.removeClass('is-invalid').addClass('is-valid');\r\n\t            }\r\n\t        });\r\n\t        \r\n\t        $('html').on('keypress', _this.elem, function(){\r\n\t            var val = _this.getValue();\r\n\t            \r\n\t            if (_this.characterLimitPreventKeypress && _this.characterLimit <= val.characterCount) {\r\n\t                return false;\r\n\t            }\r\n\t        });\r\n\t    },\r\n\t    \r\n\r\n\t    // youtube video id from url\r\n\t    getYoutubeVideoIdFromUrl : function(url){\r\n\t        if(url.length === 0) return false;\r\n\t        var videoId = '';\r\n\t        url = url.replace(/(>|<)/gi,'').split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);\r\n\t        if(url[2] !== undefined) {\r\n\t            videoId = url[2].split(/[^0-9a-z_\\-]/i);\r\n\t            videoId = videoId[0];\r\n\t        }\r\n\t        else {\r\n\t            videoId = url;\r\n\t        }\r\n\t        return videoId;\r\n\t    },\r\n\r\n\t    // opening modal window\r\n\t    openModal : function(selector){\r\n\t        var temp = document.createElement('temp');\r\n\t        temp.textContent = '.';\r\n\t        this.insertAtCaret(temp);\r\n\r\n\t        $(selector).removeClass('is-hidden');\r\n\t    },\r\n\r\n\t    // closing modal window\r\n\t    closeModal : function(selector){\r\n\t        var _this = this;\r\n\r\n\t        $(selector).addClass('is-hidden').find('input').val('');\r\n\t        $(selector).find('.' + _this.className + '-modal-content-body-loader').css('width', '0');\r\n\t        var $temp = $(this.elem).find('temp');\r\n\r\n\t        if($temp.html() === '.') {\r\n\t            $temp.remove();\r\n\t        }\r\n\t        else {\r\n\t            $temp.contents().unwrap();\r\n\t        }\r\n\r\n\t        $(this.elem).focus();\r\n\t    },\r\n\r\n\t    bold : function(){\r\n\t        var _this = this;\r\n\t        var settings = {\r\n\t            buttonIdentifier: 'bold',\r\n\t            buttonHtml: 'B',\r\n\t            clickHandler: function(){\r\n\t                _this.wrapSelectionWithNodeName({ nodeName: 'strong', keepHtml: true });\r\n\t            }\r\n\t        };\r\n\r\n\t        _this.injectButton(settings);\r\n\t    },\r\n\r\n\t    italic : function(){\r\n\t        var _this = this;\r\n\t        var settings = {\r\n\t            buttonIdentifier: 'italic',\r\n\t            buttonHtml: 'I',\r\n\t            clickHandler: function(){\r\n\t                _this.wrapSelectionWithNodeName({ nodeName: 'em', keepHtml: true });\r\n\t            }\r\n\t        };\r\n\r\n\t        _this.injectButton(settings);\r\n\t    },\r\n\r\n\t    h2 : function(){\r\n\t        var _this = this;\r\n\t        var settings = {\r\n\t            buttonIdentifier: 'header-2',\r\n\t            buttonHtml: 'H2',\r\n\t            clickHandler: function(){\r\n\t                _this.wrapSelectionWithNodeName({ nodeName: 'h2', blockElement: true });\r\n\t            }\r\n\t        };\r\n\r\n\t        _this.injectButton(settings);\r\n\t    },\r\n\r\n\t    h3 : function(){\r\n\t        var _this = this;\r\n\t        var settings = {\r\n\t            buttonIdentifier: 'header-3',\r\n\t            buttonHtml: 'H3',\r\n\t            clickHandler: function(){\r\n\t                _this.wrapSelectionWithNodeName({ nodeName: 'h3', blockElement: true });\r\n\t            }\r\n\t        };\r\n\r\n\t        _this.injectButton(settings);\r\n\t    },\r\n\r\n\t    h4 : function(){\r\n\t        var _this = this;\r\n\t        var settings = {\r\n\t            buttonIdentifier: 'header-4',\r\n\t            buttonHtml: 'H4',\r\n\t            clickHandler: function(){\r\n\t                _this.wrapSelectionWithNodeName({ nodeName: 'h4', blockElement: true });\r\n\t            }\r\n\t        };\r\n\r\n\t        _this.injectButton(settings);\r\n\t    },\r\n\r\n\t    x : function(){\r\n\t        var _this = this;\r\n\t        var settings = {\r\n\t            buttonIdentifier: 'remove-formatting',\r\n\t            buttonHtml: 'x',\r\n\t            clickHandler: function(){\r\n\t                _this.removeFormatting({ inFullArea: false });\r\n\t            }\r\n\t        };\r\n\r\n\t        _this.injectButton(settings);\r\n\t    },\r\n\r\n\t    alignleft : function(){\r\n\t        var _this = this;\r\n\t        var settings = {\r\n\t            buttonIdentifier: 'align-left',\r\n\t            buttonHtml: 'Align left',\r\n\t            clickHandler: function(){\r\n\t                _this.wrapSelectionWithNodeName({ nodeName: 'p', style: 'text-align: left', class: 'text-left', keepHtml: true });\r\n\t            }\r\n\t        };\r\n\r\n\t        _this.injectButton(settings);\r\n\t    },\r\n\r\n\t    aligncenter : function(){\r\n\t        var _this = this;\r\n\t        var settings = {\r\n\t            buttonIdentifier: 'align-center',\r\n\t            buttonHtml: 'Align center',\r\n\t            clickHandler: function(){\r\n\t                _this.wrapSelectionWithNodeName({ nodeName: 'p', style: 'text-align: center', class: 'text-center', keepHtml: true });\r\n\t            }\r\n\t        };\r\n\r\n\t        _this.injectButton(settings);\r\n\t    },\r\n\r\n\t    alignright : function(){\r\n\t        var _this = this;\r\n\t        var settings = {\r\n\t            buttonIdentifier: 'align-right',\r\n\t            buttonHtml: 'Align right',\r\n\t            clickHandler: function(){\r\n\t                _this.wrapSelectionWithNodeName({ nodeName: 'p', style: 'text-align: right', class: 'text-right', keepHtml: true });\r\n\t            }\r\n\t        };\r\n\r\n\t        _this.injectButton(settings);\r\n\t    },\r\n\r\n\t    quote : function(){\r\n\t        var _this = this;\r\n\t        var settings = {\r\n\t            buttonIdentifier: 'quote',\r\n\t            buttonHtml: 'Quote',\r\n\t            clickHandler: function(){\r\n\t                _this.wrapSelectionWithNodeName({ nodeName: 'blockquote' });\r\n\t            }\r\n\t        };\r\n\r\n\t        _this.injectButton(settings);\r\n\t    },\r\n\r\n\t    code : function(){\r\n\t        var _this = this;\r\n\t        var settings = {\r\n\t            buttonIdentifier: 'code',\r\n\t            buttonHtml: 'Code',\r\n\t            clickHandler: function(){\r\n\t                _this.wrapSelectionWithNodeName({ nodeName: 'pre' });\r\n\t            }\r\n\t        };\r\n\r\n\t        _this.injectButton(settings);\r\n\t    },\r\n\r\n\t    link : function(){\r\n\t        var _this = this;\r\n\t        var settings = {\r\n\t            buttonIdentifier: 'link',\r\n\t            buttonHtml: 'Link',\r\n\t            clickHandler: function(){\r\n\t                _this.wrapSelectionWithNodeName({ nodeName: 'a', attribute: ['href', prompt('Insert link', '')] });\r\n\t            }\r\n\t        };\r\n\r\n\t        _this.injectButton(settings);\r\n\t    },\r\n\r\n\t    list : function(){\r\n\t        var _this = this;\r\n\t        var settings = {\r\n\t            buttonIdentifier: 'list',\r\n\t            buttonHtml: 'List',\r\n\t            clickHandler: function(){\r\n\t                _this.wrapSelectionWithList();\r\n\t            }\r\n\t        };\r\n\r\n\t        _this.injectButton(settings);\r\n\t    },\r\n\r\n\t    source : function(){\r\n\t        var _this = this;\r\n\t        var settings = {\r\n\t            buttonIdentifier: 'source',\r\n\t            buttonHtml: 'Source',\r\n\t            clickHandler: function(thisButton){\r\n\t                var $elemContainer = $(thisButton).closest('.' + _this.className + '-wrapper');\r\n\t                var $elem = $elemContainer.find('.' + _this.className);\r\n\t                var $tempTextarea;\r\n\r\n\t                if($(thisButton).hasClass('is-view-source-mode')) {\r\n\t                    $tempTextarea = $('body > textarea.' + _this.className + '-temp');\r\n\t                    $elem.css('visibility', 'visible');\r\n\t                    $tempTextarea.remove();\r\n\t                    $(thisButton).removeClass('is-view-source-mode');\r\n\t                }\r\n\t                else {\r\n\t                    $('body').append('<textarea class=\"' + _this.className + '-temp\" style=\"position: absolute; margin: 0;\"></textarea>');\r\n\t                    $tempTextarea = $('body > textarea.' + _this.className + '-temp');\r\n\r\n\t                    $tempTextarea.css({\r\n\t                        'top' : $elem.offset().top,\r\n\t                        'left' : $elem.offset().left,\r\n\t                        'width' : $elem.outerWidth(),\r\n\t                        'height' : $elem.outerHeight()\r\n\t                    }).html( $elem.html() );\r\n\r\n\t                    if( $elem.css('border') !== undefined ) {\r\n\t                        $tempTextarea.css('border', $elem.css('border'));\r\n\t                    }\r\n\r\n\t                    $elem.css('visibility', 'hidden');\r\n\t                    $(thisButton).addClass('is-view-source-mode');\r\n\r\n\t                    $tempTextarea.on('keyup click change keypress', function() {\r\n\t                        $elem.html( $(this).val() );\r\n\t                    });\r\n\t                }\r\n\t            }\r\n\t        };\r\n\r\n\t        _this.injectButton(settings);\r\n\t    }\r\n\t});\r\n\r\n    $.fn.easyEditor = function ( options ) {\r\n        return this.each(function () {\r\n            if (!datax.data(this, 'plugin_easyEditor')) {\r\n                datax.data(this, 'plugin_easyEditor',\r\n                new EasyEditor( this, options ));\r\n            }\r\n        });\r\n    };\r\n\r\n\treturn  EasyEditor;\t\r\n});\r\n\ndefine('skylark-easyeditor/main',[\r\n    \"./EasyEditor\"\r\n], function(EasyEditor) {\r\n    return EasyEditor;\r\n});\r\n\ndefine('skylark-easyeditor', ['skylark-easyeditor/main'], function (main) { return main; });\n\n"]}