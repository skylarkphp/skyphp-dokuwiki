{"version":3,"sources":["instantiate.js"],"names":["define","datax","plugins","Plugin","pluginKlasses","instantiate","elm","pluginName","options","pair","split","instanceDataName","pluginInstance","data","Error","destroy","undefined","reset","pluginKlass","this","prototype"],"mappings":";;;;;;;AAAAA,QACI,oBACA,YACA,YACD,SACCC,EACAC,EACAC,GAEA,aAEA,IAAIC,EAAgBF,EAAQE,cAK5B,SAASC,EAAYC,EAAIC,EAAWC,GAChC,IAAIC,EAAOF,EAAWG,MAAM,KACxBC,EAAmBF,EAAK,GAC5BF,EAAaE,EAAK,GAEbE,IACDA,EAAmBJ,GAGvB,IAAIK,EAAiBX,EAAMY,KAAMP,EAAKK,GAEtC,GAAgB,aAAZH,EACA,OAAOI,EACJ,GAAgB,YAAZJ,EAAuB,CAC9B,IAAKI,EACD,MAAM,IAAIE,MAAO,sCAErBF,EAAeG,UAEfH,OAAiBI,OAEjB,GAAKJ,EAOMJ,GACPI,EAAeK,MAAMT,OARJ,CACjB,QAAgBQ,IAAZR,GAA4C,iBAAZA,EAChC,MAAM,IAAIM,MAAO,sCAGrBF,EAAiB,IAAIM,EADHd,EAAcG,IACCD,EAAIE,GACrCP,EAAMY,KAAMP,EAAKK,EAAiBC,GAM1C,OAAOA,EAOX,OAJAT,EAAOE,YAAc,SAASC,EAAIE,GAC9B,OAAOH,EAAYC,EAAIa,KAAKC,UAAUb,WAAWC,IAG7CN,EAAQG,YAAcA","file":"../instantiate.js","sourcesContent":["define([\r\n    \"skylark-domx-data\",\r\n    \"./plugins\",\r\n    \"./plugin\"\r\n], function(\r\n    datax, \r\n    plugins,\r\n    Plugin\r\n) {\r\n    \"use strict\";\r\n\r\n    var pluginKlasses = plugins.pluginKlasses;\r\n\r\n    /*\r\n     * Create or get or destory a plugin instance assocated with the element.\r\n     */\r\n    function instantiate(elm,pluginName,options) {\r\n        var pair = pluginName.split(\":\"),\r\n            instanceDataName = pair[1];\r\n        pluginName = pair[0];\r\n\r\n        if (!instanceDataName) {\r\n            instanceDataName = pluginName;\r\n        }\r\n\r\n        var pluginInstance = datax.data( elm, instanceDataName );\r\n\r\n        if (options === \"instance\") {\r\n            return pluginInstance;\r\n        } else if (options === \"destroy\") {\r\n            if (!pluginInstance) {\r\n                throw new Error (\"The plugin instance is not existed\");\r\n            }\r\n            pluginInstance.destroy();\r\n            //datax.removeData( elm, pluginName);\r\n            pluginInstance = undefined;\r\n        } else {\r\n            if (!pluginInstance) {\r\n                if (options !== undefined && typeof options !== \"object\") {\r\n                    throw new Error (\"The options must be a plain object\");\r\n                }\r\n                var pluginKlass = pluginKlasses[pluginName]; \r\n                pluginInstance = new pluginKlass(elm,options);\r\n                datax.data( elm, instanceDataName,pluginInstance );\r\n            } else if (options) {\r\n                pluginInstance.reset(options);\r\n            }\r\n        }\r\n\r\n        return pluginInstance;\r\n    }\r\n\r\n    Plugin.instantiate = function(elm,options) {\r\n        return instantiate(elm,this.prototype.pluginName,options);\r\n    };\r\n\r\n    return  plugins.instantiate = instantiate;\r\n});"]}