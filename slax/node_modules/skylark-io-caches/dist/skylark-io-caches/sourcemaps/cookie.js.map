{"version":3,"sources":["cookie.js"],"names":["define","types","mixin","datetimes","caches","cookie","get","name","sKey","this","has","unescape","document","replace","RegExp","escape","test","list","values","split","i","length","remove","path","set","value","expires","domain","secure","type","date","Date","now","setTime","getTime","expire","parseMilliSeconds","toGMTString"],"mappings":";;;;;;;AAAAA,QACI,sBACA,8BACA,0BACA,YACD,SAASC,EAAMC,EAAMC,EAAUC,GACjC,aAEG,SAASC,IACL,OAAOA,EA+CX,OA5CAH,EAAMG,GACRC,IAAM,SAASC,GACX,OAAKC,MAASC,KAAKC,IAAIH,GAClBI,SAASC,SAASP,OAAOQ,QAAQ,IAAIC,OAAO,gBAAkBC,OAAOR,GAAMM,QAAQ,cAAe,QAAU,sCAAsC,OADhH,MAK3CH,IAAM,SAASH,GACd,OAAO,IAAKO,OAAO,cAAgBC,OAAOR,GAAMM,QAAQ,cAAe,QAAU,WAAYG,KAAKJ,SAASP,SAI5GY,KAAO,WAEH,IADA,IAAIC,EAASN,SAASP,OAAOQ,QAAQ,0DAA2D,IAAIM,MAAM,uBACjGC,EAAI,EAAGA,EAAIF,EAAOG,OAAQD,IAClCF,EAAOE,GAAKT,SAASO,EAAOE,IAE7B,OAAOF,GAGXI,OAAS,SAASf,EAAKgB,GACdhB,GAASE,KAAKC,IAAIH,KAGvBK,SAASP,OAASU,OAAOR,GAAQ,4CAA8CgB,EAAO,UAAYA,EAAO,MAG7GC,IAAK,SAAUjB,EAAMkB,EAAOC,EAASH,EAAMI,EAAQC,GAC/C,GAAKrB,IAAQ,6CAA6CS,KAAKT,GAA/D,CAEH,IAAIsB,EAAO5B,EAAM4B,KAAKH,GACtB,GAAa,WAATG,EAAmB,CACtB,IAAIC,EAAOC,KAAKC,MAChBF,EAAKG,QAAQH,EAAKI,UAAsB,GAATC,OAAc,GAAK,GAAK,KACvDT,EAAUI,MACS,WAATD,IACVH,EAAU,IAAIK,KAAKA,KAAKC,MAAQ7B,EAAUiC,kBAAkBV,KAG1Dd,SAASP,OAASU,OAAOR,GAAQ,IAAMQ,OAAOU,IAAUC,EAAS,YAAcA,EAAQW,cAAiB,KAAOV,EAAS,YAAcA,EAAS,KAAOJ,EAAO,UAAYA,EAAO,KAAOK,EAAS,WAAa,QAKxMxB,EAAOC,OAASA","file":"../cookie.js","sourcesContent":["define([\r\n    \"skylark-langx-types\",\r\n    \"skylark-langx-objects/mixin\",\r\n    \"skylark-langx-datetimes\",\r\n    \"./caches\"\r\n], function(types,mixin,datetimes,caches) {\r\n\t\"use strict\";\r\n\r\n    function cookie() {\r\n        return cookie;\r\n    }\r\n\r\n    mixin(cookie, {\r\n\t\tget : function(name) {\r\n\t\t    if (!sKey || !this.has(name)) { return null; }\r\n\t\t\t\treturn unescape(document.cookie.replace(new RegExp(\"(?:^|.*;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\"),\"$1\"));\r\n\r\n\t\t},\r\n\r\n\t\thas : function(name) {\r\n\t\t\treturn (new RegExp(\"(?:^|;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie);\r\n\t\t},\r\n\r\n\r\n\t\tlist : function() {\r\n\t\t    var values = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\r\n\t\t    for (var i = 0; i < values.length; i++) { \r\n\t\t    \tvalues[i] = unescape(values[i]); \r\n\t\t    }\r\n\t\t    return values;\r\n\t\t},\r\n\r\n\t\tremove : function(name,path) {\r\n\t\t    if (!name || !this.has(name)) { \r\n\t\t    \treturn; \r\n\t\t   \t}\r\n\t\t    document.cookie = escape(name) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (path ? \"; path=\" + path : \"\");\r\n\t\t},\r\n\r\n\t\tset: function (name, value, expires, path, domain, secure) {\r\n\t\t    if (!name || /^(?:expires|max\\-age|path|domain|secure)$/i.test(name)) { return; }\r\n\r\n\t\t\tvar type = types.type(expires);\r\n\t\t\tif (type === 'number') {\r\n\t\t\t\tvar date = Date.now();\r\n\t\t\t\tdate.setTime(date.getTime() + (expire * 24 * 60 * 60 * 1000));\r\n\t\t\t\texpires = date;\r\n\t\t\t} else if (type === 'string') {\r\n\t\t\t\texpires = new Date(Date.now() + datetimes.parseMilliSeconds(expires));\r\n\t\t\t}\r\n\r\n\t\t    document.cookie = escape(name) + \"=\" + escape(value) + (expires? \"; domain=\" + expires.toGMTString()  : \"\") + (domain ? \"; domain=\" + domain : \"\") + (path ? \"; path=\" + path : \"\") + (secure ? \"; secure\" : \"\");\r\n\t\t  }\t\r\n    });\r\n\r\n\r\n    return caches.cookie = cookie;\r\n\r\n});\r\n\r\n"]}