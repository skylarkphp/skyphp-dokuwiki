{"version":3,"sources":["local-file-system.js"],"names":["define","mixin","Emitter","Deferred","caches","requestFileSystem","window","webkitRequestFileSystem","resolveLocalFileSystemURL","webkitResolveLocalFileSystemURL","MozBlobBuilder","WebKitBlobBuilder","BlobBuilder","errorHandler","e","msg","code","FileError","QUOTA_EXCEEDED_ERR","NOT_FOUND_ERR","SECURITY_ERR","INVALID_MODIFICATION_ERR","INVALID_STATE_ERR","LocalFileSystem","inherit","_fs","_isPersisted","_cwd","init","fs","this","root","readfileAsArrayBuffer","path","callback","errback","getFile","fileEntry","file","reader","FileReader","onloadend","result","readAsArrayBuffer","readfileAsDataURL","readAsDataURL","readfileAsText","readAsText","writefile","contents","self","folders","split","slice","length","mkdir","join","create","createWriter","fileWriter","truncated","onwriteend","truncate","position","onerror","blob","Blob","type","write","rmfile","remove","readdir","getDirectory","dirEntry","dirReader","createReader","entries","readEntries","results","concat","Array","prototype","call","map","entry","name","isDirectory","folderParts","createDir","rootDir","exclusive","Error","rmdir","removeRecursively","copy","src","dest","cwd","copyTo","move","moveTo","chdir","onchdir","fullPath","importFromHost","files","deferred","i","f","promise","exportToHost","isSupported","request","size","isPersisted","typ","PERSISTENT","TEMPORARY","d","resolve","reject","requestLocalFileSystem"],"mappings":"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","file":"../local-file-system.js","sourcesContent":["define([\r\n    \"skylark-langx-objects/mixin\",\r\n    \"skylark-langx-events/Emitter\",\r\n    \"skylark-langx-async/Deferred\",\r\n    \"./caches\"\r\n], function(mixin,Emitter,Deferred,caches) {\r\n\t\"use strict\";\r\n\r\n\tvar requestFileSystem =  window.requestFileSystem || window.webkitRequestFileSystem,\r\n\t\tresolveLocalFileSystemURL = window.resolveLocalFileSystemURL || window.webkitResolveLocalFileSystemURL,\r\n     \tBlobBuilder = window.MozBlobBuilder || window.WebKitBlobBuilder || window.BlobBuilder;\r\n\r\n\r\n\tfunction errorHandler(e) {\r\n\t  var msg = '';\r\n\r\n\t  switch (e.code) {\r\n\t    case FileError.QUOTA_EXCEEDED_ERR:\r\n\t      msg = 'QUOTA_EXCEEDED_ERR';\r\n\t      break;\r\n\t    case FileError.NOT_FOUND_ERR:\r\n\t      msg = 'NOT_FOUND_ERR';\r\n\t      break;\r\n\t    case FileError.SECURITY_ERR:\r\n\t      msg = 'SECURITY_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_MODIFICATION_ERR:\r\n\t      msg = 'INVALID_MODIFICATION_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_STATE_ERR:\r\n\t      msg = 'INVALID_STATE_ERR';\r\n\t      break;\r\n\t    default:\r\n\t      msg = 'Unknown Error';\r\n\t      break;\r\n\t  };\r\n\r\n\t  return msg;\r\n\t}\r\n\t\r\n\tvar LocalFileSystem = Emitter.inherit({\r\n\t\t_fs : null,\r\n\t\t_isPersisted : true,\r\n\t\t_cwd : null,\r\n\r\n\t\tinit:\tfunction (fs) {\r\n\t\t\tthis._fs = fs;\r\n\t\t\tthis._cwd = fs.root;\r\n\t\t},\r\n\t\t\t\r\n\r\n\t\treadfileAsArrayBuffer :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsArrayBuffer(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsDataURL :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsDataURL(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsText :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsText(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\twritefile : function (path, contents, callback,errback) {\r\n\t\t    var self = this,\r\n\t\t    \tfolders = path.split('/');\r\n\t\t    folders = folders.slice(0, folders.length - 1);\r\n\r\n\t\t    this.mkdir(folders.join('/'),function(){\r\n\t\t\t    self._cwd.getFile(path, {create: true}, function (fileEntry) {\r\n\t\t\t      fileEntry.createWriter(function (fileWriter) {\r\n\t\t\t        var truncated = false;\r\n\t\t\t        fileWriter.onwriteend = function () {\r\n\t\t\t          if (!truncated) {\r\n\t\t\t            truncated = true;\r\n\t\t\t            this.truncate(this.position);\r\n\t\t\t            return;\r\n\t\t\t          }\r\n\t\t\t          callback && callback();\r\n\t\t\t        };\r\n\t\t\t        fileWriter.onerror = errback;\r\n\t\t\t        // TODO: find a way to write as binary too\r\n\t\t\t        var blob = contents;\r\n\t\t\t        if (!blob instanceof Blob) {\r\n\t\t\t        \tblob = new Blob([contents], {type: 'text/plain'});\r\n\t\t\t        } \r\n\t\t\t        fileWriter.write(blob);\r\n\t\t\t      }, errback);\r\n\t\t\t    }, errback);\r\n\r\n\t\t    });\r\n\t\t},\r\n\r\n\t\trmfile : function (path, callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.remove(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treaddir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      var dirReader = dirEntry.createReader();\r\n\t\t      var entries = [];\r\n\t\t      readEntries();\r\n\t\t      function readEntries() {\r\n\t\t        dirReader.readEntries(function (results) {\r\n\t\t          if (!results.length) {\r\n\t\t            callback(null, entries);\r\n\t\t          }\r\n\t\t          else {\r\n\t\t            entries = entries.concat(\r\n\t\t            \tArray.prototype.slice.call(results).map(\r\n\t\t            \t\tfunction (entry) {\r\n\t\t              \t\t\treturn entry.name + (entry.isDirectory ? \"/\" : \"\");\r\n\t\t            \t\t}\r\n\t\t            \t)\r\n\t\t            );\r\n\t\t            readEntries();\r\n\t\t          }\r\n\t\t        }, errback);\r\n\t\t      }\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\tmkdir : function (path, callback,errback) {\r\n\t\t    var folderParts = path.split('/');\r\n\r\n\t\t    var createDir = function(rootDir, folders) {\r\n\t\t      // Throw out './' or '/' and move on. Prevents: '/foo/.//bar'.\r\n\t\t      if (folders[0] == '.' || folders[0] == '') {\r\n\t\t        folders = folders.slice(1);\r\n\t\t      }\r\n\r\n\t\t      if (folders.length ==0) {\r\n\t\t      \tcallback(rootDir);\r\n\t\t      \treturn;\r\n\t\t      }\r\n\t\t      rootDir.getDirectory(folders[0], {create: true, exclusive: false},\r\n\t\t        function (dirEntry) {\r\n\t\t          if (dirEntry.isDirectory) { // TODO: check shouldn't be necessary.\r\n\t\t            // Recursively add the new subfolder if we have more to create and\r\n\t\t            // There was more than one folder to create.\r\n\t\t            if (folders.length && folderParts.length != 1) {\r\n\t\t              createDir(dirEntry, folders.slice(1));\r\n\t\t            } else {\r\n\t\t              // Return the last directory that was created.\r\n\t\t              if (callback) callback(dirEntry);\r\n\t\t            }\r\n\t\t          } else {\r\n\t\t            var e = new Error(path + ' is not a directory');\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t          }\r\n\t\t        },\r\n\t\t        function(e) {\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t        }\r\n\t\t      );\r\n\t\t    };\r\n\r\n\t\t    createDir(this._cwd, folderParts);\r\n\r\n\t\t},\r\n\r\n\t\trmdir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      dirEntry.removeRecursively(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t  },\r\n\r\n\t\tcopy : function (src, dest, callback) {\r\n\t\t    // TODO: make sure works for cases where dest includes and excludes file name.\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.copyTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tmove : function(src, dest, callback) {\r\n\t\t    // TODO: handle more cases like file renames and moving/renaming directories\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.moveTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tchdir : function (path, callback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      cwd = dirEntry;\r\n\t\t      if (fs.onchdir) {\r\n\t\t        fs.onchdir(cwd.fullPath);\r\n\t\t      }\r\n\t\t      callback();\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\timportFromHost : function(files) {\r\n\t\t    // Duplicate each file the user selected to the app's fs.\r\n\t\t    var deferred = new Deferred();\r\n\t\t    for (var i = 0, file; file = files[i]; ++i) {\r\n\t\t        (function(f) {\r\n\t\t\t        cwd.getFile(file.name, {create: true, exclusive: true}, function(fileEntry) {\r\n\t\t\t          fileEntry.createWriter(function(fileWriter) {\r\n\t\t\t            fileWriter.write(f); // Note: write() can take a File or Blob object.\r\n\t\t\t          }, errorHandler);\r\n\t\t\t        }, errorHandler);\r\n\t\t     \t})(file);\r\n \t   \t \t}\r\n  \t\t    return deferred.promise;\r\n\t\t  },\r\n\r\n\t\t  exportToHost : function() {\r\n\r\n\t\t  }\r\n\t\r\n\t});\r\n\t\r\n\r\n\r\n    function localfs() {\r\n        return localfs;\r\n    }\r\n\r\n    mixin(LocalFileSystem, {\r\n        isSupported : function() {\r\n            return !!requestFileSystem;\r\n        },\r\n        request : function(size,isPersisted){\r\n        \tsize = size || 1024 * 1024 * 10;\r\n        \tvar typ = isPersisted ? PERSISTENT : TEMPORARY,\r\n        \t\td = new Deferred();\r\n            requestFileSystem(typ, size, function(_fs) {\r\n                var fs = new LocalFileSystem(_fs,!!isPersisted);\r\n                d.resolve(fs);\r\n            }, function(e) {\r\n            \td.reject(e);\r\n            });\r\n\r\n            return d.promise;\r\n        }\r\n    });\r\n    \r\n    caches.requestLocalFileSystem = LocalFileSystem.request;\r\n\r\n\treturn caches.LocalFileSystem = LocalFileSystem;\r\n});"]}