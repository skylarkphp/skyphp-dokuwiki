{"version":3,"sources":["storages/local.js"],"names":["define","mixin","strings","caches","storage","window","e","localStorage","isSupported","set","key","val","undefined","this","remove","setItem","serializeValue","get","defaultVal","deserializeValue","getItem","removeItem","clear","list","vaules","i","length","values","storages","local"],"mappings":";;;;;;;AAAAA,QACI,8BACA,wBACA,aACD,SAASC,EAAMC,EAAQC,GACtB,aAGA,IAAIC,EAAW,KAEf,IACIA,EAAUC,OAAqB,aACjC,MAAOC,IAIT,SAASC,IACL,OAAOA,EAuCX,OApCAN,EAAMM,GACFC,YAAc,WACV,QAASJ,GAGbK,IAAM,SAASC,EAAKC,GAChB,YAAYC,IAARD,EACOE,KAAKC,OAAOJ,IAEvBN,EAAQW,QAAQL,EAAKR,EAAQc,eAAeL,IACrCA,IAGXM,IAAM,SAASP,EAAKQ,GAChB,IAAIP,EAAMT,EAAQiB,iBAAiBf,EAAQgB,QAAQV,IACnD,YAAgBE,IAARD,EAAoBO,EAAaP,GAG7CG,OAAS,SAASJ,GACdN,EAAQiB,WAAWX,IAGvBY,MAAQ,WACJlB,EAAQkB,SAGZC,KAAO,WAEH,IADA,IAAIC,KACKC,EAAE,EAAGA,EAAErB,EAAQsB,OAAQD,IAC5BD,EAAOd,KAAON,EAAQM,IAAIe,GAG9B,OAAOE,UAIPxB,EAAOyB,SAASC,MAAQtB","file":"../../storages/local.js","sourcesContent":["define([\r\n    \"skylark-langx-objects/mixin\",\r\n    \"skylark-langx-strings\",\r\n    \"../caches\"\r\n], function(mixin,strings,caches) {\r\n    \"use strict\";\r\n\r\n\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"localStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function localStorage() {\r\n        return localStorage;\r\n    }\r\n\r\n    mixin(localStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, strings.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = strings.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        list : function() {\r\n            var vaules = {}\r\n            for (var i=0; i<storage.length; i++) {\r\n                vaules[key] = storage.key(i)\r\n            }\r\n\r\n            return values;\r\n        }\r\n    });\r\n\r\n    return  caches.storages.local = localStorage;\r\n\r\n});\r\n\r\n"]}