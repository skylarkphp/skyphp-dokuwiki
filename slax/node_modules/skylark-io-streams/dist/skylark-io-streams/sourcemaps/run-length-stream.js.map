{"version":3,"sources":["run-length-stream.js"],"names":["define","chars","streams","DecodeStream","RunLengthStream","inherit","klassName","_construct","str","maybeLength","this","dict","prototype","call","readBlock","repeatHeader","getBytes","length","eof","buffer","bufferLength","n","ensureBuffer","source","set","b","i"],"mappings":";;;;;;;AAAAA,QACI,sBACA,YACA,mBACD,SAASC,EAAOC,EAASC,GAExB,IAAIC,EAAkBD,EAAaE,SAC/BC,UAAY,kBAEZC,WAAa,SAAUC,EAAKC,GACxBC,KAAKF,IAAMA,EACXE,KAAKC,KAAOH,EAAIG,KAChBR,EAAaS,UAAUL,WAAWM,KAAKH,KAAMD,IAGjDK,UAAY,WACR,IAAIC,EAAeL,KAAKF,IAAIQ,SAAS,GACrC,IAAKD,GAAgBA,EAAaE,OAAS,GAAyB,MAApBF,EAAa,GACzDL,KAAKQ,KAAM,MADf,CAIA,IAAIC,EACAC,EAAeV,KAAKU,aACpBC,EAAIN,EAAa,GACrB,GAAIM,EAAI,KAGJ,IAFAF,EAAST,KAAKY,aAAaF,EAAeC,EAAI,IACvCD,KAAkBL,EAAa,GAClCM,EAAI,EAAG,CACP,IAAIE,EAASb,KAAKF,IAAIQ,SAASK,GAC/BF,EAAOK,IAAID,EAAQH,GACnBA,GAAgBC,OAEjB,CACHA,EAAI,IAAMA,EACV,IAAII,EAAIV,EAAa,GACrBI,EAAST,KAAKY,aAAaF,EAAeC,EAAI,GAC9C,IAAK,IAAIK,EAAI,EAAGA,EAAIL,EAAGK,IACnBP,EAAOC,KAAkBK,EAGjCf,KAAKU,aAAeA,MAI5B,OAAOlB,EAAQE,gBAAkBA","file":"../run-length-stream.js","sourcesContent":["define([\r\n    \"skylark-langx-chars\",\r\n    \"./streams\",\r\n    \"./decode-stream\"\r\n], function(chars, streams, DecodeStream) {\r\n\r\n    var RunLengthStream = DecodeStream.inherit({\r\n        klassName : \"RunLengthStream\",\r\n\r\n        _construct : function (str, maybeLength) {\r\n            this.str = str;\r\n            this.dict = str.dict;\r\n            DecodeStream.prototype._construct.call(this, maybeLength);       \r\n        },\r\n\r\n        readBlock : function RunLengthStream_readBlock() {\r\n            var repeatHeader = this.str.getBytes(2);\r\n            if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\r\n                this.eof = true;\r\n                return;\r\n            }\r\n            var buffer;\r\n            var bufferLength = this.bufferLength;\r\n            var n = repeatHeader[0];\r\n            if (n < 128) {\r\n                buffer = this.ensureBuffer(bufferLength + n + 1);\r\n                buffer[bufferLength++] = repeatHeader[1];\r\n                if (n > 0) {\r\n                    var source = this.str.getBytes(n);\r\n                    buffer.set(source, bufferLength);\r\n                    bufferLength += n;\r\n                }\r\n            } else {\r\n                n = 257 - n;\r\n                var b = repeatHeader[1];\r\n                buffer = this.ensureBuffer(bufferLength + n + 1);\r\n                for (var i = 0; i < n; i++) {\r\n                    buffer[bufferLength++] = b;\r\n                }\r\n            }\r\n            this.bufferLength = bufferLength;\r\n        }\r\n    });\r\n\r\n    return streams.RunLengthStream = RunLengthStream;\r\n\r\n});\r\n"]}