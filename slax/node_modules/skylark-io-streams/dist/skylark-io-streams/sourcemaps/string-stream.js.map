{"version":3,"sources":["string-stream.js"],"names":["define","streams","Stream","StringStream","inherit","klassName","_construct","str","length","bytes","Uint8Array","n","charCodeAt","prototype","call","this"],"mappings":";;;;;;;AAAAA,QACI,YACA,aACD,SAASC,EAASC,GAEjB,IAAIC,EAAeD,EAAOE,SACtBC,UAAY,eAEZC,WAAa,SAASC,GAKlB,IAFA,IAAIC,EAASD,EAAIC,OACbC,EAAQ,IAAIC,WAAWF,GAClBG,EAAI,EAAGA,EAAIH,IAAUG,EAC1BF,EAAME,GAAKJ,EAAIK,WAAWD,GAE9BT,EAAOW,UAAUP,WAAWQ,KAAKC,KAAKN,MAK9C,OAAOR,EAAQE,aAAeA","file":"../string-stream.js","sourcesContent":["define([\r\n    \"./streams\",\r\n    \"./_stream\"\r\n], function(streams, Stream) {\r\n\r\n    var StringStream = Stream.inherit({\r\n        klassName : \"StringStream\",\r\n\r\n        _construct : function(str) {\r\n            //const bytes = util.stringToBytes(str);\r\n            //TODO: chartCodeAt() >255\r\n            var length = str.length;\r\n            var bytes = new Uint8Array(length);\r\n            for (var n = 0; n < length; ++n)\r\n                bytes[n] = str.charCodeAt(n);\r\n\r\n            Stream.prototype._construct.call(this,bytes);          \r\n        }\r\n    });\r\n\r\n\r\n    return streams.StringStream = StringStream;\r\n\r\n});\r\n"]}