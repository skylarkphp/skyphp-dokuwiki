{"version":3,"sources":["plugins/size.js"],"names":["define","langx","$","effects","options","done","baseline","factor","temp","element","this","cProps","vProps","hProps","mode","restore","scale","origin","position","css","pos","original","scaledDimensions","from","to","createPlaceholder","y","height","x","width","setTransition","getBaseline","top","outerHeight","left","outerWidth","concat","find","each","child","childOriginal","childFrom","childTo","saveStyle","animate","duration","easing","restoreStyle","queue","complete","offset","opacity"],"mappings":"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","file":"../../plugins/size.js","sourcesContent":["define( [\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-domx-query\",\r\n\t\"../effects\"\r\n], function(langx,$,effects) {\r\nreturn effects.define( \"size\", function( options, done ) {\r\n\r\n\t// Create element\r\n\tvar baseline, factor, temp,\r\n\t\telement = $( this ),\r\n\r\n\t\t// Copy for children\r\n\t\tcProps = [ \"fontSize\" ],\r\n\t\tvProps = [ \"borderTopWidth\", \"borderBottomWidth\", \"paddingTop\", \"paddingBottom\" ],\r\n\t\thProps = [ \"borderLeftWidth\", \"borderRightWidth\", \"paddingLeft\", \"paddingRight\" ],\r\n\r\n\t\t// Set options\r\n\t\tmode = options.mode,\r\n\t\trestore = mode !== \"effect\",\r\n\t\tscale = options.scale || \"both\",\r\n\t\torigin = options.origin || [ \"middle\", \"center\" ],\r\n\t\tposition = element.css( \"position\" ),\r\n\t\tpos = element.position(),\r\n\t\toriginal = effects.scaledDimensions( element ),\r\n\t\tfrom = options.from || original,\r\n\t\tto = options.to || effects.scaledDimensions( element, 0 );\r\n\r\n\teffects.createPlaceholder( element );\r\n\r\n\tif ( mode === \"show\" ) {\r\n\t\ttemp = from;\r\n\t\tfrom = to;\r\n\t\tto = temp;\r\n\t}\r\n\r\n\t// Set scaling factor\r\n\tfactor = {\r\n\t\tfrom: {\r\n\t\t\ty: from.height / original.height,\r\n\t\t\tx: from.width / original.width\r\n\t\t},\r\n\t\tto: {\r\n\t\t\ty: to.height / original.height,\r\n\t\t\tx: to.width / original.width\r\n\t\t}\r\n\t};\r\n\r\n\t// Scale the css box\r\n\tif ( scale === \"box\" || scale === \"both\" ) {\r\n\r\n\t\t// Vertical props scaling\r\n\t\tif ( factor.from.y !== factor.to.y ) {\r\n\t\t\tfrom = effects.setTransition( element, vProps, factor.from.y, from );\r\n\t\t\tto = effects.setTransition( element, vProps, factor.to.y, to );\r\n\t\t}\r\n\r\n\t\t// Horizontal props scaling\r\n\t\tif ( factor.from.x !== factor.to.x ) {\r\n\t\t\tfrom = effects.setTransition( element, hProps, factor.from.x, from );\r\n\t\t\tto = effects.setTransition( element, hProps, factor.to.x, to );\r\n\t\t}\r\n\t}\r\n\r\n\t// Scale the content\r\n\tif ( scale === \"content\" || scale === \"both\" ) {\r\n\r\n\t\t// Vertical props scaling\r\n\t\tif ( factor.from.y !== factor.to.y ) {\r\n\t\t\tfrom = effects.setTransition( element, cProps, factor.from.y, from );\r\n\t\t\tto = effects.setTransition( element, cProps, factor.to.y, to );\r\n\t\t}\r\n\t}\r\n\r\n\t// Adjust the position properties based on the provided origin points\r\n\tif ( origin ) {\r\n\t\tbaseline = effects.getBaseline( origin, original );\r\n\t\tfrom.top = ( original.outerHeight - from.outerHeight ) * baseline.y + pos.top;\r\n\t\tfrom.left = ( original.outerWidth - from.outerWidth ) * baseline.x + pos.left;\r\n\t\tto.top = ( original.outerHeight - to.outerHeight ) * baseline.y + pos.top;\r\n\t\tto.left = ( original.outerWidth - to.outerWidth ) * baseline.x + pos.left;\r\n\t}\r\n\telement.css( from );\r\n\r\n\t// Animate the children if desired\r\n\tif ( scale === \"content\" || scale === \"both\" ) {\r\n\r\n\t\tvProps = vProps.concat( [ \"marginTop\", \"marginBottom\" ] ).concat( cProps );\r\n\t\thProps = hProps.concat( [ \"marginLeft\", \"marginRight\" ] );\r\n\r\n\t\t// Only animate children with width attributes specified\r\n\t\t// TODO: is this right? should we include anything with css width specified as well\r\n\t\telement.find( \"*[width]\" ).each( function() {\r\n\t\t\tvar child = $( this ),\r\n\t\t\t\tchildOriginal = effects.scaledDimensions( child ),\r\n\t\t\t\tchildFrom = {\r\n\t\t\t\t\theight: childOriginal.height * factor.from.y,\r\n\t\t\t\t\twidth: childOriginal.width * factor.from.x,\r\n\t\t\t\t\touterHeight: childOriginal.outerHeight * factor.from.y,\r\n\t\t\t\t\touterWidth: childOriginal.outerWidth * factor.from.x\r\n\t\t\t\t},\r\n\t\t\t\tchildTo = {\r\n\t\t\t\t\theight: childOriginal.height * factor.to.y,\r\n\t\t\t\t\twidth: childOriginal.width * factor.to.x,\r\n\t\t\t\t\touterHeight: childOriginal.height * factor.to.y,\r\n\t\t\t\t\touterWidth: childOriginal.width * factor.to.x\r\n\t\t\t\t};\r\n\r\n\t\t\t// Vertical props scaling\r\n\t\t\tif ( factor.from.y !== factor.to.y ) {\r\n\t\t\t\tchildFrom = effects.setTransition( child, vProps, factor.from.y, childFrom );\r\n\t\t\t\tchildTo = effects.setTransition( child, vProps, factor.to.y, childTo );\r\n\t\t\t}\r\n\r\n\t\t\t// Horizontal props scaling\r\n\t\t\tif ( factor.from.x !== factor.to.x ) {\r\n\t\t\t\tchildFrom = effects.setTransition( child, hProps, factor.from.x, childFrom );\r\n\t\t\t\tchildTo = effects.setTransition( child, hProps, factor.to.x, childTo );\r\n\t\t\t}\r\n\r\n\t\t\tif ( restore ) {\r\n\t\t\t\teffects.saveStyle( child );\r\n\t\t\t}\r\n\r\n\t\t\t// Animate children\r\n\t\t\tchild.css( childFrom );\r\n\t\t\tchild.animate( childTo, options.duration, options.easing, function() {\r\n\r\n\t\t\t\t// Restore children\r\n\t\t\t\tif ( restore ) {\r\n\t\t\t\t\teffects.restoreStyle( child );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t} );\r\n\t}\r\n\r\n\t// Animate\r\n\telement.animate( to, {\r\n\t\tqueue: false,\r\n\t\tduration: options.duration,\r\n\t\teasing: options.easing,\r\n\t\tcomplete: function() {\r\n\r\n\t\t\tvar offset = element.offset();\r\n\r\n\t\t\tif ( to.opacity === 0 ) {\r\n\t\t\t\telement.css( \"opacity\", from.opacity );\r\n\t\t\t}\r\n\r\n\t\t\tif ( !restore ) {\r\n\t\t\t\telement\r\n\t\t\t\t\t.css( \"position\", position === \"static\" ? \"relative\" : position )\r\n\t\t\t\t\t.offset( offset );\r\n\r\n\t\t\t\t// Need to save style here so that automatic style restoration\r\n\t\t\t\t// doesn't restore to the original styles from before the animation.\r\n\t\t\t\teffects.saveStyle( element );\r\n\t\t\t}\r\n\r\n\t\t\tdone();\r\n\t\t}\r\n\t} );\r\n\r\n} );\r\n\r\n});\r\n"]}