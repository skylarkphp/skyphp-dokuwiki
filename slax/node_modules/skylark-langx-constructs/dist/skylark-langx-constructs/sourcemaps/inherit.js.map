{"version":3,"sources":["inherit.js"],"names":["define","constructs","inherit","ctor","base","TypeError","prototype","Object","create","constructor","value","writable","configurable","setPrototypeOf"],"mappings":";;;;;;;AAAAA,QACC,gBACC,SAASC,GA0BP,OAAOA,EAAWC,QAxBlB,SAAiBC,EAAKC,GAMrB,GAAqB,mBAATA,GAAwBA,EAClC,MAAM,IAAIC,UAAU,sDAGtBF,EAAKG,UAAYC,OAAOC,OAAOJ,GAAQA,EAAKE,WAC1CG,aACEC,MAAOP,EACPQ,UAAU,EACVC,cAAc,KAIdR,GAEHG,OAAOM,eAAeV,EAAMC","file":"../inherit.js","sourcesContent":["define([\r\n\t\"./constructs\"\r\n],function(constructs){\r\n\r\n    function inherit(ctor,base) {\r\n        ///var f = function() {};\r\n        ///f.prototype = base.prototype;\r\n        ///\r\n        ///ctor.prototype = new f();\r\n\r\n\t    if ((typeof base !== \"function\") && base) {\r\n\t      throw new TypeError(\"Super expression must either be null or a function\");\r\n\t    }\r\n\r\n\t    ctor.prototype = Object.create(base && base.prototype, {\r\n\t      constructor: {\r\n\t        value: ctor,\r\n\t        writable: true,\r\n\t        configurable: true\r\n\t      }\r\n\t    });\r\n\r\n\t    if (base) {\r\n\t    \t//tor.__proto__ = base;\r\n\t    \tObject.setPrototypeOf(ctor, base);\r\n\t    } \r\n    }\r\n\r\n    return constructs.inherit = inherit\r\n});"]}