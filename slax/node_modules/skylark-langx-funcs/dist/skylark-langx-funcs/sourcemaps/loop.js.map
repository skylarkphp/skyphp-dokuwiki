{"version":3,"sources":["loop.js"],"names":["define","funcs","AnimationTimer","callback","this","running","id","prototype","start","self","run","requestAnimationFrame","stop","cancelAnimationFrame","loop","fn"],"mappings":";;;;;;;AAAAA,QACC,WACC,SAASC,GAYV,SAASC,EAAeC,GAEvBC,KAAKD,SAAWA,EAEhBC,KAAKC,SAAU,EACfD,KAAKE,IAAM,EA8CT,OAtCHJ,EAAeK,UAAUC,MAAQ,WAEhC,IAAGJ,KAAKC,QAAR,CAKAD,KAAKC,SAAU,EAEf,IAAII,EAAOL,MACX,SAASM,IAERD,EAAKN,WAEFM,EAAKJ,UAEPI,EAAKH,GAAKK,sBAAsBD,IAIlCA,KAQDR,EAAeK,UAAUK,KAAO,WAE/BR,KAAKC,SAAU,EACfQ,qBAAqBT,KAAKE,KAOjBL,EAAMa,KAJhB,SAAcC,GACb,OAAO,IAAIb,EAAea","file":"../loop.js","sourcesContent":["define([\r\n\t\"./funcs\"\r\n],function(funcs){\r\n\r\n\t/**\r\n\t * Animation timer is a special type of timer that uses the requestAnimationFrame method.\r\n\t *\r\n\t * This timer calls the method with the same rate as the screen refesh rate.\r\n\t * \r\n\t * Loop time can be changed dinamically.\r\n\t *\r\n\t * @class AnimationTimer\r\n\t * @param {Function} callback Timer callback function.\r\n\t */\r\n\tfunction AnimationTimer(callback)\r\n\t{\r\n\t\tthis.callback = callback;\r\n\r\n\t\tthis.running = false;\r\n\t\tthis.id = -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Start timer, is the timer is already running dosen't do anything.\r\n\t * \r\n\t * @method start\r\n\t */\r\n\tAnimationTimer.prototype.start = function()\r\n\t{\r\n\t\tif(this.running)\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.running = true;\r\n\r\n\t\tvar self = this;\r\n\t\tfunction run()\r\n\t\t{\r\n\t\t\tself.callback();\r\n\r\n\t\t\tif(self.running)\r\n\t\t\t{\r\n\t\t\t\tself.id = requestAnimationFrame(run);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trun();\r\n\t};\r\n\r\n\t/**\r\n\t * Stop animation timer.\r\n\t * \r\n\t * @method stop\r\n\t */\r\n\tAnimationTimer.prototype.stop = function()\r\n\t{\r\n\t\tthis.running = false;\r\n\t\tcancelAnimationFrame(this.id);\r\n\t};\r\n\r\n\tfunction loop(fn) {\r\n\t\treturn new AnimationTimer(fn);\r\n    }\r\n\r\n    return funcs.loop = loop;\r\n})"]}