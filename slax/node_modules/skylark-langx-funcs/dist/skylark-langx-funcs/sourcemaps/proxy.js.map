{"version":3,"sources":["proxy.js"],"names":["define","types","funcs","slice","Array","prototype","isFunction","isString","bind","proxy","fn","context","args","arguments","call","apply","concat","unshift","TypeError"],"mappings":";;;;;;;AAAAA,QACE,sBACD,WACC,SAASC,EAAMC,GACb,IAAIC,EAAQC,MAAMC,UAAUF,MACxBG,EAAaL,EAAMK,WACnBC,EAAWN,EAAMM,SAqBrB,OAAOL,EAAMM,KAAON,EAAMO,MAnB1B,SAASA,EAAMC,EAAIC,GACf,IAAIC,EAAQ,KAAKC,WAAcV,EAAMW,KAAKD,UAAW,GACrD,GAAIP,EAAWI,GAIX,OAHc,WACV,OAAOA,EAAGK,MAAMJ,EAASC,EAAOA,EAAKI,OAAOb,EAAMW,KAAKD,YAAcA,YAGtE,GAAIN,EAASI,GAChB,OAAIC,GACAA,EAAKK,QAAQP,EAAGC,GAAUD,GACnBD,EAAMM,MAAM,KAAMH,IAElBH,EAAMC,EAAGC,GAAUD,GAG9B,MAAM,IAAIQ,UAAU","file":"../proxy.js","sourcesContent":["define([\r\n  \"skylark-langx-types\",\r\n\t\"./funcs\"\r\n],function(types,funcs){\r\n    var slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    return funcs.bind = funcs.proxy = proxy;\r\n\r\n})"]}