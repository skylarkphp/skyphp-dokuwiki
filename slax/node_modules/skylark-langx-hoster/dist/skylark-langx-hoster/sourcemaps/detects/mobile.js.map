{"version":3,"sources":["detects/mobile.js"],"names":["define","hoster","appleIphone","appleIpod","appleTablet","appleUniversal","androidPhone","androidTablet","amazonPhone","amazonTablet","windowsPhone","windowsTablet","otherBlackBerry","otherBlackBerry10","otherOpera","otherChrome","otherFirefox","isAppleTabletOnIos13","navigator","platform","maxTouchPoints","MSStream","detects","mobile","param","nav","userAgent","tmp","split","match","regex","test","createMatch","result","apple","phone","ipod","tablet","universal","device","amazon","android","windows","other","blackberry","blackberry10","opera","firefox","chrome","any"],"mappings":";;;;;;;AAAAA,QACI,aACF,SAASC,GAGP,IAAIC,EAAc,UACdC,EAAY,QACZC,EAAc,QACdC,EAAiB,8BACjBC,EAAe,2BACfC,EAAgB,WAChBC,EAAc,qCACdC,EAAe,QACfC,EAAe,iBACfC,EAAgB,wBAChBC,EAAkB,cAClBC,EAAoB,QACpBC,EAAa,cACbC,EAAc,gCACdC,EAAe,yBACfC,EAAuB,SAAUC,GACjC,YAA6B,IAAdA,GACY,aAAvBA,EAAUC,UAC0B,iBAA7BD,EAAUE,gBACjBF,EAAUE,eAAiB,GACP,oBAAbC,UA0Gf,OAAOpB,EAAOqB,QAAQC,OApGtB,SAAsBC,GAClB,IAAIC,GACAC,UAAW,GACXP,SAAU,GACVC,eAAgB,GAEfI,GAA8B,oBAAdN,UAOK,iBAAVM,EACZC,EAAIC,UAAYF,EAEXA,GAASA,EAAME,YACpBD,GACIC,UAAWF,EAAME,UACjBP,SAAUK,EAAML,SAChBC,eAAgBI,EAAMJ,gBAAkB,IAb5CK,GACIC,UAAWR,UAAUQ,UACrBP,SAAUD,UAAUC,SACpBC,eAAgBF,UAAUE,gBAAkB,GAapD,IAAIM,EAAYD,EAAIC,UAChBC,EAAMD,EAAUE,MAAM,cACJ,IAAXD,EAAI,KACXD,EAAYC,EAAI,SAGE,KADtBA,EAAMD,EAAUE,MAAM,YACP,KACXF,EAAYC,EAAI,IAEpB,IAAIE,EApCR,SAAqBH,GACjB,OAAO,SAAUI,GAAS,OAAOA,EAAMC,KAAKL,IAmChCM,CAAYN,GACpBO,GACAC,OACIC,MAAON,EAAM3B,KAAiB2B,EAAMnB,GACpC0B,KAAMP,EAAM1B,GACZkC,QAASR,EAAM3B,KACV2B,EAAMzB,IAAgBa,EAAqBQ,MAC3CI,EAAMnB,GACX4B,UAAWT,EAAMxB,GACjBkC,QAASV,EAAM3B,IACX2B,EAAM1B,IACN0B,EAAMzB,IACNyB,EAAMxB,IACNY,EAAqBQ,MACpBI,EAAMnB,IAEf8B,QACIL,MAAON,EAAMrB,GACb6B,QAASR,EAAMrB,IAAgBqB,EAAMpB,GACrC8B,OAAQV,EAAMrB,IAAgBqB,EAAMpB,IAExCgC,SACIN,OAASN,EAAMnB,IAAiBmB,EAAMrB,KAChCqB,EAAMnB,IAAiBmB,EAAMvB,GACnC+B,QAASR,EAAMnB,KACVmB,EAAMrB,KACNqB,EAAMvB,KACNuB,EAAMpB,IAAiBoB,EAAMtB,IAClCgC,QAAUV,EAAMnB,KACXmB,EAAMrB,IACHqB,EAAMpB,IACNoB,EAAMvB,IACNuB,EAAMtB,KACVsB,EAAM,gBAEda,SACIP,MAAON,EAAMnB,GACb2B,OAAQR,EAAMlB,GACd4B,OAAQV,EAAMnB,IAAiBmB,EAAMlB,IAEzCgC,OACIC,WAAYf,EAAMjB,GAClBiC,aAAchB,EAAMhB,GACpBiC,MAAOjB,EAAMf,GACbiC,QAASlB,EAAMb,GACfgC,OAAQnB,EAAMd,GACdwB,OAAQV,EAAMjB,IACViB,EAAMhB,IACNgB,EAAMf,IACNe,EAAMb,IACNa,EAAMd,IAEdkC,KAAK,EACLd,OAAO,EACPE,QAAQ,GAWZ,OATAJ,EAAOgB,IACHhB,EAAOC,MAAMK,QACTN,EAAOQ,QAAQF,QACfN,EAAOS,QAAQH,QACfN,EAAOU,MAAMJ,OACrBN,EAAOE,MACHF,EAAOC,MAAMC,OAASF,EAAOQ,QAAQN,OAASF,EAAOS,QAAQP,MACjEF,EAAOI,OACHJ,EAAOC,MAAMG,QAAUJ,EAAOQ,QAAQJ,QAAUJ,EAAOS,QAAQL,OAC5DJ","file":"../../detects/mobile.js","sourcesContent":["define([\r\n    \"../hoster\"\r\n],function(hoster){\r\n    //refer : https://github.com/kaimallea/isMobile\r\n\r\n    var appleIphone = /iPhone/i;\r\n    var appleIpod = /iPod/i;\r\n    var appleTablet = /iPad/i;\r\n    var appleUniversal = /\\biOS-universal(?:.+)Mac\\b/i;\r\n    var androidPhone = /\\bAndroid(?:.+)Mobile\\b/i;\r\n    var androidTablet = /Android/i;\r\n    var amazonPhone = /(?:SD4930UR|\\bSilk(?:.+)Mobile\\b)/i;\r\n    var amazonTablet = /Silk/i;\r\n    var windowsPhone = /Windows Phone/i;\r\n    var windowsTablet = /\\bWindows(?:.+)ARM\\b/i;\r\n    var otherBlackBerry = /BlackBerry/i;\r\n    var otherBlackBerry10 = /BB10/i;\r\n    var otherOpera = /Opera Mini/i;\r\n    var otherChrome = /\\b(CriOS|Chrome)(?:.+)Mobile/i;\r\n    var otherFirefox = /Mobile(?:.+)Firefox\\b/i;\r\n    var isAppleTabletOnIos13 = function (navigator) {\r\n        return (typeof navigator !== 'undefined' &&\r\n            navigator.platform === 'MacIntel' &&\r\n            typeof navigator.maxTouchPoints === 'number' &&\r\n            navigator.maxTouchPoints > 1 &&\r\n            typeof MSStream === 'undefined');\r\n    };\r\n    function createMatch(userAgent) {\r\n        return function (regex) { return regex.test(userAgent); };\r\n    }\r\n    \r\n    function detectMobile(param) {\r\n        var nav = {\r\n            userAgent: '',\r\n            platform: '',\r\n            maxTouchPoints: 0\r\n        };\r\n        if (!param && typeof navigator !== 'undefined') {\r\n            nav = {\r\n                userAgent: navigator.userAgent,\r\n                platform: navigator.platform,\r\n                maxTouchPoints: navigator.maxTouchPoints || 0\r\n            };\r\n        }\r\n        else if (typeof param === 'string') {\r\n            nav.userAgent = param;\r\n        }\r\n        else if (param && param.userAgent) {\r\n            nav = {\r\n                userAgent: param.userAgent,\r\n                platform: param.platform,\r\n                maxTouchPoints: param.maxTouchPoints || 0\r\n            };\r\n        }\r\n        var userAgent = nav.userAgent;\r\n        var tmp = userAgent.split('[FBAN');\r\n        if (typeof tmp[1] !== 'undefined') {\r\n            userAgent = tmp[0];\r\n        }\r\n        tmp = userAgent.split('Twitter');\r\n        if (typeof tmp[1] !== 'undefined') {\r\n            userAgent = tmp[0];\r\n        }\r\n        var match = createMatch(userAgent);\r\n        var result = {\r\n            apple: {\r\n                phone: match(appleIphone) && !match(windowsPhone),\r\n                ipod: match(appleIpod),\r\n                tablet: !match(appleIphone) &&\r\n                    (match(appleTablet) || isAppleTabletOnIos13(nav)) &&\r\n                    !match(windowsPhone),\r\n                universal: match(appleUniversal),\r\n                device: (match(appleIphone) ||\r\n                    match(appleIpod) ||\r\n                    match(appleTablet) ||\r\n                    match(appleUniversal) ||\r\n                    isAppleTabletOnIos13(nav)) &&\r\n                    !match(windowsPhone)\r\n            },\r\n            amazon: {\r\n                phone: match(amazonPhone),\r\n                tablet: !match(amazonPhone) && match(amazonTablet),\r\n                device: match(amazonPhone) || match(amazonTablet)\r\n            },\r\n            android: {\r\n                phone: (!match(windowsPhone) && match(amazonPhone)) ||\r\n                    (!match(windowsPhone) && match(androidPhone)),\r\n                tablet: !match(windowsPhone) &&\r\n                    !match(amazonPhone) &&\r\n                    !match(androidPhone) &&\r\n                    (match(amazonTablet) || match(androidTablet)),\r\n                device: (!match(windowsPhone) &&\r\n                    (match(amazonPhone) ||\r\n                        match(amazonTablet) ||\r\n                        match(androidPhone) ||\r\n                        match(androidTablet))) ||\r\n                    match(/\\bokhttp\\b/i)\r\n            },\r\n            windows: {\r\n                phone: match(windowsPhone),\r\n                tablet: match(windowsTablet),\r\n                device: match(windowsPhone) || match(windowsTablet)\r\n            },\r\n            other: {\r\n                blackberry: match(otherBlackBerry),\r\n                blackberry10: match(otherBlackBerry10),\r\n                opera: match(otherOpera),\r\n                firefox: match(otherFirefox),\r\n                chrome: match(otherChrome),\r\n                device: match(otherBlackBerry) ||\r\n                    match(otherBlackBerry10) ||\r\n                    match(otherOpera) ||\r\n                    match(otherFirefox) ||\r\n                    match(otherChrome)\r\n            },\r\n            any: false,\r\n            phone: false,\r\n            tablet: false\r\n        };\r\n        result.any =\r\n            result.apple.device ||\r\n                result.android.device ||\r\n                result.windows.device ||\r\n                result.other.device;\r\n        result.phone =\r\n            result.apple.phone || result.android.phone || result.windows.phone;\r\n        result.tablet =\r\n            result.apple.tablet || result.android.tablet || result.windows.tablet;\r\n        return result;\r\n    }\r\n\r\n    return hoster.detects.mobile = detectMobile;\r\n});\r\n"]}