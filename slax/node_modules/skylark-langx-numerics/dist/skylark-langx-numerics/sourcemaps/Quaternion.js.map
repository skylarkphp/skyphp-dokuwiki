{"version":3,"sources":["Quaternion.js"],"names":["define","klass","numerics","maths","Quaternion","klassName","x","get","this","_x","set","value","_onChangeCallback","y","_y","z","_z","w","_w","clone","constructor","copy","quaternion","setFromEuler","euler","update","isEuler","Error","order","cos","Math","sin","c1","c2","c3","s1","s2","s3","setFromAxisAngle","axis","angle","halfAngle","s","setFromRotationMatrix","m","te","elements","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","sqrt","setFromUnitVectors","vFrom","vTo","r","dot","abs","normalize","angleTo","q","acos","clamp","rotateTowards","step","t","min","slerp","inverse","conjugate","v","lengthSq","length","l","multiply","p","undefined","console","warn","multiplyQuaternions","premultiply","a","b","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","Number","EPSILON","sinHalfTheta","halfTheta","atan2","ratioA","ratioB","equals","fromArray","array","offset","toArray","fromBufferAttribute","attribute","index","getX","getY","getZ","getW","_onChange","callback","_construct","Object","assign","qa","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","f","prototype"],"mappings":"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","file":"../Quaternion.js","sourcesContent":["define([\r\n\t\"skylark-langx-klass\",\r\n\t\"./numerics\",\r\n\t\"./maths\"\r\n] ,function(klass,numerics,maths) {\r\n\r\n\tvar Quaternion = klass({\r\n\t\t\"klassName\" : \"Quaternion\",\r\n\r\n\t\tx: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._x;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._x = value;\r\n\t\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\ty: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._y;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._y = value;\r\n\t\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tz: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._z;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._z = value;\r\n\t\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tw: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._w;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._w = value;\r\n\t\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tset: function ( x, y, z, w ) {\r\n\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._w = w;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( quaternion ) {\r\n\r\n\t\t\tthis._x = quaternion.x;\r\n\t\t\tthis._y = quaternion.y;\r\n\t\t\tthis._z = quaternion.z;\r\n\t\t\tthis._w = quaternion.w;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromEuler: function ( euler, update ) {\r\n\r\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\r\n\r\n\t\t\t\tthrow new Error( 'mathsQuaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\r\n\r\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t\t//\tcontent/SpinCalc.m\r\n\r\n\t\t\tvar cos = Math.cos;\r\n\t\t\tvar sin = Math.sin;\r\n\r\n\t\t\tvar c1 = cos( x / 2 );\r\n\t\t\tvar c2 = cos( y / 2 );\r\n\t\t\tvar c3 = cos( z / 2 );\r\n\r\n\t\t\tvar s1 = sin( x / 2 );\r\n\t\t\tvar s2 = sin( y / 2 );\r\n\t\t\tvar s3 = sin( z / 2 );\r\n\r\n\t\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( update !== false ) this._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\r\n\t\t\t// assumes axis is normalized\r\n\r\n\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\r\n\t\t\tthis._x = axis.x * s;\r\n\t\t\tthis._y = axis.y * s;\r\n\t\t\tthis._z = axis.z * s;\r\n\t\t\tthis._w = Math.cos( halfAngle );\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromRotationMatrix: function ( m ) {\r\n\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\t\tvar te = m.elements,\r\n\r\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\r\n\t\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\t\ts;\r\n\r\n\t\t\tif ( trace > 0 ) {\r\n\r\n\t\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\r\n\t\t\t\tthis._w = 0.25 / s;\r\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\r\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\r\n\t\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\t\tthis._x = 0.25 * s;\r\n\t\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\r\n\t\t\t} else if ( m22 > m33 ) {\r\n\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\r\n\t\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\t\tthis._y = 0.25 * s;\r\n\t\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\r\n\t\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\t\tthis._z = 0.25 * s;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromUnitVectors: function ( vFrom, vTo ) {\r\n\r\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\r\n\t\t\tvar EPS = 0.000001;\r\n\r\n\t\t\tvar r = vFrom.dot( vTo ) + 1;\r\n\r\n\t\t\tif ( r < EPS ) {\r\n\r\n\t\t\t\tr = 0;\r\n\r\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\r\n\t\t\t\t\tthis._x = - vFrom.y;\r\n\t\t\t\t\tthis._y = vFrom.x;\r\n\t\t\t\t\tthis._z = 0;\r\n\t\t\t\t\tthis._w = r;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._y = - vFrom.z;\r\n\t\t\t\t\tthis._z = vFrom.y;\r\n\t\t\t\t\tthis._w = r;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\r\n\r\n\t\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\r\n\t\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\r\n\t\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\r\n\t\t\t\tthis._w = r;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.normalize();\r\n\r\n\t\t},\r\n\r\n\t\tangleTo: function ( q ) {\r\n\r\n\t\t\treturn 2 * Math.acos( Math.abs( maths.clamp( this.dot( q ), - 1, 1 ) ) );\r\n\r\n\t\t},\r\n\r\n\t\trotateTowards: function ( q, step ) {\r\n\r\n\t\t\tvar angle = this.angleTo( q );\r\n\r\n\t\t\tif ( angle === 0 ) return this;\r\n\r\n\t\t\tvar t = Math.min( 1, step / angle );\r\n\r\n\t\t\tthis.slerp( q, t );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tinverse: function () {\r\n\r\n\t\t\t// quaternion is assumed to have unit length\r\n\r\n\t\t\treturn this.conjugate();\r\n\r\n\t\t},\r\n\r\n\t\tconjugate: function () {\r\n\r\n\t\t\tthis._x *= - 1;\r\n\t\t\tthis._y *= - 1;\r\n\t\t\tthis._z *= - 1;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdot: function ( v ) {\r\n\r\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\r\n\t\t},\r\n\r\n\t\tlengthSq: function () {\r\n\r\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\r\n\t\t},\r\n\r\n\t\tlength: function () {\r\n\r\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\r\n\t\t},\r\n\r\n\t\tnormalize: function () {\r\n\r\n\t\t\tvar l = this.length();\r\n\r\n\t\t\tif ( l === 0 ) {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = 0;\r\n\t\t\t\tthis._w = 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tl = 1 / l;\r\n\r\n\t\t\t\tthis._x = this._x * l;\r\n\t\t\t\tthis._y = this._y * l;\r\n\t\t\t\tthis._z = this._z * l;\r\n\t\t\t\tthis._w = this._w * l;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiply: function ( q, p ) {\r\n\r\n\t\t\tif ( p !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'mathsQuaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyQuaternions( q, p );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.multiplyQuaternions( this, q );\r\n\r\n\t\t},\r\n\r\n\t\tpremultiply: function ( q ) {\r\n\r\n\t\t\treturn this.multiplyQuaternions( q, this );\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyQuaternions: function ( a, b ) {\r\n\r\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\r\n\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\r\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tslerp: function ( qb, t ) {\r\n\r\n\t\t\tif ( t === 0 ) return this;\r\n\t\t\tif ( t === 1 ) return this.copy( qb );\r\n\r\n\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\r\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n\t\t\tif ( cosHalfTheta < 0 ) {\r\n\r\n\t\t\t\tthis._w = - qb._w;\r\n\t\t\t\tthis._x = - qb._x;\r\n\t\t\t\tthis._y = - qb._y;\r\n\t\t\t\tthis._z = - qb._z;\r\n\r\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.copy( qb );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\r\n\t\t\t\tthis._w = w;\r\n\t\t\t\tthis._x = x;\r\n\t\t\t\tthis._y = y;\r\n\t\t\t\tthis._z = z;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\r\n\r\n\t\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\r\n\r\n\t\t\t\tvar s = 1 - t;\r\n\t\t\t\tthis._w = s * w + t * this._w;\r\n\t\t\t\tthis._x = s * x + t * this._x;\r\n\t\t\t\tthis._y = s * y + t * this._y;\r\n\t\t\t\tthis._z = s * z + t * this._z;\r\n\r\n\t\t\t\tthis.normalize();\r\n\t\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\r\n\t\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\r\n\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\r\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( quaternion ) {\r\n\r\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tthis._x = array[ offset ];\r\n\t\t\tthis._y = array[ offset + 1 ];\r\n\t\t\tthis._z = array[ offset + 2 ];\r\n\t\t\tthis._w = array[ offset + 3 ];\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tarray[ offset ] = this._x;\r\n\t\t\tarray[ offset + 1 ] = this._y;\r\n\t\t\tarray[ offset + 2 ] = this._z;\r\n\t\t\tarray[ offset + 3 ] = this._w;\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t},\r\n\r\n\t\tfromBufferAttribute: function ( attribute, index ) {\r\n\r\n\t\t\tthis._x = attribute.getX( index );\r\n\t\t\tthis._y = attribute.getY( index );\r\n\t\t\tthis._z = attribute.getZ( index );\r\n\t\t\tthis._w = attribute.getW( index );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t_onChange: function ( callback ) {\r\n\r\n\t\t\tthis._onChangeCallback = callback;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t_onChangeCallback: function () {},\r\n\r\n\r\n\t\t\"_construct\" : function ( x, y, z, w ) {\r\n\r\n\t\t\tthis._x = x || 0;\r\n\t\t\tthis._y = y || 0;\r\n\t\t\tthis._z = z || 0;\r\n\t\t\tthis._w = ( w !== undefined ) ? w : 1;\r\n\r\n\t\t}\r\n\r\n\r\n\t})\r\n\r\n\r\n\tObject.assign( Quaternion, {\r\n\r\n\t\tslerp: function ( qa, qb, qm, t ) {\r\n\r\n\t\t\treturn qm.copy( qa ).slerp( qb, t );\r\n\r\n\t\t},\r\n\r\n\t\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\r\n\r\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\r\n\r\n\t\t\tvar x0 = src0[ srcOffset0 + 0 ],\r\n\t\t\t\ty0 = src0[ srcOffset0 + 1 ],\r\n\t\t\t\tz0 = src0[ srcOffset0 + 2 ],\r\n\t\t\t\tw0 = src0[ srcOffset0 + 3 ],\r\n\r\n\t\t\t\tx1 = src1[ srcOffset1 + 0 ],\r\n\t\t\t\ty1 = src1[ srcOffset1 + 1 ],\r\n\t\t\t\tz1 = src1[ srcOffset1 + 2 ],\r\n\t\t\t\tw1 = src1[ srcOffset1 + 3 ];\r\n\r\n\t\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\r\n\r\n\t\t\t\tvar s = 1 - t,\r\n\r\n\t\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\r\n\r\n\t\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\r\n\t\t\t\t\tsqrSin = 1 - cos * cos;\r\n\r\n\t\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\r\n\t\t\t\tif ( sqrSin > Number.EPSILON ) {\r\n\r\n\t\t\t\t\tvar sin = Math.sqrt( sqrSin ),\r\n\t\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\r\n\r\n\t\t\t\t\ts = Math.sin( s * len ) / sin;\r\n\t\t\t\t\tt = Math.sin( t * len ) / sin;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar tDir = t * dir;\r\n\r\n\t\t\t\tx0 = x0 * s + x1 * tDir;\r\n\t\t\t\ty0 = y0 * s + y1 * tDir;\r\n\t\t\t\tz0 = z0 * s + z1 * tDir;\r\n\t\t\t\tw0 = w0 * s + w1 * tDir;\r\n\r\n\t\t\t\t// Normalize in case we just did a lerp:\r\n\t\t\t\tif ( s === 1 - t ) {\r\n\r\n\t\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\r\n\r\n\t\t\t\t\tx0 *= f;\r\n\t\t\t\t\ty0 *= f;\r\n\t\t\t\t\tz0 *= f;\r\n\t\t\t\t\tw0 *= f;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdst[ dstOffset ] = x0;\r\n\t\t\tdst[ dstOffset + 1 ] = y0;\r\n\t\t\tdst[ dstOffset + 2 ] = z0;\r\n\t\t\tdst[ dstOffset + 3 ] = w0;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Quaternion.prototype, {\r\n\r\n\r\n\t} );\r\n\r\n\r\n\treturn numerics.Quaternion = Quaternion;\r\n\r\n\r\n})"]}