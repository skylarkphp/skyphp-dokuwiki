{"version":3,"sources":["word64.js"],"names":["define","Word64","highInteger","lowInteger","this","high","low","prototype","and","word","xor","or","shiftRight","places","shiftLeft","rotateRight","not","add","lowAdd","highAdd","copyTo","bytes","offset","assign"],"mappings":";;;;;;;AAAAA,UAAU,WAGN,SAASC,EAAOC,EAAaC,GACzBC,KAAKC,KAAqB,EAAdH,EACZE,KAAKE,IAAmB,EAAbH,EA0Ef,OAxEAF,EAAOM,WACHC,IAAK,SAAoBC,GACrBL,KAAKC,MAAQI,EAAKJ,KAClBD,KAAKE,KAAOG,EAAKH,KAErBI,IAAK,SAAoBD,GACrBL,KAAKC,MAAQI,EAAKJ,KAClBD,KAAKE,KAAOG,EAAKH,KAErBK,GAAI,SAAmBF,GACnBL,KAAKC,MAAQI,EAAKJ,KAClBD,KAAKE,KAAOG,EAAKH,KAErBM,WAAY,SAA2BC,GAC/BA,GAAU,IACVT,KAAKE,IAAMF,KAAKC,OAASQ,EAAS,GAAK,EACvCT,KAAKC,KAAO,IAEZD,KAAKE,IAAMF,KAAKE,MAAQO,EAAST,KAAKC,MAAQ,GAAKQ,EACnDT,KAAKC,KAAOD,KAAKC,OAASQ,EAAS,IAG3CC,UAAW,SAA0BD,GAC7BA,GAAU,IACVT,KAAKC,KAAOD,KAAKE,KAAOO,EAAS,GACjCT,KAAKE,IAAM,IAEXF,KAAKC,KAAOD,KAAKC,MAAQQ,EAAST,KAAKE,MAAQ,GAAKO,EACpDT,KAAKE,IAAMF,KAAKE,KAAOO,IAG/BE,YAAa,SAA4BF,GACrC,IAAIP,EAAKD,EACI,GAATQ,GACAR,EAAOD,KAAKE,IACZA,EAAMF,KAAKC,OAEXC,EAAMF,KAAKE,IACXD,EAAOD,KAAKC,MAEhBQ,GAAU,GACVT,KAAKE,IAAMA,IAAQO,EAASR,GAAQ,GAAKQ,EACzCT,KAAKC,KAAOA,IAASQ,EAASP,GAAO,GAAKO,GAE9CG,IAAK,WACDZ,KAAKC,MAAQD,KAAKC,KAClBD,KAAKE,KAAOF,KAAKE,KAErBW,IAAK,SAAoBR,GACrB,IAAIS,GAAUd,KAAKE,MAAQ,IAAMG,EAAKH,MAAQ,GAC1Ca,GAAWf,KAAKC,OAAS,IAAMI,EAAKJ,OAAS,GAC7Ca,EAAS,aACTC,GAAW,GAEff,KAAKE,IAAe,EAATY,EACXd,KAAKC,KAAiB,EAAVc,GAEhBC,OAAQ,SAAuBC,EAAOC,GAClCD,EAAMC,GAAUlB,KAAKC,OAAS,GAAK,IACnCgB,EAAMC,EAAS,GAAKlB,KAAKC,MAAQ,GAAK,IACtCgB,EAAMC,EAAS,GAAKlB,KAAKC,MAAQ,EAAI,IACrCgB,EAAMC,EAAS,GAAiB,IAAZlB,KAAKC,KACzBgB,EAAMC,EAAS,GAAKlB,KAAKE,MAAQ,GAAK,IACtCe,EAAMC,EAAS,GAAKlB,KAAKE,KAAO,GAAK,IACrCe,EAAMC,EAAS,GAAKlB,KAAKE,KAAO,EAAI,IACpCe,EAAMC,EAAS,GAAgB,IAAXlB,KAAKE,KAE7BiB,OAAQ,SAAuBd,GAC3BL,KAAKC,KAAOI,EAAKJ,KACjBD,KAAKE,IAAMG,EAAKH,MAGjBL","file":"../word64.js","sourcesContent":["define([],function(){\r\n    //ref:pdfjs>src/core/crypto.js\r\n\r\n    function Word64(highInteger, lowInteger) {\r\n        this.high = highInteger | 0;\r\n        this.low = lowInteger | 0;\r\n    }\r\n    Word64.prototype = {\r\n        and: function Word64_and(word) {\r\n            this.high &= word.high;\r\n            this.low &= word.low;\r\n        },\r\n        xor: function Word64_xor(word) {\r\n            this.high ^= word.high;\r\n            this.low ^= word.low;\r\n        },\r\n        or: function Word64_or(word) {\r\n            this.high |= word.high;\r\n            this.low |= word.low;\r\n        },\r\n        shiftRight: function Word64_shiftRight(places) {\r\n            if (places >= 32) {\r\n                this.low = this.high >>> places - 32 | 0;\r\n                this.high = 0;\r\n            } else {\r\n                this.low = this.low >>> places | this.high << 32 - places;\r\n                this.high = this.high >>> places | 0;\r\n            }\r\n        },\r\n        shiftLeft: function Word64_shiftLeft(places) {\r\n            if (places >= 32) {\r\n                this.high = this.low << places - 32;\r\n                this.low = 0;\r\n            } else {\r\n                this.high = this.high << places | this.low >>> 32 - places;\r\n                this.low = this.low << places;\r\n            }\r\n        },\r\n        rotateRight: function Word64_rotateRight(places) {\r\n            var low, high;\r\n            if (places & 32) {\r\n                high = this.low;\r\n                low = this.high;\r\n            } else {\r\n                low = this.low;\r\n                high = this.high;\r\n            }\r\n            places &= 31;\r\n            this.low = low >>> places | high << 32 - places;\r\n            this.high = high >>> places | low << 32 - places;\r\n        },\r\n        not: function Word64_not() {\r\n            this.high = ~this.high;\r\n            this.low = ~this.low;\r\n        },\r\n        add: function Word64_add(word) {\r\n            var lowAdd = (this.low >>> 0) + (word.low >>> 0);\r\n            var highAdd = (this.high >>> 0) + (word.high >>> 0);\r\n            if (lowAdd > 4294967295) {\r\n                highAdd += 1;\r\n            }\r\n            this.low = lowAdd | 0;\r\n            this.high = highAdd | 0;\r\n        },\r\n        copyTo: function Word64_copyTo(bytes, offset) {\r\n            bytes[offset] = this.high >>> 24 & 255;\r\n            bytes[offset + 1] = this.high >> 16 & 255;\r\n            bytes[offset + 2] = this.high >> 8 & 255;\r\n            bytes[offset + 3] = this.high & 255;\r\n            bytes[offset + 4] = this.low >>> 24 & 255;\r\n            bytes[offset + 5] = this.low >> 16 & 255;\r\n            bytes[offset + 6] = this.low >> 8 & 255;\r\n            bytes[offset + 7] = this.low & 255;\r\n        },\r\n        assign: function Word64_assign(word) {\r\n            this.high = word.high;\r\n            this.low = word.low;\r\n        }\r\n    };\r\n    return Word64;\r\n});"]}