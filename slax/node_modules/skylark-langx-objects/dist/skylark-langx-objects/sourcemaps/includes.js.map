{"version":3,"sources":["includes.js"],"names":["define","objects","includes","collection","value","fromIndex","guard","isArrayLike","values","toInteger","length","nativeMax","isString","indexOf","baseIndexOf"],"mappings":";;;;;;;AAAAA,QACI,aACF,SAASC,GA+CP,OAAOA,EAAQC,SAff,SAAkBC,EAAYC,EAAOC,EAAWC,GAC9CH,EAAaI,YAAYJ,GAAcA,EAAaK,OAAOL,GAC3DE,EAAaA,IAAcC,EAASG,UAAUJ,GAAa,EAE3D,IAAIK,EAASP,EAAWO,OAIxB,OAHIL,EAAY,IACdA,EAAYM,UAAUD,EAASL,EAAW,IAErCO,SAAST,GACXE,GAAaK,GAAUP,EAAWU,QAAQT,EAAOC,IAAc,IAC7DK,GAAUI,YAAYX,EAAYC,EAAOC,IAAc","file":"../includes.js","sourcesContent":["define([\r\n    \"./objects\"\r\n],function(objects) {\r\n\r\n    /**\r\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\r\n     * checked for a substring of `value`, otherwise\r\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\r\n     * the offset from the end of `collection`.\r\n     *\r\n     * @static\r\n     * @memberOf _\r\n     * @since 0.1.0\r\n     * @category Collection\r\n     * @param {Array|Object|string} collection The collection to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} [fromIndex=0] The index to search from.\r\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\r\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\r\n     * @example\r\n     *\r\n     * _.includes([1, 2, 3], 1);\r\n     * // => true\r\n     *\r\n     * _.includes([1, 2, 3], 1, 2);\r\n     * // => false\r\n     *\r\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\r\n     * // => true\r\n     *\r\n     * _.includes('abcd', 'bc');\r\n     * // => true\r\n     */\r\n    function includes(collection, value, fromIndex, guard) {\r\n      collection = isArrayLike(collection) ? collection : values(collection);\r\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\r\n\r\n      var length = collection.length;\r\n      if (fromIndex < 0) {\r\n        fromIndex = nativeMax(length + fromIndex, 0);\r\n      }\r\n      return isString(collection)\r\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\r\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\r\n    }\r\n\r\n\r\n\r\n    return objects.includes = includes;\r\n});"]}