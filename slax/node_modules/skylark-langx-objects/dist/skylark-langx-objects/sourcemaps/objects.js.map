{"version":3,"sources":["objects.js"],"names":["define","skylark","types","keysFunc","defaults","hasOwnProperty","Object","prototype","isObject","Array","slice","isBoolean","isFunction","isPlainObject","isArray","isArrayLike","isString","toInteger","allKeys","obj","keys","key","push","has","path","call","length","i","attach","arguments","index","source","l","isMatch","object","attrs","removeItem","items","item","idx","indexOf","splice","this","values"],"mappings":";;;;;;;AAAAA,QACI,mBACA,uBACF,SAASC,EAAQC,GACf,IAYwBC,EAAUC,EAZ9BC,EAAiBC,OAAOC,UAAUF,eAIlCG,GAHQC,MAAMF,UAAUG,MACZR,EAAMS,UACLT,EAAMU,WACRV,EAAMM,UACjBK,EAAgBX,EAAMW,cACtBC,EAAUZ,EAAMY,QACFZ,EAAMa,YACTb,EAAMc,SACLd,EAAMe,UAuBtB,SAASC,EAAQC,GACb,IAAKX,EAASW,GAAM,SACpB,IAAIC,KACJ,IAAK,IAAIC,KAAOF,EAAKC,EAAKE,KAAKD,GAC/B,OAAOD,EAYX,SAASG,EAAIJ,EAAKK,GACd,IAAKV,EAAQU,GACT,OAAc,MAAPL,GAAed,EAAeoB,KAAKN,EAAKK,GAGnD,IADA,IAAIE,EAASF,EAAKE,OACTC,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAC7B,IAAIN,EAAMG,EAAKG,GACf,GAAW,MAAPR,IAAgBd,EAAeoB,KAAKN,EAAKE,GACzC,OAAO,EAEXF,EAAMA,EAAIE,GAEd,QAASK,EAiDb,OAAOzB,EAAQ2B,OAAO,iBAClBV,QAASA,EAETU,OAAS3B,EAAQ2B,OAEjBxB,UAtGoBD,EAsGMe,EAtGId,GAsGK,EArG5B,SAASe,GACd,IAAIO,EAASG,UAAUH,OAEvB,GADItB,IAAUe,EAAMb,OAAOa,IACvBO,EAAS,GAAY,MAAPP,EAAa,OAAOA,EACtC,IAAK,IAAIW,EAAQ,EAAGA,EAAQJ,EAAQI,IAIlC,IAHA,IAAIC,EAASF,UAAUC,GACnBV,EAAOjB,EAAS4B,GAChBC,EAAIZ,EAAKM,OACJC,EAAI,EAAGA,EAAIK,EAAGL,IAAK,CAC1B,IAAIN,EAAMD,EAAKO,GACVvB,QAAyB,IAAbe,EAAIE,KAAiBF,EAAIE,GAAOU,EAAOV,IAG5D,OAAOF,IA0FTI,IAAKA,EAELU,QArDJ,SAAiBC,EAAQC,GACrB,IAAIf,EAAOA,EAAKe,GAAQT,EAASN,EAAKM,OACtC,GAAc,MAAVQ,EAAgB,OAAQR,EAE5B,IADA,IAAIP,EAAMb,OAAO4B,GACRP,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAC/B,IAAIN,EAAMD,EAAKO,GACf,GAAIQ,EAAMd,KAASF,EAAIE,MAAUA,KAAOF,GAAM,OAAO,EAEvD,OAAO,GA+CPC,KA/EJ,SAAcD,GACV,GAAIX,EAASW,GAAM,SACnB,IAAIC,KACJ,IAAK,IAAIC,KAAOF,EAASI,EAAIJ,EAAKE,IAAMD,EAAKE,KAAKD,GAClD,OAAOD,GA6EPgB,WA7CJ,SAAoBC,EAAOC,GACvB,GAAIxB,EAAQuB,GAAQ,CAChB,IAAIE,EAAMF,EAAMG,QAAQF,IACZ,GAARC,GACAF,EAAMI,OAAOF,EAAK,QAEnB,GAAI1B,EAAcwB,GACrB,IAAK,IAAIhB,KAAOgB,EACZ,GAAIA,EAAMhB,IAAQiB,EAAM,QACbD,EAAMhB,GACb,MAKZ,OAAOqB,MAgCPC,OA1BJ,SAAgBxB,GAIZ,IAHA,IAAIC,EAAOF,EAAQC,GACfO,EAASN,EAAKM,OACdiB,EAASlC,MAAMiB,GACVC,EAAI,EAAGA,EAAID,EAAQC,IACxBgB,EAAOhB,GAAKR,EAAIC,EAAKO,IAEzB,OAAOgB","file":"../objects.js","sourcesContent":["define([\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-types\"\r\n],function(skylark,types){\r\n    var hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n        isObject = types.isObject,\r\n        isPlainObject = types.isPlainObject,\r\n        isArray = types.isArray,\r\n        isArrayLike = types.isArrayLike,\r\n        isString = types.isString,\r\n        toInteger = types.toInteger;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = allKeys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n\r\n    return skylark.attach(\"langx.objects\",{\r\n        allKeys: allKeys,\r\n\r\n        attach : skylark.attach,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        has: has,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        removeItem: removeItem,\r\n\r\n        values: values\r\n    });\r\n\r\n\r\n});"]}