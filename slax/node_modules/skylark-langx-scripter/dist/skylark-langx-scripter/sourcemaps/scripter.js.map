{"version":3,"sources":["scripter.js"],"names":["define","skylark","langx","head","document","getElementsByTagName","scriptsByUrl","scriptElementsById","count","scripter","preservedScriptAttributes","type","src","nonce","noModule","mixin","loadJavaScript","url","loadedCallback","errorCallback","script","state","loadedCallbacks","errorCallbacks","push","node","onload","onerror","createElement","id","async","defer","startTime","Date","getTime","appendChild","callbacks","i","length","deleteJavaScript","parentNode","remove","evaluate","code","doc","val","text","getAttribute","setAttribute","removeChild","this","loadScript","d","Deferred","promise","scriptId","resolve","e","reject","attach"],"mappings":";;;;;;;AAAAA,QACI,wBACA,iBACD,SAASC,EAASC,GAEjB,IAAIC,EAAOC,SAASC,qBAAqB,QAAQ,GAC7CC,KACAC,KACAC,EAAQ,EAEZ,SAASC,IACL,OAAOA,EAIX,IAAIC,GACAC,MAAM,EACNC,KAAK,EACLC,OAAO,EACPC,UAAU,GAkId,OAhGAZ,EAAMa,MAAMN,GAORO,eAAgB,SAASC,EAAKC,EAAgBC,GAC1C,IAAIC,EAASd,EAAaW,GAY1B,GAXKG,IACDA,EAASd,EAAaW,IAClBI,MAAO,EACPC,mBACAC,oBAIRH,EAAOE,gBAAgBE,KAAKN,GAC5BE,EAAOG,eAAeC,KAAKL,GAEN,IAAjBC,EAAOC,MACPD,EAAOK,KAAKC,cACT,IAAsB,IAAlBN,EAAOC,MACdD,EAAOK,KAAKE,cACT,CACH,IAAIF,EAAOL,EAAOK,KAAOrB,SAASwB,cAAc,UAC5CC,EAAKT,EAAOS,GAAMrB,IAEtBiB,EAAKd,KAAO,kBACZc,EAAKK,OAAQ,EACbL,EAAKM,OAAQ,EACbC,WAAY,IAAIC,MAAOC,UACvB/B,EAAKgC,YAAYV,GAEjBA,EAAKC,OAAS,WACNN,EAAOC,MAAQ,EAKf,IAHA,IAAIe,EAAYhB,EAAOE,gBACnBe,EAAID,EAAUE,OAEXD,KACHD,EAAUC,KAEdjB,EAAOE,mBACPF,EAAOG,mBAEXE,EAAKE,QAAU,WACXP,EAAOC,OAAS,EAIhB,IAHA,IAAIe,EAAYhB,EAAOG,eACnBc,EAAID,EAAUE,OAEXD,KACHD,EAAUC,KAEdjB,EAAOE,mBACPF,EAAOG,mBAEfE,EAAKb,IAAMK,EAEXV,EAAmBsB,GAAMJ,EAE7B,OAAOL,EAAOS,IAMlBU,iBAAkB,SAASV,GACvB,IAAIJ,EAAOlB,EAAmBsB,GAC9B,GAAIJ,EAAM,CACN,IAAIR,EAAMQ,EAAKb,IACXa,EAAKe,YACLf,EAAKe,WAAWC,OAAOhB,UAEpBlB,EAAmBsB,UACnBvB,EAAaW,KAI5ByB,SA9GJ,SAAkBC,EAAKlB,EAAMmB,GAGzB,IAAIP,EAAGQ,EACHzB,GAHJwB,EAAMA,GAAOxC,UAGIwB,cAAc,UAG/B,GADAR,EAAO0B,KAAOH,EACTlB,EACD,IAAMY,KAAK3B,GAYPmC,EAAMpB,EAAMY,IAAOZ,EAAKsB,cAAgBtB,EAAKsB,aAAcV,KAEvDjB,EAAO4B,aAAcX,EAAGQ,GAMpC,OAFAD,EAAIzC,KAAKgC,YAAaf,GAASoB,WAAWS,YAAa7B,GAEhD8B,MAoFPC,WAAa,SAASlC,GAClB,IAAImC,EAAI,IAAIlD,EAAMmD,SAQlB,OANAD,EAAEE,QAAQC,SAAWL,KAAKlC,eAAeC,EAAI,WACzCmC,EAAEI,WACJ,SAASC,GACPL,EAAEM,OAAOD,KAGNL,EAAEE,WAMVrD,EAAQ0D,OAAO,iBAAkBlD","file":"../scripter.js","sourcesContent":["define([\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx\"\r\n], function(skylark, langx) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n\r\n    var preservedScriptAttributes = {\r\n        type: true,\r\n        src: true,\r\n        nonce: true,\r\n        noModule: true\r\n    };\r\n\r\n    function evaluate(code,node, doc ) {\r\n        doc = doc || document;\r\n\r\n        var i, val,\r\n            script = doc.createElement(\"script\");\r\n\r\n        script.text = code;\r\n        if ( node ) {\r\n            for ( i in preservedScriptAttributes ) {\r\n\r\n                // Support: Firefox 64+, Edge 18+\r\n                // Some browsers don't support the \"nonce\" property on scripts.\r\n                // On the other hand, just using `getAttribute` is not enough as\r\n                // the `nonce` attribute is reset to an empty string whenever it\r\n                // becomes browsing-context connected.\r\n                // See https://github.com/whatwg/html/issues/2369\r\n                // See https://html.spec.whatwg.org/#nonce-attributes\r\n                // The `node.getAttribute` check was added for the sake of\r\n                // `jQuery.globalEval` so that it can fake a nonce-containing node\r\n                // via an object.\r\n                val = node[ i ] || node.getAttribute && node.getAttribute( i );\r\n                if ( val ) {\r\n                    script.setAttribute( i, val );\r\n                }\r\n            }\r\n        }\r\n        doc.head.appendChild( script ).parentNode.removeChild( script );\r\n\r\n        return this;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n        /*\r\n         * Load a script from a url into the document.\r\n         * @param {} url\r\n         * @param {} loadedCallback\r\n         * @param {} errorCallback\r\n         */\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n        /*\r\n         * Remove the specified script from the document.\r\n         * @param {Number} id\r\n         */\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                if (node.parentNode) {\r\n                    node.parentNode.remove(node);\r\n                }\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        },\r\n\r\n        evaluate : evaluate,\r\n\r\n        loadScript : function(url) {\r\n            var d = new langx.Deferred();\r\n\r\n            d.promise.scriptId = this.loadJavaScript(url,function(){\r\n                d.resolve();\r\n            },function(e){\r\n                d.reject(e);\r\n            });\r\n\r\n            return d.promise;\r\n        }\r\n\r\n\r\n    });\r\n\r\n    return skylark.attach(\"langx.scripter\", scripter);\r\n});"]}