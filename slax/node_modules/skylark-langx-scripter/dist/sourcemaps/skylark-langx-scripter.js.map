{"version":3,"sources":["skylark-langx-scripter.js"],"names":["define","skylark","langx","head","document","getElementsByTagName","scriptsByUrl","scriptElementsById","count","scripter","preservedScriptAttributes","type","src","nonce","noModule","mixin","loadJavaScript","url","loadedCallback","errorCallback","script","state","loadedCallbacks","errorCallbacks","push","node","onload","onerror","createElement","id","async","defer","startTime","Date","getTime","appendChild","callbacks","i","length","deleteJavaScript","parentNode","remove","evaluate","code","doc","val","text","getAttribute","setAttribute","removeChild","this","loadScript","d","Deferred","promise","scriptId","resolve","e","reject","attach","main"],"mappings":";;;;;;;g4BAAAA,EAAA,mCACA,wBACA,iBACA,SAAAC,EAAAC,GAEA,IAAAC,EAAAC,SAAAC,qBAAA,QAAA,GACAC,KACAC,KACAC,EAAA,EAEA,SAAAC,IACA,OAAAA,EAIA,IAAAC,GACAC,MAAA,EACAC,KAAA,EACAC,OAAA,EACAC,UAAA,GAiDA,OAfAZ,EAAAa,MAAAN,GAOAO,eAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAd,EAAAW,GAYA,GAXAG,IACAA,EAAAd,EAAAW,IACAI,MAAA,EACAC,mBACAC,oBAIAH,EAAAE,gBAAAE,KAAAN,GACAE,EAAAG,eAAAC,KAAAL,GAEA,IAAAC,EAAAC,MACAD,EAAAK,KAAAC,cACA,IAAA,IAAAN,EAAAC,MACAD,EAAAK,KAAAE,cACA,CACA,IAAAF,EAAAL,EAAAK,KAAArB,SAAAwB,cAAA,UACAC,EAAAT,EAAAS,GAAArB,IA/EAiB,EAAAd,KAAA,kBACAc,EAAAK,OAAA,EACAL,EAAAM,OAAA,EACAC,WAAA,IAAAC,MAAAC,UACA/B,EAAAgC,YAAAV,GAEAA,EAAAC,OAAA,WACAN,EAAAC,MAAA,EAKA,IAHA,IAAAe,EAAAhB,EAAAE,gBACAe,EAAAD,EAAAE,OAEAD,KACAD,EAAAC,KAEAjB,EAAAE,mBACAF,EAAAG,mBAEAE,EAAAE,QAAA,WACAP,EAAAC,OAAA,EAIA,IAHA,IAAAe,EAAAhB,EAAAG,eACAc,EAAAD,EAAAE,OAEAD,KACAD,EAAAC,KAEAjB,EAAAE,mBACAF,EAAAG,mBAEAE,EAAAb,IAAAK,EAEAV,EAAAsB,GAAAJ,EAEA,OAAAL,EAAAS,IAMAU,iBAAA,SAAAV,GACA,IAAAJ,EAAAlB,EAAAsB,GACA,GAAAJ,EAAA,CACA,IAAAR,EAAAQ,EAAAb,IACAa,EAAAe,YACAf,EAAAe,WAAAC,OAAAhB,UAEAlB,EAAAsB,UACAvB,EAAAW,KAIAyB,SA7BA,SAAAC,EAAAlB,EAAAmB,GAGA,IAAAP,EAAAQ,EACAzB,GAHAwB,EAAAA,GAAAxC,UAGAwB,cAAA,UAGA,GADAR,EAAA0B,KAAAH,EACAlB,EACA,IAAAY,KAAA3B,GAYAmC,EAAApB,EAAAY,IAAAZ,EAAAsB,cAAAtB,EAAAsB,aAAAV,KAEAjB,EAAA4B,aAAAX,EAAAQ,GAMA,OAFAD,EAAAzC,KAAAgC,YAAAf,GAAAoB,WAAAS,YAAA7B,GAEA8B,MAGAC,WAAA,SAAAlC,GACA,IAAAmC,EAAA,IAAAlD,EAAAmD,SAQA,OANAD,EAAAE,QAAAC,SAAAL,KAAAlC,eAAAC,EAAA,WACAmC,EAAAI,WACA,SAAAC,GACAL,EAAAM,OAAAD,KAGAL,EAAAE,WAMArD,EAAA0D,OAAA,iBAAAlD,KAEAT,EAAA,+BACA,cACA,SAAAS,GAEA,OAAAA,IAEAT,EAAA,0BAAA,+BAAA,SAAA4D,GAAA,OAAAA","file":"../skylark-langx-scripter.js","sourcesContent":["define('skylark-langx-scripter/scripter',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx\"\r\n], function(skylark, langx) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n\r\n    var preservedScriptAttributes = {\r\n        type: true,\r\n        src: true,\r\n        nonce: true,\r\n        noModule: true\r\n    };\r\n\r\n    function evaluate(code,node, doc ) {\r\n        doc = doc || document;\r\n\r\n        var i, val,\r\n            script = doc.createElement(\"script\");\r\n\r\n        script.text = code;\r\n        if ( node ) {\r\n            for ( i in preservedScriptAttributes ) {\r\n\r\n                // Support: Firefox 64+, Edge 18+\r\n                // Some browsers don't support the \"nonce\" property on scripts.\r\n                // On the other hand, just using `getAttribute` is not enough as\r\n                // the `nonce` attribute is reset to an empty string whenever it\r\n                // becomes browsing-context connected.\r\n                // See https://github.com/whatwg/html/issues/2369\r\n                // See https://html.spec.whatwg.org/#nonce-attributes\r\n                // The `node.getAttribute` check was added for the sake of\r\n                // `jQuery.globalEval` so that it can fake a nonce-containing node\r\n                // via an object.\r\n                val = node[ i ] || node.getAttribute && node.getAttribute( i );\r\n                if ( val ) {\r\n                    script.setAttribute( i, val );\r\n                }\r\n            }\r\n        }\r\n        doc.head.appendChild( script ).parentNode.removeChild( script );\r\n\r\n        return this;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n        /*\r\n         * Load a script from a url into the document.\r\n         * @param {} url\r\n         * @param {} loadedCallback\r\n         * @param {} errorCallback\r\n         */\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n        /*\r\n         * Remove the specified script from the document.\r\n         * @param {Number} id\r\n         */\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                if (node.parentNode) {\r\n                    node.parentNode.remove(node);\r\n                }\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        },\r\n\r\n        evaluate : evaluate,\r\n\r\n        loadScript : function(url) {\r\n            var d = new langx.Deferred();\r\n\r\n            d.promise.scriptId = this.loadJavaScript(url,function(){\r\n                d.resolve();\r\n            },function(e){\r\n                d.reject(e);\r\n            });\r\n\r\n            return d.promise;\r\n        }\r\n\r\n\r\n    });\r\n\r\n    return skylark.attach(\"langx.scripter\", scripter);\r\n});\ndefine('skylark-langx-scripter/main',[\r\n\t\"./scripter\"\r\n],function(scripter){\r\n\t\r\n\treturn scripter;\r\n});\ndefine('skylark-langx-scripter', ['skylark-langx-scripter/main'], function (main) { return main; });\n\n"]}