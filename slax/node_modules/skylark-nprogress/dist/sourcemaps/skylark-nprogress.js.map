{"version":3,"sources":["skylark-nprogress.js"],"names":["define","NProgress","version","Settings","settings","minimum","easing","positionUsing","speed","trickle","trickleRate","trickleSpeed","showSpinner","barSelector","spinnerSelector","parent","template","clamp","n","min","max","toBarPerc","configure","options","key","value","undefined","hasOwnProperty","this","status","set","started","isStarted","progress","render","bar","querySelector","ease","offsetWidth","queue","next","getPositioningCSS","css","barCSS","transform","margin-left","transition","barPositionCSS","opacity","setTimeout","remove","start","work","done","force","inc","Math","random","amount","initial","current","promise","$promise","state","always","fromStart","isRendered","document","getElementById","addClass","documentElement","createElement","id","innerHTML","spinner","perc","removeElement","body","appendChild","removeClass","bodyStyle","style","vendorPrefix","pending","fn","shift","push","length","cssPrefixes","cssProps","getStyleProp","name","replace","match","letter","toUpperCase","vendorName","i","capName","charAt","slice","getVendorProp","applyCss","element","prop","properties","args","arguments","hasClass","list","classList","indexOf","oldList","newList","className","substring","parentNode","removeChild","nprogress","main"],"mappings":"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","file":"../skylark-nprogress.js","sourcesContent":["define('skylark-nprogress/nprogress',[],function(){\n  function nprogress() {\n    var NProgress = {};\n\n    NProgress.version = '0.2.0';\n\n    var Settings = NProgress.settings = {\n      minimum: 0.08,\n      easing: 'ease',\n      positionUsing: '',\n      speed: 200,\n      trickle: true,\n      trickleRate: 0.02,\n      trickleSpeed: 800,\n      showSpinner: true,\n      barSelector: '[role=\"bar\"]',\n      spinnerSelector: '[role=\"spinner\"]',\n      parent: 'body',\n      template: '<div class=\"bar\" role=\"bar\"><div class=\"peg\"></div></div><div class=\"spinner\" role=\"spinner\"><div class=\"spinner-icon\"></div></div>'\n    };\n\n    /**\n     * Updates configuration.\n     *\n     *     NProgress.configure({\n     *       minimum: 0.1\n     *     });\n     */\n    NProgress.configure = function(options) {\n      var key, value;\n      for (key in options) {\n        value = options[key];\n        if (value !== undefined && options.hasOwnProperty(key)) Settings[key] = value;\n      }\n\n      return this;\n    };\n\n    /**\n     * Last number.\n     */\n\n    NProgress.status = null;\n\n    /**\n     * Sets the progress bar status, where `n` is a number from `0.0` to `1.0`.\n     *\n     *     NProgress.set(0.4);\n     *     NProgress.set(1.0);\n     */\n\n    NProgress.set = function(n) {\n      var started = NProgress.isStarted();\n\n      n = clamp(n, Settings.minimum, 1);\n      NProgress.status = (n === 1 ? null : n);\n\n      var progress = NProgress.render(!started),\n          bar      = progress.querySelector(Settings.barSelector),\n          speed    = Settings.speed,\n          ease     = Settings.easing;\n\n      progress.offsetWidth; /* Repaint */\n\n      queue(function(next) {\n        // Set positionUsing if it hasn't already been set\n        if (Settings.positionUsing === '') Settings.positionUsing = NProgress.getPositioningCSS();\n\n        // Add transition\n        css(bar, barPositionCSS(n, speed, ease));\n\n        if (n === 1) {\n          // Fade out\n          css(progress, { \n            transition: 'none', \n            opacity: 1 \n          });\n          progress.offsetWidth; /* Repaint */\n\n          setTimeout(function() {\n            css(progress, { \n              transition: 'all ' + speed + 'ms linear', \n              opacity: 0 \n            });\n            setTimeout(function() {\n              NProgress.remove();\n              next();\n            }, speed);\n          }, speed);\n        } else {\n          setTimeout(next, speed);\n        }\n      });\n\n      return this;\n    };\n\n    NProgress.isStarted = function() {\n      return typeof NProgress.status === 'number';\n    };\n\n    /**\n     * Shows the progress bar.\n     * This is the same as setting the status to 0%, except that it doesn't go backwards.\n     *\n     *     NProgress.start();\n     *\n     */\n    NProgress.start = function() {\n      if (!NProgress.status) NProgress.set(0);\n\n      var work = function() {\n        setTimeout(function() {\n          if (!NProgress.status) return;\n          NProgress.trickle();\n          work();\n        }, Settings.trickleSpeed);\n      };\n\n      if (Settings.trickle) work();\n\n      return this;\n    };\n\n    /**\n     * Hides the progress bar.\n     * This is the *sort of* the same as setting the status to 100%, with the\n     * difference being `done()` makes some placebo effect of some realistic motion.\n     *\n     *     NProgress.done();\n     *\n     * If `true` is passed, it will show the progress bar even if its hidden.\n     *\n     *     NProgress.done(true);\n     */\n\n    NProgress.done = function(force) {\n      if (!force && !NProgress.status) return this;\n\n      return NProgress.inc(0.3 + 0.5 * Math.random()).set(1);\n    };\n\n    /**\n     * Increments by a random amount.\n     */\n\n    NProgress.inc = function(amount) {\n      var n = NProgress.status;\n\n      if (!n) {\n        return NProgress.start();\n      } else {\n        if (typeof amount !== 'number') {\n          amount = (1 - n) * clamp(Math.random() * n, 0.1, 0.95);\n        }\n\n        n = clamp(n + amount, 0, 0.994);\n        return NProgress.set(n);\n      }\n    };\n\n    NProgress.trickle = function() {\n      return NProgress.inc(Math.random() * Settings.trickleRate);\n    };\n\n    /**\n     * Waits for all supplied jQuery promises and\n     * increases the progress as the promises resolve.\n     *\n     * @param $promise jQUery Promise\n     */\n    (function() {\n      var initial = 0, current = 0;\n\n      NProgress.promise = function($promise) {\n        if (!$promise || $promise.state() === \"resolved\") {\n          return this;\n        }\n\n        if (current === 0) {\n          NProgress.start();\n        }\n\n        initial++;\n        current++;\n\n        $promise.always(function() {\n          current--;\n          if (current === 0) {\n              initial = 0;\n              NProgress.done();\n          } else {\n              NProgress.set((initial - current) / initial);\n          }\n        });\n\n        return this;\n      };\n\n    })();\n\n    /**\n     * (Internal) renders the progress bar markup based on the `template`\n     * setting.\n     */\n\n    NProgress.render = function(fromStart) {\n      if (NProgress.isRendered()) return document.getElementById('nprogress');\n\n      addClass(document.documentElement, 'nprogress-busy');\n      \n      var progress = document.createElement('div');\n      progress.id = 'nprogress';\n      progress.innerHTML = Settings.template;\n\n      var bar      = progress.querySelector(Settings.barSelector),\n          perc     = fromStart ? '-100' : toBarPerc(NProgress.status || 0),\n          parent   = document.querySelector(Settings.parent),\n          spinner;\n      \n      css(bar, {\n        transition: 'all 0 linear',\n        transform: 'translate3d(' + perc + '%,0,0)'\n      });\n\n      if (!Settings.showSpinner) {\n        spinner = progress.querySelector(Settings.spinnerSelector);\n        spinner && removeElement(spinner);\n      }\n\n      if (parent != document.body) {\n        addClass(parent, 'nprogress-custom-parent');\n      }\n\n      parent.appendChild(progress);\n      return progress;\n    };\n\n    /**\n     * Removes the element. Opposite of render().\n     */\n\n    NProgress.remove = function() {\n      removeClass(document.documentElement, 'nprogress-busy');\n      removeClass(document.querySelector(Settings.parent), 'nprogress-custom-parent');\n      var progress = document.getElementById('nprogress');\n      progress && removeElement(progress);\n    };\n\n    /**\n     * Checks if the progress bar is rendered.\n     */\n\n    NProgress.isRendered = function() {\n      return !!document.getElementById('nprogress');\n    };\n\n    /**\n     * Determine which positioning CSS rule to use.\n     */\n\n    NProgress.getPositioningCSS = function() {\n      // Sniff on document.body.style\n      var bodyStyle = document.body.style;\n\n      // Sniff prefixes\n      var vendorPrefix = ('WebkitTransform' in bodyStyle) ? 'Webkit' :\n                         ('MozTransform' in bodyStyle) ? 'Moz' :\n                         ('msTransform' in bodyStyle) ? 'ms' :\n                         ('OTransform' in bodyStyle) ? 'O' : '';\n\n      if (vendorPrefix + 'Perspective' in bodyStyle) {\n        // Modern browsers with 3D support, e.g. Webkit, IE10\n        return 'translate3d';\n      } else if (vendorPrefix + 'Transform' in bodyStyle) {\n        // Browsers without 3D support, e.g. IE9\n        return 'translate';\n      } else {\n        // Browsers without translate() support, e.g. IE7-8\n        return 'margin';\n      }\n    };\n\n    /**\n     * Helpers\n     */\n\n    function clamp(n, min, max) {\n      if (n < min) return min;\n      if (n > max) return max;\n      return n;\n    }\n\n    /**\n     * (Internal) converts a percentage (`0..1`) to a bar translateX\n     * percentage (`-100%..0%`).\n     */\n\n    function toBarPerc(n) {\n      return (-1 + n) * 100;\n    }\n\n\n    /**\n     * (Internal) returns the correct CSS for changing the bar's\n     * position given an n percentage, and speed and ease from Settings\n     */\n\n    function barPositionCSS(n, speed, ease) {\n      var barCSS;\n\n      if (Settings.positionUsing === 'translate3d') {\n        barCSS = { transform: 'translate3d('+toBarPerc(n)+'%,0,0)' };\n      } else if (Settings.positionUsing === 'translate') {\n        barCSS = { transform: 'translate('+toBarPerc(n)+'%,0)' };\n      } else {\n        barCSS = { 'margin-left': toBarPerc(n)+'%' };\n      }\n\n      barCSS.transition = 'all '+speed+'ms '+ease;\n\n      return barCSS;\n    }\n\n    /**\n     * (Internal) Queues a function to be executed.\n     */\n\n    var queue = (function() {\n      var pending = [];\n      \n      function next() {\n        var fn = pending.shift();\n        if (fn) {\n          fn(next);\n        }\n      }\n\n      return function(fn) {\n        pending.push(fn);\n        if (pending.length == 1) next();\n      };\n    })();\n\n    /**\n     * (Internal) Applies css properties to an element, similar to the jQuery \n     * css method.\n     *\n     * While this helper does assist with vendor prefixed property names, it \n     * does not perform any manipulation of values prior to setting styles.\n     */\n\n    var css = (function() {\n      var cssPrefixes = [ 'Webkit', 'O', 'Moz', 'ms' ],\n          cssProps    = {};\n\n      function camelCase(string) {\n        return string.replace(/^-ms-/, 'ms-').replace(/-([\\da-z])/gi, function(match, letter) {\n          return letter.toUpperCase();\n        });\n      }\n\n      function getVendorProp(name) {\n        var style = document.body.style;\n        if (name in style) return name;\n\n        var i = cssPrefixes.length,\n            capName = name.charAt(0).toUpperCase() + name.slice(1),\n            vendorName;\n        while (i--) {\n          vendorName = cssPrefixes[i] + capName;\n          if (vendorName in style) return vendorName;\n        }\n\n        return name;\n      }\n\n      function getStyleProp(name) {\n        name = camelCase(name);\n        return cssProps[name] || (cssProps[name] = getVendorProp(name));\n      }\n\n      function applyCss(element, prop, value) {\n        prop = getStyleProp(prop);\n        element.style[prop] = value;\n      }\n\n      return function(element, properties) {\n        var args = arguments,\n            prop, \n            value;\n\n        if (args.length == 2) {\n          for (prop in properties) {\n            value = properties[prop];\n            if (value !== undefined && properties.hasOwnProperty(prop)) applyCss(element, prop, value);\n          }\n        } else {\n          applyCss(element, args[1], args[2]);\n        }\n      }\n    })();\n\n    /**\n     * (Internal) Determines if an element or space separated list of class names contains a class name.\n     */\n\n    function hasClass(element, name) {\n      var list = typeof element == 'string' ? element : classList(element);\n      return list.indexOf(' ' + name + ' ') >= 0;\n    }\n\n    /**\n     * (Internal) Adds a class to an element.\n     */\n\n    function addClass(element, name) {\n      var oldList = classList(element),\n          newList = oldList + name;\n\n      if (hasClass(oldList, name)) return; \n\n      // Trim the opening space.\n      element.className = newList.substring(1);\n    }\n\n    /**\n     * (Internal) Removes a class from an element.\n     */\n\n    function removeClass(element, name) {\n      var oldList = classList(element),\n          newList;\n\n      if (!hasClass(element, name)) return;\n\n      // Replace the class name.\n      newList = oldList.replace(' ' + name + ' ', ' ');\n\n      // Trim the opening and closing spaces.\n      element.className = newList.substring(1, newList.length - 1);\n    }\n\n    /**\n     * (Internal) Gets a space separated list of the class names on the element. \n     * The list is wrapped with a single space on each end to facilitate finding \n     * matches within the list.\n     */\n\n    function classList(element) {\n      return (' ' + (element.className || '') + ' ').replace(/\\s+/gi, ' ');\n    }\n\n    /**\n     * (Internal) Removes an element from the DOM.\n     */\n\n    function removeElement(element) {\n      element && element.parentNode && element.parentNode.removeChild(element);\n    }\n\n    return NProgress;\n  }\n\n  return nprogress;\n\n});\n\n\n\ndefine('skylark-nprogress/main',[\r\n\t\"./nprogress\"\r\n],function(nprogress){\r\n\treturn nprogress;\r\n});\ndefine('skylark-nprogress', ['skylark-nprogress/main'], function (main) { return main; });\n\n"]}