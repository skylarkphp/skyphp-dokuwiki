{"version":3,"sources":["toJSON.js"],"names":["define","langx","css","Parser","Parsing","klass","init","options","this","_ordered","ordered","begin","stack","_stack","push","_result","end","error","length","Error","beginBlock","rule","endBlock","order","_orderd","pop","top","values","isArray","obj","name","prop","value","important","result","toJSON","parser","starHack","ieFilters","strict","sheet","addListener","event","charset","key","prefix","uri","selectors","i","len","keys","selector","text","log","id","pseudo","margin","media","property","parse","document","getElementById"],"mappings":"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","file":"../toJSON.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"./css\",\r\n    \"./Parser\"\r\n], function(langx, css, Parser) {\r\n\r\n\tvar Parsing = langx.klass({\r\n\t\t\"init\" : function(options) {\r\n\r\n\t\t\tthis._ordered = (options && options.ordered) || false;\r\n\t\t},\r\n\r\n\t\t\"begin\" : function() {\r\n\t\t\tvar ordered = this._ordered,\r\n\t\t\t\tstack = this._stack = [];\r\n\t\t\tif (ordered) {\r\n\t\t\t\tstack.push([]);\r\n\t\t\t} else {\r\n\t\t\t\tstack.push({});\r\n\t\t\t}\r\n\r\n\t\t\tthis._result = null;\r\n\r\n\t\t},\r\n\r\n\t\t\"end\" : function(error) {\r\n\t    \tvar stack = this._stack;\r\n\t    \tthis._stack = null;\r\n\r\n\t    \tif (error || stack.length !== 1) {\r\n\t    \t\tthrow new Error(\"parse error\");\r\n\t    \t} else {\r\n\t\t\t\tthis._result =  stack[0];\r\n\t    \t}\r\n\r\n\r\n\t    \treturn this._result;\r\n\t\t},\r\n\r\n\t\t\"beginBlock\" : function(rule) {\r\n\t    \tthis._stack.push(rule);\r\n\t\t},\r\n\r\n\t\t\"endBlock\" : function(order) {\r\n\t    \tvar ordered = order && this._orderd,\r\n\t    \t\tstack = this._stack,\r\n\t    \t\trule = stack.pop(),\r\n\t    \t\ttop = stack[stack.length-1],\r\n                values = top.values || top;\r\n\t    \tif (langx.isArray(values)){\r\n\t    \t\tvar obj = {};\r\n\t    \t\tobj[rule.name] = rule.values;\r\n\t    \t\tvalues.push(obj);\r\n\t    \t} else {\r\n\t    \t\tvalues[rule.name] = rule.values;\r\n\t    \t}\r\n\t\t},\r\n\r\n\t\t\"prop\" : function(name,value,important) {\r\n\t\t\tif (important) {\r\n\t\t\t\tvalue = value + \" !important\";\r\n\t\t\t}\r\n\t    \tvar stack = this._stack,\r\n\t    \t\ttop = stack[stack.length-1];\r\n    \t\ttop.values[name] = value;\r\n\t\t},\r\n\r\n\t\t\"result\" : function() {\r\n\t\t\treturn this._result;\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\tfunction toJSON(css,order) {\r\n\t\t\r\n\t    var parser = new Parser({ \r\n\t    \t\t\t\t\tstarHack: false,\r\n\t                        ieFilters: false,\r\n\t                        strict: false\r\n\t                     }),\r\n\t   \t    sheet = new Parsing(order);\r\n  \r\n\t    parser.addListener(\"startstylesheet\", function(){\r\n\t    \tsheet.begin();\r\n\t    });\r\n\t    \r\n\t    parser.addListener(\"endstylesheet\", function(){\r\n\t    \tsheet.end();\r\n\t    });\r\n\t    \r\n\t    parser.addListener(\"charset\", function(event){\r\n\t\t\tsheet.beginBlock({\r\n\t    \t\tname : \"@charset\",\r\n\t    \t\tvalues :event.charset\r\n\t    \t});\r\n\t    \tsheet.endBlock();\r\n\t    });\r\n\t    \r\n\t    parser.addListener(\"namespace\", function(event){\r\n\t    \tvar key = \"@Namespace\";\r\n\t    \tif (event.prefix) {\r\n\t    \t\tkey = key + \" \" + event.prefix;\r\n\t    \t}\r\n\t    \tsheet.beginBlock({\r\n\t    \t\tname : key,\r\n\t    \t\tvalues : \"\\\"\" + event.uri + \"\\\"\"\r\n\t    \t});\r\n\t    \tsheet.endBlock();\r\n\t    });\r\n\t    \r\n\t    parser.addListener(\"startfontface\", function(event){\r\n\t    });\r\n\t    \r\n\t    parser.addListener(\"endfontface\", function(event){\r\n\t    });\r\n\t    \r\n\t    parser.addListener(\"startkeyframes\", function(event){\r\n\t    \tsheet.beginBlock({\r\n\t    \t\tname : \"@keyframes \" + event.name,\r\n\t    \t\tvalues :{}\r\n\t    \t});\r\n\t    });\r\n\t    \r\n\t    parser.addListener(\"startkeyframerule\", function(event){\r\n\t\t\tvar selectors = \"\";\t        \r\n\t        for (var i=0,len=event.keys.length; i < len; i++){\r\n\t        \tvar selector = event.keys[i].text;\r\n\t        \tif (selectors) {\r\n\t        \t\tselectors = selectors + \",\" + selector\r\n\t        \t} else {\r\n\t        \t\tselectors = selector;\r\n\t        \t}\r\n\t        }\r\n\t    \tsheet.beginBlock({\r\n\t    \t\tname : selectors,\r\n\t    \t\tvalues :{}\r\n\t    \t});\r\n\t    });\r\n\t    \r\n\t    parser.addListener(\"endkeyframerule\", function(event){\r\n\t    \tsheet.endBlock(false);\r\n\t    });    \r\n\t    \r\n\t    parser.addListener(\"endkeyframes\", function(event){\r\n\t    \tsheet.endBlock(false);\r\n\t    });\r\n\t    \r\n\t    parser.addListener(\"startpage\", function(event){\r\n\t        log(\"Starting page with ID=\" + event.id + \" and pseudo=\" + event.pseudo);\r\n            var key = \"@page\";\r\n            if (event.pseudo) {\r\n                key = key + \" \" + event.pseudo;\r\n            }\r\n            sheet.beginBlock({\r\n                name : key,\r\n                values :{}\r\n            });\r\n\t    });\r\n\t    \r\n\t    \r\n\t    parser.addListener(\"endpage\", function(event){\r\n\t        log(\"Ending page with ID=\" + event.id + \" and pseudo=\" + event.pseudo);\r\n            sheet.endBlock(false);\r\n\t    });\r\n\r\n\t    parser.addListener(\"startpagemargin\", function(event){\r\n\t        log(\"Starting page margin \" + event.margin);\r\n            sheet.beginBlock({\r\n                name : \"@page-margin\",\r\n                values :{}\r\n            });\r\n\t    });\r\n\t    \r\n\t    \r\n\t    parser.addListener(\"endpagemargin\", function(event){\r\n\t        log(\"Ending page margin \" + event.margin);\r\n            sheet.endBlock(false);\r\n\t    });\r\n\r\n        parser.addListener(\"starttopcenter\", function(event){\r\n            //log(\"Starting top center \" + event.center);\r\n            sheet.beginBlock({\r\n                name : \"@top-center\",\r\n                values :{}\r\n            });\r\n        });\r\n        \r\n        \r\n        parser.addListener(\"endtopcenter\", function(event){\r\n            //log(\"Ending Top Center \" + event.center);\r\n            sheet.endBlock(false);\r\n        });\r\n\t    \r\n\t    parser.addListener(\"import\", function(event){\r\n\t        log(\"Importing \" + event.uri + \" for media types [\" + event.media + \"]\");\r\n            var key = \"@import \" + event.uri;\r\n            if (event.media) {\r\n                key = key + \" \" + event.media;\r\n            }\r\n            sheet.beginBlock({\r\n                name : key,\r\n                values : \"\"\r\n            });\r\n            sheet.endBlock(true);\r\n\t    });\r\n\t    \r\n\t    parser.addListener(\"startrule\", function(event){\r\n\t\t\tvar selectors = \"\";\t        \r\n\t        for (var i=0,len=event.selectors.length; i < len; i++){\r\n\t            var selector = event.selectors[i];\r\n\t            \r\n\t            if (selectors) {\r\n\t            \tselectors = selectors + \",\" + selector.text;\r\n\t            } else {\r\n\t            \tselectors = selector.text;\r\n\t            }\r\n\t        }\r\n\r\n\t    \tsheet.beginBlock({\r\n\t    \t\tname : selectors,\r\n\t    \t\tvalues :{}\r\n\t    \t});\r\n\t    });\r\n\t    \r\n\t    parser.addListener(\"endrule\", function(event){\r\n\t    \tsheet.endBlock(true);\r\n\t    });\r\n\t    \r\n\t    parser.addListener(\"property\", function(event){\r\n\r\n\t        sheet.prop(event.property.text,event.value.text,event.important);\r\n\t    });\r\n\t    \r\n\t    parser.addListener(\"startmedia\", function(event){\r\n\t    \tsheet.beginBlock({\r\n\t    \t\tname : \"@media \" + event.media,\r\n\t    \t\tvalues :{}\r\n\t    \t});\r\n\r\n\t    });\r\n\t    \r\n\t    parser.addListener(\"endmedia\", function(event){\r\n\t    \tsheet.endBlock(true);\r\n\t    });    \r\n\r\n\r\n\t    parser.addListener(\"error\", function(event){\r\n\t    \tsheet.end(false);\r\n\t    });\r\n\r\n        parser.parse(document.getElementById(\"input\").value);\r\n\r\n\t    return sheet.result();\r\n\r\n\t}\r\n\r\n\treturn css.toJSON = toJSON;\r\n});"]}