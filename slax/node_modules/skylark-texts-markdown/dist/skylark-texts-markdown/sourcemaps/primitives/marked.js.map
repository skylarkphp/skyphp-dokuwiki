{"version":3,"sources":["primitives/marked.js"],"names":["define","block","newline","code","fences","noop","hr","heading","nptable","lheading","blockquote","list","html","def","table","paragraph","text","Lexer","options","this","tokens","links","marked","defaults","rules","normal","gfm","tables","bullet","item","replace","source","_tag","merge","lex","src","prototype","token","top","bq","next","loose","cap","bull","b","space","i","l","exec","substring","length","push","type","pedantic","lang","depth","header","split","align","cells","test","ordered","match","indexOf","RegExp","smartLists","slice","join","charAt","sanitize","pre","toLowerCase","href","title","Error","charCodeAt","inline","escape","autolink","url","tag","link","reflink","nolink","strong","em","br","del","InlineLexer","renderer","Renderer","breaks","Parser","encode","regex","opt","self","name","val","obj","target","key","arguments","Object","hasOwnProperty","call","callback","pending","highlight","e","done","err","out","parse","escaped","message","silent","_inside","_href","output","mangle","inLink","outputLink","codespan","smartypants","image","ch","Math","random","toString","langPrefix","quote","level","raw","headerPrefix","xhtml","body","listitem","tablerow","content","tablecell","flags","prot","decodeURIComponent","_","n","String","fromCharCode","parseInt","reverse","tok","pop","peek","parseText","row","cell","j","setOptions","parser","lexer","inlineLexer"],"mappings":"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","file":"../../primitives/marked.js","sourcesContent":["define([],function() {\r\n  /**\r\n   * marked - a markdown parser\r\n   * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\r\n   * https://github.com/chjj/marked\r\n   */\r\n\r\n  /**\r\n   * Block-Level Grammar\r\n   */\r\n\r\n  var block = {\r\n    newline: /^\\n+/,\r\n    code: /^( {4}[^\\n]+\\n*)+/,\r\n    fences: noop,\r\n    hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\r\n    heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\r\n    nptable: noop,\r\n    lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\r\n    blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\r\n    list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\r\n    html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\r\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\r\n    table: noop,\r\n    paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\r\n    text: /^[^\\n]+/\r\n  };\r\n\r\n  block.bullet = /(?:[*+-]|\\d+\\.)/;\r\n  block.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\r\n  block.item = replace(block.item, 'gm')\r\n    (/bull/g, block.bullet)\r\n    ();\r\n\r\n  block.list = replace(block.list)\r\n    (/bull/g, block.bullet)\r\n    ('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')\r\n    ('def', '\\\\n+(?=' + block.def.source + ')')\r\n    ();\r\n\r\n  block.blockquote = replace(block.blockquote)\r\n    ('def', block.def)\r\n    ();\r\n\r\n  block._tag = '(?!(?:'\r\n    + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\r\n    + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\r\n    + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\r\n\r\n  block.html = replace(block.html)\r\n    ('comment', /<!--[\\s\\S]*?-->/)\r\n    ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\r\n    ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\r\n    (/tag/g, block._tag)\r\n    ();\r\n\r\n  block.paragraph = replace(block.paragraph)\r\n    ('hr', block.hr)\r\n    ('heading', block.heading)\r\n    ('lheading', block.lheading)\r\n    ('blockquote', block.blockquote)\r\n    ('tag', '<' + block._tag)\r\n    ('def', block.def)\r\n    ();\r\n\r\n  /**\r\n   * Normal Block Grammar\r\n   */\r\n\r\n  block.normal = merge({}, block);\r\n\r\n  /**\r\n   * GFM Block Grammar\r\n   */\r\n\r\n  block.gfm = merge({}, block.normal, {\r\n    fences: /^ *(`{3,}|~{3,}) *(\\S+)? *\\n([\\s\\S]+?)\\s*\\1 *(?:\\n+|$)/,\r\n    paragraph: /^/\r\n  });\r\n\r\n  block.gfm.paragraph = replace(block.paragraph)\r\n    ('(?!', '(?!'\r\n      + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\r\n      + block.list.source.replace('\\\\1', '\\\\3') + '|')\r\n    ();\r\n\r\n  /**\r\n   * GFM + Tables Block Grammar\r\n   */\r\n\r\n  block.tables = merge({}, block.gfm, {\r\n    nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\r\n    table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\r\n  });\r\n\r\n  /**\r\n   * Block Lexer\r\n   */\r\n\r\n  function Lexer(options) {\r\n    this.tokens = [];\r\n    this.tokens.links = {};\r\n    this.options = options || marked.defaults;\r\n    this.rules = block.normal;\r\n\r\n    if (this.options.gfm) {\r\n      if (this.options.tables) {\r\n        this.rules = block.tables;\r\n      } else {\r\n        this.rules = block.gfm;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Expose Block Rules\r\n   */\r\n\r\n  Lexer.rules = block;\r\n\r\n  /**\r\n   * Static Lex Method\r\n   */\r\n\r\n  Lexer.lex = function(src, options) {\r\n    var lexer = new Lexer(options);\r\n    return lexer.lex(src);\r\n  };\r\n\r\n  /**\r\n   * Preprocessing\r\n   */\r\n\r\n  Lexer.prototype.lex = function(src) {\r\n    src = src\r\n      .replace(/\\r\\n|\\r/g, '\\n')\r\n      .replace(/\\t/g, '    ')\r\n      .replace(/\\u00a0/g, ' ')\r\n      .replace(/\\u2424/g, '\\n');\r\n\r\n    return this.token(src, true);\r\n  };\r\n\r\n  /**\r\n   * Lexing\r\n   */\r\n\r\n  Lexer.prototype.token = function(src, top, bq) {\r\n    var src = src.replace(/^ +$/gm, '')\r\n      , next\r\n      , loose\r\n      , cap\r\n      , bull\r\n      , b\r\n      , item\r\n      , space\r\n      , i\r\n      , l;\r\n\r\n    while (src) {\r\n      // newline\r\n      if (cap = this.rules.newline.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        if (cap[0].length > 1) {\r\n          this.tokens.push({\r\n            type: 'space'\r\n          });\r\n        }\r\n      }\r\n\r\n      // code\r\n      if (cap = this.rules.code.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        cap = cap[0].replace(/^ {4}/gm, '');\r\n        this.tokens.push({\r\n          type: 'code',\r\n          text: !this.options.pedantic\r\n            ? cap.replace(/\\n+$/, '')\r\n            : cap\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // fences (gfm)\r\n      if (cap = this.rules.fences.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'code',\r\n          lang: cap[2],\r\n          text: cap[3]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // heading\r\n      if (cap = this.rules.heading.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'heading',\r\n          depth: cap[1].length,\r\n          text: cap[2]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // table no leading pipe (gfm)\r\n      if (top && (cap = this.rules.nptable.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n\r\n        item = {\r\n          type: 'table',\r\n          header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\r\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\r\n          cells: cap[3].replace(/\\n$/, '').split('\\n')\r\n        };\r\n\r\n        for (i = 0; i < item.align.length; i++) {\r\n          if (/^ *-+: *$/.test(item.align[i])) {\r\n            item.align[i] = 'right';\r\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\r\n            item.align[i] = 'center';\r\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\r\n            item.align[i] = 'left';\r\n          } else {\r\n            item.align[i] = null;\r\n          }\r\n        }\r\n\r\n        for (i = 0; i < item.cells.length; i++) {\r\n          item.cells[i] = item.cells[i].split(/ *\\| */);\r\n        }\r\n\r\n        this.tokens.push(item);\r\n\r\n        continue;\r\n      }\r\n\r\n      // lheading\r\n      if (cap = this.rules.lheading.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'heading',\r\n          depth: cap[2] === '=' ? 1 : 2,\r\n          text: cap[1]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // hr\r\n      if (cap = this.rules.hr.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'hr'\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // blockquote\r\n      if (cap = this.rules.blockquote.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n\r\n        this.tokens.push({\r\n          type: 'blockquote_start'\r\n        });\r\n\r\n        cap = cap[0].replace(/^ *> ?/gm, '');\r\n\r\n        // Pass `top` to keep the current\r\n        // \"toplevel\" state. This is exactly\r\n        // how markdown.pl works.\r\n        this.token(cap, top, true);\r\n\r\n        this.tokens.push({\r\n          type: 'blockquote_end'\r\n        });\r\n\r\n        continue;\r\n      }\r\n\r\n      // list\r\n      if (cap = this.rules.list.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        bull = cap[2];\r\n\r\n        this.tokens.push({\r\n          type: 'list_start',\r\n          ordered: bull.length > 1\r\n        });\r\n\r\n        // Get each top-level item.\r\n        cap = cap[0].match(this.rules.item);\r\n\r\n        next = false;\r\n        l = cap.length;\r\n        i = 0;\r\n\r\n        for (; i < l; i++) {\r\n          item = cap[i];\r\n\r\n          // Remove the list item's bullet\r\n          // so it is seen as the next token.\r\n          space = item.length;\r\n          item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\r\n\r\n          // Outdent whatever the\r\n          // list item contains. Hacky.\r\n          if (~item.indexOf('\\n ')) {\r\n            space -= item.length;\r\n            item = !this.options.pedantic\r\n              ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\r\n              : item.replace(/^ {1,4}/gm, '');\r\n          }\r\n\r\n          // Determine whether the next list item belongs here.\r\n          // Backpedal if it does not belong in this list.\r\n          if (this.options.smartLists && i !== l - 1) {\r\n            b = block.bullet.exec(cap[i + 1])[0];\r\n            if (bull !== b && !(bull.length > 1 && b.length > 1)) {\r\n              src = cap.slice(i + 1).join('\\n') + src;\r\n              i = l - 1;\r\n            }\r\n          }\r\n\r\n          // Determine whether item is loose or not.\r\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\r\n          // for discount behavior.\r\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\r\n          if (i !== l - 1) {\r\n            next = item.charAt(item.length - 1) === '\\n';\r\n            if (!loose) loose = next;\r\n          }\r\n\r\n          this.tokens.push({\r\n            type: loose\r\n              ? 'loose_item_start'\r\n              : 'list_item_start'\r\n          });\r\n\r\n          // Recurse.\r\n          this.token(item, false, bq);\r\n\r\n          this.tokens.push({\r\n            type: 'list_item_end'\r\n          });\r\n        }\r\n\r\n        this.tokens.push({\r\n          type: 'list_end'\r\n        });\r\n\r\n        continue;\r\n      }\r\n\r\n      // html\r\n      if (cap = this.rules.html.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: this.options.sanitize\r\n            ? 'paragraph'\r\n            : 'html',\r\n          pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\r\n          text: cap[0]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // def\r\n      if ((!bq && top) && (cap = this.rules.def.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.links[cap[1].toLowerCase()] = {\r\n          href: cap[2],\r\n          title: cap[3]\r\n        };\r\n        continue;\r\n      }\r\n\r\n      // table (gfm)\r\n      if (top && (cap = this.rules.table.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n\r\n        item = {\r\n          type: 'table',\r\n          header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\r\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\r\n          cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\r\n        };\r\n\r\n        for (i = 0; i < item.align.length; i++) {\r\n          if (/^ *-+: *$/.test(item.align[i])) {\r\n            item.align[i] = 'right';\r\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\r\n            item.align[i] = 'center';\r\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\r\n            item.align[i] = 'left';\r\n          } else {\r\n            item.align[i] = null;\r\n          }\r\n        }\r\n\r\n        for (i = 0; i < item.cells.length; i++) {\r\n          item.cells[i] = item.cells[i]\r\n            .replace(/^ *\\| *| *\\| *$/g, '')\r\n            .split(/ *\\| */);\r\n        }\r\n\r\n        this.tokens.push(item);\r\n\r\n        continue;\r\n      }\r\n\r\n      // top-level paragraph\r\n      if (top && (cap = this.rules.paragraph.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'paragraph',\r\n          text: cap[1].charAt(cap[1].length - 1) === '\\n'\r\n            ? cap[1].slice(0, -1)\r\n            : cap[1]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // text\r\n      if (cap = this.rules.text.exec(src)) {\r\n        // Top-level should never reach here.\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'text',\r\n          text: cap[0]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      if (src) {\r\n        throw new\r\n          Error('Infinite loop on byte: ' + src.charCodeAt(0));\r\n      }\r\n    }\r\n\r\n    return this.tokens;\r\n  };\r\n\r\n  /**\r\n   * Inline-Level Grammar\r\n   */\r\n\r\n  var inline = {\r\n    escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\r\n    autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\r\n    url: noop,\r\n    tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\r\n    link: /^!?\\[(inside)\\]\\(href\\)/,\r\n    reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\r\n    nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\r\n    strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\r\n    em: /^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\r\n    code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\r\n    br: /^ {2,}\\n(?!\\s*$)/,\r\n    del: noop,\r\n    text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\r\n  };\r\n\r\n  inline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\r\n  inline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\r\n\r\n  inline.link = replace(inline.link)\r\n    ('inside', inline._inside)\r\n    ('href', inline._href)\r\n    ();\r\n\r\n  inline.reflink = replace(inline.reflink)\r\n    ('inside', inline._inside)\r\n    ();\r\n\r\n  /**\r\n   * Normal Inline Grammar\r\n   */\r\n\r\n  inline.normal = merge({}, inline);\r\n\r\n  /**\r\n   * Pedantic Inline Grammar\r\n   */\r\n\r\n  inline.pedantic = merge({}, inline.normal, {\r\n    strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\r\n    em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\r\n  });\r\n\r\n  /**\r\n   * GFM Inline Grammar\r\n   */\r\n\r\n  inline.gfm = merge({}, inline.normal, {\r\n    escape: replace(inline.escape)('])', '~|])')(),\r\n    url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\r\n    del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\r\n    text: replace(inline.text)\r\n      (']|', '~]|')\r\n      ('|', '|https?://|')\r\n      ()\r\n  });\r\n\r\n  /**\r\n   * GFM + Line Breaks Inline Grammar\r\n   */\r\n\r\n  inline.breaks = merge({}, inline.gfm, {\r\n    br: replace(inline.br)('{2,}', '*')(),\r\n    text: replace(inline.gfm.text)('{2,}', '*')()\r\n  });\r\n\r\n  /**\r\n   * Inline Lexer & Compiler\r\n   */\r\n\r\n  function InlineLexer(links, options) {\r\n    this.options = options || marked.defaults;\r\n    this.links = links;\r\n    this.rules = inline.normal;\r\n    this.renderer = this.options.renderer || new Renderer;\r\n    this.renderer.options = this.options;\r\n\r\n    if (!this.links) {\r\n      throw new\r\n        Error('Tokens array requires a `links` property.');\r\n    }\r\n\r\n    if (this.options.gfm) {\r\n      if (this.options.breaks) {\r\n        this.rules = inline.breaks;\r\n      } else {\r\n        this.rules = inline.gfm;\r\n      }\r\n    } else if (this.options.pedantic) {\r\n      this.rules = inline.pedantic;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Expose Inline Rules\r\n   */\r\n\r\n  InlineLexer.rules = inline;\r\n\r\n  /**\r\n   * Static Lexing/Compiling Method\r\n   */\r\n\r\n  InlineLexer.output = function(src, links, options) {\r\n    var inline = new InlineLexer(links, options);\r\n    return inline.output(src);\r\n  };\r\n\r\n  /**\r\n   * Lexing/Compiling\r\n   */\r\n\r\n  InlineLexer.prototype.output = function(src) {\r\n    var out = ''\r\n      , link\r\n      , text\r\n      , href\r\n      , cap;\r\n\r\n    while (src) {\r\n      // escape\r\n      if (cap = this.rules.escape.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += cap[1];\r\n        continue;\r\n      }\r\n\r\n      // autolink\r\n      if (cap = this.rules.autolink.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        if (cap[2] === '@') {\r\n          text = cap[1].charAt(6) === ':'\r\n            ? this.mangle(cap[1].substring(7))\r\n            : this.mangle(cap[1]);\r\n          href = this.mangle('mailto:') + text;\r\n        } else {\r\n          text = escape(cap[1]);\r\n          href = text;\r\n        }\r\n        out += this.renderer.link(href, null, text);\r\n        continue;\r\n      }\r\n\r\n      // url (gfm)\r\n      if (!this.inLink && (cap = this.rules.url.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n        text = escape(cap[1]);\r\n        href = text;\r\n        out += this.renderer.link(href, null, text);\r\n        continue;\r\n      }\r\n\r\n      // tag\r\n      if (cap = this.rules.tag.exec(src)) {\r\n        if (!this.inLink && /^<a /i.test(cap[0])) {\r\n          this.inLink = true;\r\n        } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\r\n          this.inLink = false;\r\n        }\r\n        src = src.substring(cap[0].length);\r\n        out += this.options.sanitize\r\n          ? escape(cap[0])\r\n          : cap[0];\r\n        continue;\r\n      }\r\n\r\n      // link\r\n      if (cap = this.rules.link.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.inLink = true;\r\n        out += this.outputLink(cap, {\r\n          href: cap[2],\r\n          title: cap[3]\r\n        });\r\n        this.inLink = false;\r\n        continue;\r\n      }\r\n\r\n      // reflink, nolink\r\n      if ((cap = this.rules.reflink.exec(src))\r\n          || (cap = this.rules.nolink.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n        link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\r\n        link = this.links[link.toLowerCase()];\r\n        if (!link || !link.href) {\r\n          out += cap[0].charAt(0);\r\n          src = cap[0].substring(1) + src;\r\n          continue;\r\n        }\r\n        this.inLink = true;\r\n        out += this.outputLink(cap, link);\r\n        this.inLink = false;\r\n        continue;\r\n      }\r\n\r\n      // strong\r\n      if (cap = this.rules.strong.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += this.renderer.strong(this.output(cap[2] || cap[1]));\r\n        continue;\r\n      }\r\n\r\n      // em\r\n      if (cap = this.rules.em.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += this.renderer.em(this.output(cap[2] || cap[1]));\r\n        continue;\r\n      }\r\n\r\n      // code\r\n      if (cap = this.rules.code.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += this.renderer.codespan(escape(cap[2], true));\r\n        continue;\r\n      }\r\n\r\n      // br\r\n      if (cap = this.rules.br.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += this.renderer.br();\r\n        continue;\r\n      }\r\n\r\n      // del (gfm)\r\n      if (cap = this.rules.del.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += this.renderer.del(this.output(cap[1]));\r\n        continue;\r\n      }\r\n\r\n      // text\r\n      if (cap = this.rules.text.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += escape(this.smartypants(cap[0]));\r\n        continue;\r\n      }\r\n\r\n      if (src) {\r\n        throw new\r\n          Error('Infinite loop on byte: ' + src.charCodeAt(0));\r\n      }\r\n    }\r\n\r\n    return out;\r\n  };\r\n\r\n  /**\r\n   * Compile Link\r\n   */\r\n\r\n  InlineLexer.prototype.outputLink = function(cap, link) {\r\n    var href = escape(link.href)\r\n      , title = link.title ? escape(link.title) : null;\r\n\r\n    return cap[0].charAt(0) !== '!'\r\n      ? this.renderer.link(href, title, this.output(cap[1]))\r\n      : this.renderer.image(href, title, escape(cap[1]));\r\n  };\r\n\r\n  /**\r\n   * Smartypants Transformations\r\n   */\r\n\r\n  InlineLexer.prototype.smartypants = function(text) {\r\n    if (!this.options.smartypants) return text;\r\n    return text\r\n      // em-dashes\r\n      .replace(/--/g, '\\u2014')\r\n      // opening singles\r\n      .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\r\n      // closing singles & apostrophes\r\n      .replace(/'/g, '\\u2019')\r\n      // opening doubles\r\n      .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\r\n      // closing doubles\r\n      .replace(/\"/g, '\\u201d')\r\n      // ellipses\r\n      .replace(/\\.{3}/g, '\\u2026');\r\n  };\r\n\r\n  /**\r\n   * Mangle Links\r\n   */\r\n\r\n  InlineLexer.prototype.mangle = function(text) {\r\n    var out = ''\r\n      , l = text.length\r\n      , i = 0\r\n      , ch;\r\n\r\n    for (; i < l; i++) {\r\n      ch = text.charCodeAt(i);\r\n      if (Math.random() > 0.5) {\r\n        ch = 'x' + ch.toString(16);\r\n      }\r\n      out += '&#' + ch + ';';\r\n    }\r\n\r\n    return out;\r\n  };\r\n\r\n  /**\r\n   * Renderer\r\n   */\r\n\r\n  function Renderer(options) {\r\n    this.options = options || {};\r\n  }\r\n\r\n  Renderer.prototype.code = function(code, lang, escaped) {\r\n    if (this.options.highlight) {\r\n      var out = this.options.highlight(code, lang);\r\n      if (out != null && out !== code) {\r\n        escaped = true;\r\n        code = out;\r\n      }\r\n    }\r\n\r\n    if (!lang) {\r\n      return '<pre><code>'\r\n        + (escaped ? code : escape(code, true))\r\n        + '\\n</code></pre>';\r\n    }\r\n\r\n    return '<pre><code class=\"'\r\n      + this.options.langPrefix\r\n      + escape(lang, true)\r\n      + '\">'\r\n      + (escaped ? code : escape(code, true))\r\n      + '\\n</code></pre>\\n';\r\n  };\r\n\r\n  Renderer.prototype.blockquote = function(quote) {\r\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\r\n  };\r\n\r\n  Renderer.prototype.html = function(html) {\r\n    return html;\r\n  };\r\n\r\n  Renderer.prototype.heading = function(text, level, raw) {\r\n    return '<h'\r\n      + level\r\n      + ' id=\"'\r\n      + this.options.headerPrefix\r\n      + raw.toLowerCase().replace(/[^\\w]+/g, '-')\r\n      + '\">'\r\n      + text\r\n      + '</h'\r\n      + level\r\n      + '>\\n';\r\n  };\r\n\r\n  Renderer.prototype.hr = function() {\r\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\r\n  };\r\n\r\n  Renderer.prototype.list = function(body, ordered) {\r\n    var type = ordered ? 'ol' : 'ul';\r\n    return '<' + type + '>\\n' + body + '</' + type + '>\\n';\r\n  };\r\n\r\n  Renderer.prototype.listitem = function(text) {\r\n    return '<li>' + text + '</li>\\n';\r\n  };\r\n\r\n  Renderer.prototype.paragraph = function(text) {\r\n    return '<p>' + text + '</p>\\n';\r\n  };\r\n\r\n  Renderer.prototype.table = function(header, body) {\r\n    return '<table>\\n'\r\n      + '<thead>\\n'\r\n      + header\r\n      + '</thead>\\n'\r\n      + '<tbody>\\n'\r\n      + body\r\n      + '</tbody>\\n'\r\n      + '</table>\\n';\r\n  };\r\n\r\n  Renderer.prototype.tablerow = function(content) {\r\n    return '<tr>\\n' + content + '</tr>\\n';\r\n  };\r\n\r\n  Renderer.prototype.tablecell = function(content, flags) {\r\n    var type = flags.header ? 'th' : 'td';\r\n    var tag = flags.align\r\n      ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\r\n      : '<' + type + '>';\r\n    return tag + content + '</' + type + '>\\n';\r\n  };\r\n\r\n  // span level renderer\r\n  Renderer.prototype.strong = function(text) {\r\n    return '<strong>' + text + '</strong>';\r\n  };\r\n\r\n  Renderer.prototype.em = function(text) {\r\n    return '<em>' + text + '</em>';\r\n  };\r\n\r\n  Renderer.prototype.codespan = function(text) {\r\n    return '<code>' + text + '</code>';\r\n  };\r\n\r\n  Renderer.prototype.br = function() {\r\n    return this.options.xhtml ? '<br/>' : '<br>';\r\n  };\r\n\r\n  Renderer.prototype.del = function(text) {\r\n    return '<del>' + text + '</del>';\r\n  };\r\n\r\n  Renderer.prototype.link = function(href, title, text) {\r\n    if (this.options.sanitize) {\r\n      try {\r\n        var prot = decodeURIComponent(unescape(href))\r\n          .replace(/[^\\w:]/g, '')\r\n          .toLowerCase();\r\n      } catch (e) {\r\n        return '';\r\n      }\r\n      if (prot.indexOf('javascript:') === 0) {\r\n        return '';\r\n      }\r\n    }\r\n    var out = '<a href=\"' + href + '\"';\r\n    if (title) {\r\n      out += ' title=\"' + title + '\"';\r\n    }\r\n    out += '>' + text + '</a>';\r\n    return out;\r\n  };\r\n\r\n  Renderer.prototype.image = function(href, title, text) {\r\n    var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\r\n    if (title) {\r\n      out += ' title=\"' + title + '\"';\r\n    }\r\n    out += this.options.xhtml ? '/>' : '>';\r\n    return out;\r\n  };\r\n\r\n  /**\r\n   * Parsing & Compiling\r\n   */\r\n\r\n  function Parser(options) {\r\n    this.tokens = [];\r\n    this.token = null;\r\n    this.options = options || marked.defaults;\r\n    this.options.renderer = this.options.renderer || new Renderer;\r\n    this.renderer = this.options.renderer;\r\n    this.renderer.options = this.options;\r\n  }\r\n\r\n  /**\r\n   * Static Parse Method\r\n   */\r\n\r\n  Parser.parse = function(src, options, renderer) {\r\n    var parser = new Parser(options, renderer);\r\n    return parser.parse(src);\r\n  };\r\n\r\n  /**\r\n   * Parse Loop\r\n   */\r\n\r\n  Parser.prototype.parse = function(src) {\r\n    this.inline = new InlineLexer(src.links, this.options, this.renderer);\r\n    this.tokens = src.reverse();\r\n\r\n    var out = '';\r\n    while (this.next()) {\r\n      out += this.tok();\r\n    }\r\n\r\n    return out;\r\n  };\r\n\r\n  /**\r\n   * Next Token\r\n   */\r\n\r\n  Parser.prototype.next = function() {\r\n    return this.token = this.tokens.pop();\r\n  };\r\n\r\n  /**\r\n   * Preview Next Token\r\n   */\r\n\r\n  Parser.prototype.peek = function() {\r\n    return this.tokens[this.tokens.length - 1] || 0;\r\n  };\r\n\r\n  /**\r\n   * Parse Text Tokens\r\n   */\r\n\r\n  Parser.prototype.parseText = function() {\r\n    var body = this.token.text;\r\n\r\n    while (this.peek().type === 'text') {\r\n      body += '\\n' + this.next().text;\r\n    }\r\n\r\n    return this.inline.output(body);\r\n  };\r\n\r\n  /**\r\n   * Parse Current Token\r\n   */\r\n\r\n  Parser.prototype.tok = function() {\r\n    switch (this.token.type) {\r\n      case 'space': {\r\n        return '';\r\n      }\r\n      case 'hr': {\r\n        return this.renderer.hr();\r\n      }\r\n      case 'heading': {\r\n        return this.renderer.heading(\r\n          this.inline.output(this.token.text),\r\n          this.token.depth,\r\n          this.token.text);\r\n      }\r\n      case 'code': {\r\n        return this.renderer.code(this.token.text,\r\n          this.token.lang,\r\n          this.token.escaped);\r\n      }\r\n      case 'table': {\r\n        var header = ''\r\n          , body = ''\r\n          , i\r\n          , row\r\n          , cell\r\n          , flags\r\n          , j;\r\n\r\n        // header\r\n        cell = '';\r\n        for (i = 0; i < this.token.header.length; i++) {\r\n          flags = { header: true, align: this.token.align[i] };\r\n          cell += this.renderer.tablecell(\r\n            this.inline.output(this.token.header[i]),\r\n            { header: true, align: this.token.align[i] }\r\n          );\r\n        }\r\n        header += this.renderer.tablerow(cell);\r\n\r\n        for (i = 0; i < this.token.cells.length; i++) {\r\n          row = this.token.cells[i];\r\n\r\n          cell = '';\r\n          for (j = 0; j < row.length; j++) {\r\n            cell += this.renderer.tablecell(\r\n              this.inline.output(row[j]),\r\n              { header: false, align: this.token.align[j] }\r\n            );\r\n          }\r\n\r\n          body += this.renderer.tablerow(cell);\r\n        }\r\n        return this.renderer.table(header, body);\r\n      }\r\n      case 'blockquote_start': {\r\n        var body = '';\r\n\r\n        while (this.next().type !== 'blockquote_end') {\r\n          body += this.tok();\r\n        }\r\n\r\n        return this.renderer.blockquote(body);\r\n      }\r\n      case 'list_start': {\r\n        var body = ''\r\n          , ordered = this.token.ordered;\r\n\r\n        while (this.next().type !== 'list_end') {\r\n          body += this.tok();\r\n        }\r\n\r\n        return this.renderer.list(body, ordered);\r\n      }\r\n      case 'list_item_start': {\r\n        var body = '';\r\n\r\n        while (this.next().type !== 'list_item_end') {\r\n          body += this.token.type === 'text'\r\n            ? this.parseText()\r\n            : this.tok();\r\n        }\r\n\r\n        return this.renderer.listitem(body);\r\n      }\r\n      case 'loose_item_start': {\r\n        var body = '';\r\n\r\n        while (this.next().type !== 'list_item_end') {\r\n          body += this.tok();\r\n        }\r\n\r\n        return this.renderer.listitem(body);\r\n      }\r\n      case 'html': {\r\n        var html = !this.token.pre && !this.options.pedantic\r\n          ? this.inline.output(this.token.text)\r\n          : this.token.text;\r\n        return this.renderer.html(html);\r\n      }\r\n      case 'paragraph': {\r\n        return this.renderer.paragraph(this.inline.output(this.token.text));\r\n      }\r\n      case 'text': {\r\n        return this.renderer.paragraph(this.parseText());\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Helpers\r\n   */\r\n\r\n  function escape(html, encode) {\r\n    return html\r\n      .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\r\n      .replace(/</g, '&lt;')\r\n      .replace(/>/g, '&gt;')\r\n      .replace(/\"/g, '&quot;')\r\n      .replace(/'/g, '&#39;');\r\n  }\r\n\r\n  function unescape(html) {\r\n    return html.replace(/&([#\\w]+);/g, function(_, n) {\r\n      n = n.toLowerCase();\r\n      if (n === 'colon') return ':';\r\n      if (n.charAt(0) === '#') {\r\n        return n.charAt(1) === 'x'\r\n          ? String.fromCharCode(parseInt(n.substring(2), 16))\r\n          : String.fromCharCode(+n.substring(1));\r\n      }\r\n      return '';\r\n    });\r\n  }\r\n\r\n  function replace(regex, opt) {\r\n    regex = regex.source;\r\n    opt = opt || '';\r\n    return function self(name, val) {\r\n      if (!name) return new RegExp(regex, opt);\r\n      val = val.source || val;\r\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\r\n      regex = regex.replace(name, val);\r\n      return self;\r\n    };\r\n  }\r\n\r\n  function noop() {}\r\n  noop.exec = noop;\r\n\r\n  function merge(obj) {\r\n    var i = 1\r\n      , target\r\n      , key;\r\n\r\n    for (; i < arguments.length; i++) {\r\n      target = arguments[i];\r\n      for (key in target) {\r\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\r\n          obj[key] = target[key];\r\n        }\r\n      }\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n\r\n  /**\r\n   * Marked\r\n   */\r\n\r\n  function marked(src, opt, callback) {\r\n    if (callback || typeof opt === 'function') {\r\n      if (!callback) {\r\n        callback = opt;\r\n        opt = null;\r\n      }\r\n\r\n      opt = merge({}, marked.defaults, opt || {});\r\n\r\n      var highlight = opt.highlight\r\n        , tokens\r\n        , pending\r\n        , i = 0;\r\n\r\n      try {\r\n        tokens = Lexer.lex(src, opt)\r\n      } catch (e) {\r\n        return callback(e);\r\n      }\r\n\r\n      pending = tokens.length;\r\n\r\n      var done = function(err) {\r\n        if (err) {\r\n          opt.highlight = highlight;\r\n          return callback(err);\r\n        }\r\n\r\n        var out;\r\n\r\n        try {\r\n          out = Parser.parse(tokens, opt);\r\n        } catch (e) {\r\n          err = e;\r\n        }\r\n\r\n        opt.highlight = highlight;\r\n\r\n        return err\r\n          ? callback(err)\r\n          : callback(null, out);\r\n      };\r\n\r\n      if (!highlight || highlight.length < 3) {\r\n        return done();\r\n      }\r\n\r\n      delete opt.highlight;\r\n\r\n      if (!pending) return done();\r\n\r\n      for (; i < tokens.length; i++) {\r\n        (function(token) {\r\n          if (token.type !== 'code') {\r\n            return --pending || done();\r\n          }\r\n          return highlight(token.text, token.lang, function(err, code) {\r\n            if (err) return done(err);\r\n            if (code == null || code === token.text) {\r\n              return --pending || done();\r\n            }\r\n            token.text = code;\r\n            token.escaped = true;\r\n            --pending || done();\r\n          });\r\n        })(tokens[i]);\r\n      }\r\n\r\n      return;\r\n    }\r\n    try {\r\n      if (opt) opt = merge({}, marked.defaults, opt);\r\n      return Parser.parse(Lexer.lex(src, opt), opt);\r\n    } catch (e) {\r\n      e.message += '\\nPlease report this to https://github.com/chjj/marked.';\r\n      if ((opt || marked.defaults).silent) {\r\n        return '<p>An error occured:</p><pre>'\r\n          + escape(e.message + '', true)\r\n          + '</pre>';\r\n      }\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Options\r\n   */\r\n\r\n  marked.options =\r\n  marked.setOptions = function(opt) {\r\n    merge(marked.defaults, opt);\r\n    return marked;\r\n  };\r\n\r\n  marked.defaults = {\r\n    gfm: true,\r\n    tables: true,\r\n    breaks: false,\r\n    pedantic: false,\r\n    sanitize: false,\r\n    smartLists: false,\r\n    silent: false,\r\n    highlight: null,\r\n    langPrefix: 'lang-',\r\n    smartypants: false,\r\n    headerPrefix: '',\r\n    renderer: new Renderer,\r\n    xhtml: false\r\n  };\r\n\r\n  /**\r\n   * Expose\r\n   */\r\n\r\n  marked.Parser = Parser;\r\n  marked.parser = Parser.parse;\r\n\r\n  marked.Renderer = Renderer;\r\n\r\n  marked.Lexer = Lexer;\r\n  marked.lexer = Lexer.lex;\r\n\r\n  marked.InlineLexer = InlineLexer;\r\n  marked.inlineLexer = InlineLexer.output;\r\n\r\n  marked.parse = marked;\r\n\r\n  return marked;\r\n});"]}