{"version":3,"sources":["primitives/turndown.js"],"names":["define","repeat","character","count","Array","join","blockElements","isBlock","node","indexOf","nodeName","toLowerCase","voidElements","isVoid","voidSelector","rules","Rules","options","key","this","_keep","_remove","blankRule","replacement","blankReplacement","keepReplacement","defaultRule","defaultReplacement","array","push","findRule","i","length","rule","filterValue","filter","isArray","TypeError","call","remove","next","nextSibling","parentNode","removeChild","prev","current","isPre","firstChild","paragraph","content","lineBreak","br","heading","hLevel","Number","charAt","headingStyle","blockquote","replace","list","parent","lastElementChild","listItem","prefix","bulletListMarker","start","getAttribute","index","prototype","children","test","indentedCodeBlock","codeBlockStyle","textContent","fencedCodeBlock","language","className","match","fence","horizontalRule","hr","inlineLink","linkStyle","title","referenceLink","reference","href","linkReferenceStyle","id","references","append","emphasis","trim","emDelimiter","strong","strongDelimiter","code","hasSiblings","previousSibling","isCodeBlock","delimiter","leadingSpace","trailingSpace","matches","image","alt","src","add","unshift","keep","forNode","isBlank","forEach","fn","root","window","Parser","JSDOM","_htmlParser","HTMLParser","DOMParser","canParse","parseFromString","e","canParseHTMLNatively","require","string","document","RootNode","input","getElementById","cloneNode","element","prevText","prevVoid","nodeType","text","data","substr","nextNode","collapseWhitespace","Node","isCode","querySelector","hasVoid","flankingWhitespace","leading","trailing","hasLeading","hasTrailing","isFlankedByWhitespace","side","sibling","regExp","isFlanked","nodeValue","reduce","leadingNewLinesRegExp","trailingNewLinesRegExp","escapes","TurndownService","defaults","outerHTML","destination","arguments","source","hasOwnProperty","extend","process","self","childNodes","output","escape","whitespace","string1","string2","newlines","maxNewlines","separator","sort","turndown","canConvert","use","plugin","addRule","accumulator"],"mappings":"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","file":"../../primitives/turndown.js","sourcesContent":["define([],function () { \r\n  'use strict';\r\n\r\n  // original version : 5.0.1\r\n  function extend (destination) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      var source = arguments[i];\r\n      for (var key in source) {\r\n        if (source.hasOwnProperty(key)) destination[key] = source[key];\r\n      }\r\n    }\r\n    return destination\r\n  }\r\n\r\n  function repeat (character, count) {\r\n    return Array(count + 1).join(character)\r\n  }\r\n\r\n  var blockElements = [\r\n    'address', 'article', 'aside', 'audio', 'blockquote', 'body', 'canvas',\r\n    'center', 'dd', 'dir', 'div', 'dl', 'dt', 'fieldset', 'figcaption',\r\n    'figure', 'footer', 'form', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6',\r\n    'header', 'hgroup', 'hr', 'html', 'isindex', 'li', 'main', 'menu', 'nav',\r\n    'noframes', 'noscript', 'ol', 'output', 'p', 'pre', 'section', 'table',\r\n    'tbody', 'td', 'tfoot', 'th', 'thead', 'tr', 'ul'\r\n  ];\r\n\r\n  function isBlock (node) {\r\n    return blockElements.indexOf(node.nodeName.toLowerCase()) !== -1\r\n  }\r\n\r\n  var voidElements = [\r\n    'area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input',\r\n    'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'\r\n  ];\r\n\r\n  function isVoid (node) {\r\n    return voidElements.indexOf(node.nodeName.toLowerCase()) !== -1\r\n  }\r\n\r\n  var voidSelector = voidElements.join();\r\n  function hasVoid (node) {\r\n    return node.querySelector && node.querySelector(voidSelector)\r\n  }\r\n\r\n  var rules = {};\r\n\r\n  rules.paragraph = {\r\n    filter: 'p',\r\n\r\n    replacement: function (content) {\r\n      return '\\n\\n' + content + '\\n\\n'\r\n    }\r\n  };\r\n\r\n  rules.lineBreak = {\r\n    filter: 'br',\r\n\r\n    replacement: function (content, node, options) {\r\n      return options.br + '\\n'\r\n    }\r\n  };\r\n\r\n  rules.heading = {\r\n    filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\r\n\r\n    replacement: function (content, node, options) {\r\n      var hLevel = Number(node.nodeName.charAt(1));\r\n\r\n      if (options.headingStyle === 'setext' && hLevel < 3) {\r\n        var underline = repeat((hLevel === 1 ? '=' : '-'), content.length);\r\n        return (\r\n          '\\n\\n' + content + '\\n' + underline + '\\n\\n'\r\n        )\r\n      } else {\r\n        return '\\n\\n' + repeat('#', hLevel) + ' ' + content + '\\n\\n'\r\n      }\r\n    }\r\n  };\r\n\r\n  rules.blockquote = {\r\n    filter: 'blockquote',\r\n\r\n    replacement: function (content) {\r\n      content = content.replace(/^\\n+|\\n+$/g, '');\r\n      content = content.replace(/^/gm, '> ');\r\n      return '\\n\\n' + content + '\\n\\n'\r\n    }\r\n  };\r\n\r\n  rules.list = {\r\n    filter: ['ul', 'ol'],\r\n\r\n    replacement: function (content, node) {\r\n      var parent = node.parentNode;\r\n      if (parent.nodeName === 'LI' && parent.lastElementChild === node) {\r\n        return '\\n' + content\r\n      } else {\r\n        return '\\n\\n' + content + '\\n\\n'\r\n      }\r\n    }\r\n  };\r\n\r\n  rules.listItem = {\r\n    filter: 'li',\r\n\r\n    replacement: function (content, node, options) {\r\n      content = content\r\n        .replace(/^\\n+/, '') // remove leading newlines\r\n        .replace(/\\n+$/, '\\n') // replace trailing newlines with just a single one\r\n        .replace(/\\n/gm, '\\n    '); // indent\r\n      var prefix = options.bulletListMarker + '   ';\r\n      var parent = node.parentNode;\r\n      if (parent.nodeName === 'OL') {\r\n        var start = parent.getAttribute('start');\r\n        var index = Array.prototype.indexOf.call(parent.children, node);\r\n        prefix = (start ? Number(start) + index : index + 1) + '.  ';\r\n      }\r\n      return (\r\n        prefix + content + (node.nextSibling && !/\\n$/.test(content) ? '\\n' : '')\r\n      )\r\n    }\r\n  };\r\n\r\n  rules.indentedCodeBlock = {\r\n    filter: function (node, options) {\r\n      return (\r\n        options.codeBlockStyle === 'indented' &&\r\n        node.nodeName === 'PRE' &&\r\n        node.firstChild &&\r\n        node.firstChild.nodeName === 'CODE'\r\n      )\r\n    },\r\n\r\n    replacement: function (content, node, options) {\r\n      return (\r\n        '\\n\\n    ' +\r\n        node.firstChild.textContent.replace(/\\n/g, '\\n    ') +\r\n        '\\n\\n'\r\n      )\r\n    }\r\n  };\r\n\r\n  rules.fencedCodeBlock = {\r\n    filter: function (node, options) {\r\n      return (\r\n        options.codeBlockStyle === 'fenced' &&\r\n        node.nodeName === 'PRE' &&\r\n        node.firstChild &&\r\n        node.firstChild.nodeName === 'CODE'\r\n      )\r\n    },\r\n\r\n    replacement: function (content, node, options) {\r\n      var className = node.firstChild.className || '';\r\n      var language = (className.match(/language-(\\S+)/) || [null, ''])[1];\r\n\r\n      return (\r\n        '\\n\\n' + options.fence + language + '\\n' +\r\n        node.firstChild.textContent +\r\n        '\\n' + options.fence + '\\n\\n'\r\n      )\r\n    }\r\n  };\r\n\r\n  rules.horizontalRule = {\r\n    filter: 'hr',\r\n\r\n    replacement: function (content, node, options) {\r\n      return '\\n\\n' + options.hr + '\\n\\n'\r\n    }\r\n  };\r\n\r\n  rules.inlineLink = {\r\n    filter: function (node, options) {\r\n      return (\r\n        options.linkStyle === 'inlined' &&\r\n        node.nodeName === 'A' &&\r\n        node.getAttribute('href')\r\n      )\r\n    },\r\n\r\n    replacement: function (content, node) {\r\n      var href = node.getAttribute('href');\r\n      var title = node.title ? ' \"' + node.title + '\"' : '';\r\n      return '[' + content + '](' + href + title + ')'\r\n    }\r\n  };\r\n\r\n  rules.referenceLink = {\r\n    filter: function (node, options) {\r\n      return (\r\n        options.linkStyle === 'referenced' &&\r\n        node.nodeName === 'A' &&\r\n        node.getAttribute('href')\r\n      )\r\n    },\r\n\r\n    replacement: function (content, node, options) {\r\n      var href = node.getAttribute('href');\r\n      var title = node.title ? ' \"' + node.title + '\"' : '';\r\n      var replacement;\r\n      var reference;\r\n\r\n      switch (options.linkReferenceStyle) {\r\n        case 'collapsed':\r\n          replacement = '[' + content + '][]';\r\n          reference = '[' + content + ']: ' + href + title;\r\n          break\r\n        case 'shortcut':\r\n          replacement = '[' + content + ']';\r\n          reference = '[' + content + ']: ' + href + title;\r\n          break\r\n        default:\r\n          var id = this.references.length + 1;\r\n          replacement = '[' + content + '][' + id + ']';\r\n          reference = '[' + id + ']: ' + href + title;\r\n      }\r\n\r\n      this.references.push(reference);\r\n      return replacement\r\n    },\r\n\r\n    references: [],\r\n\r\n    append: function (options) {\r\n      var references = '';\r\n      if (this.references.length) {\r\n        references = '\\n\\n' + this.references.join('\\n') + '\\n\\n';\r\n        this.references = []; // Reset references\r\n      }\r\n      return references\r\n    }\r\n  };\r\n\r\n  rules.emphasis = {\r\n    filter: ['em', 'i'],\r\n\r\n    replacement: function (content, node, options) {\r\n      if (!content.trim()) return ''\r\n      return options.emDelimiter + content + options.emDelimiter\r\n    }\r\n  };\r\n\r\n  rules.strong = {\r\n    filter: ['strong', 'b'],\r\n\r\n    replacement: function (content, node, options) {\r\n      if (!content.trim()) return ''\r\n      return options.strongDelimiter + content + options.strongDelimiter\r\n    }\r\n  };\r\n\r\n  rules.code = {\r\n    filter: function (node) {\r\n      var hasSiblings = node.previousSibling || node.nextSibling;\r\n      var isCodeBlock = node.parentNode.nodeName === 'PRE' && !hasSiblings;\r\n\r\n      return node.nodeName === 'CODE' && !isCodeBlock\r\n    },\r\n\r\n    replacement: function (content) {\r\n      if (!content.trim()) return ''\r\n\r\n      var delimiter = '`';\r\n      var leadingSpace = '';\r\n      var trailingSpace = '';\r\n      var matches = content.match(/`+/gm);\r\n      if (matches) {\r\n        if (/^`/.test(content)) leadingSpace = ' ';\r\n        if (/`$/.test(content)) trailingSpace = ' ';\r\n        while (matches.indexOf(delimiter) !== -1) delimiter = delimiter + '`';\r\n      }\r\n\r\n      return delimiter + leadingSpace + content + trailingSpace + delimiter\r\n    }\r\n  };\r\n\r\n  rules.image = {\r\n    filter: 'img',\r\n\r\n    replacement: function (content, node) {\r\n      var alt = node.alt || '';\r\n      var src = node.getAttribute('src') || '';\r\n      var title = node.title || '';\r\n      var titlePart = title ? ' \"' + title + '\"' : '';\r\n      return src ? '![' + alt + ']' + '(' + src + titlePart + ')' : ''\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Manages a collection of rules used to convert HTML to Markdown\r\n   */\r\n\r\n  function Rules (options) {\r\n    this.options = options;\r\n    this._keep = [];\r\n    this._remove = [];\r\n\r\n    this.blankRule = {\r\n      replacement: options.blankReplacement\r\n    };\r\n\r\n    this.keepReplacement = options.keepReplacement;\r\n\r\n    this.defaultRule = {\r\n      replacement: options.defaultReplacement\r\n    };\r\n\r\n    this.array = [];\r\n    for (var key in options.rules) this.array.push(options.rules[key]);\r\n  }\r\n\r\n  Rules.prototype = {\r\n    add: function (key, rule) {\r\n      this.array.unshift(rule);\r\n    },\r\n\r\n    keep: function (filter) {\r\n      this._keep.unshift({\r\n        filter: filter,\r\n        replacement: this.keepReplacement\r\n      });\r\n    },\r\n\r\n    remove: function (filter) {\r\n      this._remove.unshift({\r\n        filter: filter,\r\n        replacement: function () {\r\n          return ''\r\n        }\r\n      });\r\n    },\r\n\r\n    forNode: function (node) {\r\n      if (node.isBlank) return this.blankRule\r\n      var rule;\r\n\r\n      if ((rule = findRule(this.array, node, this.options))) return rule\r\n      if ((rule = findRule(this._keep, node, this.options))) return rule\r\n      if ((rule = findRule(this._remove, node, this.options))) return rule\r\n\r\n      return this.defaultRule\r\n    },\r\n\r\n    forEach: function (fn) {\r\n      for (var i = 0; i < this.array.length; i++) fn(this.array[i], i);\r\n    }\r\n  };\r\n\r\n  function findRule (rules, node, options) {\r\n    for (var i = 0; i < rules.length; i++) {\r\n      var rule = rules[i];\r\n      if (filterValue(rule, node, options)) return rule\r\n    }\r\n    return void 0\r\n  }\r\n\r\n  function filterValue (rule, node, options) {\r\n    var filter = rule.filter;\r\n    if (typeof filter === 'string') {\r\n      if (filter === node.nodeName.toLowerCase()) return true\r\n    } else if (Array.isArray(filter)) {\r\n      if (filter.indexOf(node.nodeName.toLowerCase()) > -1) return true\r\n    } else if (typeof filter === 'function') {\r\n      if (filter.call(rule, node, options)) return true\r\n    } else {\r\n      throw new TypeError('`filter` needs to be a string, array, or function')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The collapseWhitespace function is adapted from collapse-whitespace\r\n   * by Luc Thevenard.\r\n   *\r\n   * The MIT License (MIT)\r\n   *\r\n   * Copyright (c) 2014 Luc Thevenard <lucthevenard@gmail.com>\r\n   *\r\n   * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n   * of this software and associated documentation files (the \"Software\"), to deal\r\n   * in the Software without restriction, including without limitation the rights\r\n   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n   * copies of the Software, and to permit persons to whom the Software is\r\n   * furnished to do so, subject to the following conditions:\r\n   *\r\n   * The above copyright notice and this permission notice shall be included in\r\n   * all copies or substantial portions of the Software.\r\n   *\r\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n   * THE SOFTWARE.\r\n   */\r\n\r\n  /**\r\n   * collapseWhitespace(options) removes extraneous whitespace from an the given element.\r\n   *\r\n   * @param {Object} options\r\n   */\r\n  function collapseWhitespace (options) {\r\n    var element = options.element;\r\n    var isBlock = options.isBlock;\r\n    var isVoid = options.isVoid;\r\n    var isPre = options.isPre || function (node) {\r\n      return node.nodeName === 'PRE'\r\n    };\r\n\r\n    if (!element.firstChild || isPre(element)) return\r\n\r\n    var prevText = null;\r\n    var prevVoid = false;\r\n\r\n    var prev = null;\r\n    var node = next(prev, element, isPre);\r\n\r\n    while (node !== element) {\r\n      if (node.nodeType === 3 || node.nodeType === 4) { // Node.TEXT_NODE or Node.CDATA_SECTION_NODE\r\n        var text = node.data.replace(/[ \\r\\n\\t]+/g, ' ');\r\n\r\n        if ((!prevText || / $/.test(prevText.data)) &&\r\n            !prevVoid && text[0] === ' ') {\r\n          text = text.substr(1);\r\n        }\r\n\r\n        // `text` might be empty at this point.\r\n        if (!text) {\r\n          node = remove(node);\r\n          continue\r\n        }\r\n\r\n        node.data = text;\r\n\r\n        prevText = node;\r\n      } else if (node.nodeType === 1) { // Node.ELEMENT_NODE\r\n        if (isBlock(node) || node.nodeName === 'BR') {\r\n          if (prevText) {\r\n            prevText.data = prevText.data.replace(/ $/, '');\r\n          }\r\n\r\n          prevText = null;\r\n          prevVoid = false;\r\n        } else if (isVoid(node)) {\r\n          // Avoid trimming space around non-block, non-BR void elements.\r\n          prevText = null;\r\n          prevVoid = true;\r\n        }\r\n      } else {\r\n        node = remove(node);\r\n        continue\r\n      }\r\n\r\n      var nextNode = next(prev, node, isPre);\r\n      prev = node;\r\n      node = nextNode;\r\n    }\r\n\r\n    if (prevText) {\r\n      prevText.data = prevText.data.replace(/ $/, '');\r\n      if (!prevText.data) {\r\n        remove(prevText);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * remove(node) removes the given node from the DOM and returns the\r\n   * next node in the sequence.\r\n   *\r\n   * @param {Node} node\r\n   * @return {Node} node\r\n   */\r\n  function remove (node) {\r\n    var next = node.nextSibling || node.parentNode;\r\n\r\n    node.parentNode.removeChild(node);\r\n\r\n    return next\r\n  }\r\n\r\n  /**\r\n   * next(prev, current, isPre) returns the next node in the sequence, given the\r\n   * current and previous nodes.\r\n   *\r\n   * @param {Node} prev\r\n   * @param {Node} current\r\n   * @param {Function} isPre\r\n   * @return {Node}\r\n   */\r\n  function next (prev, current, isPre) {\r\n    if ((prev && prev.parentNode === current) || isPre(current)) {\r\n      return current.nextSibling || current.parentNode\r\n    }\r\n\r\n    return current.firstChild || current.nextSibling || current.parentNode\r\n  }\r\n\r\n  /*\r\n   * Set up window for Node.js\r\n   */\r\n\r\n  var root = (typeof window !== 'undefined' ? window : {});\r\n\r\n  /*\r\n   * Parsing HTML strings\r\n   */\r\n\r\n  function canParseHTMLNatively () {\r\n    var Parser = root.DOMParser;\r\n    var canParse = false;\r\n\r\n    // Adapted from https://gist.github.com/1129031\r\n    // Firefox/Opera/IE throw errors on unsupported types\r\n    try {\r\n      // WebKit returns null on unsupported types\r\n      if (new Parser().parseFromString('', 'text/html')) {\r\n        canParse = true;\r\n      }\r\n    } catch (e) {}\r\n\r\n    return canParse\r\n  }\r\n\r\n  function createHTMLParser () {\r\n    var Parser = function () {};\r\n\r\n    {\r\n      var JSDOM = require('jsdom').JSDOM;\r\n      Parser.prototype.parseFromString = function (string) {\r\n        return new JSDOM(string).window.document\r\n      };\r\n    }\r\n    return Parser\r\n  }\r\n\r\n  var HTMLParser = canParseHTMLNatively() ? root.DOMParser : createHTMLParser();\r\n\r\n  function RootNode (input) {\r\n    var root;\r\n    if (typeof input === 'string') {\r\n      var doc = htmlParser().parseFromString(\r\n        // DOM parsers arrange elements in the <head> and <body>.\r\n        // Wrapping in a custom element ensures elements are reliably arranged in\r\n        // a single element.\r\n        '<x-turndown id=\"turndown-root\">' + input + '</x-turndown>',\r\n        'text/html'\r\n      );\r\n      root = doc.getElementById('turndown-root');\r\n    } else {\r\n      root = input.cloneNode(true);\r\n    }\r\n    collapseWhitespace({\r\n      element: root,\r\n      isBlock: isBlock,\r\n      isVoid: isVoid\r\n    });\r\n\r\n    return root\r\n  }\r\n\r\n  var _htmlParser;\r\n  function htmlParser () {\r\n    _htmlParser = _htmlParser || new HTMLParser();\r\n    return _htmlParser\r\n  }\r\n\r\n  function Node (node) {\r\n    node.isBlock = isBlock(node);\r\n    node.isCode = node.nodeName.toLowerCase() === 'code' || node.parentNode.isCode;\r\n    node.isBlank = isBlank(node);\r\n    node.flankingWhitespace = flankingWhitespace(node);\r\n    return node\r\n  }\r\n\r\n  function isBlank (node) {\r\n    return (\r\n      ['A', 'TH', 'TD', 'IFRAME', 'SCRIPT', 'AUDIO', 'VIDEO'].indexOf(node.nodeName) === -1 &&\r\n      /^\\s*$/i.test(node.textContent) &&\r\n      !isVoid(node) &&\r\n      !hasVoid(node)\r\n    )\r\n  }\r\n\r\n  function flankingWhitespace (node) {\r\n    var leading = '';\r\n    var trailing = '';\r\n\r\n    if (!node.isBlock) {\r\n      var hasLeading = /^[ \\r\\n\\t]/.test(node.textContent);\r\n      var hasTrailing = /[ \\r\\n\\t]$/.test(node.textContent);\r\n\r\n      if (hasLeading && !isFlankedByWhitespace('left', node)) {\r\n        leading = ' ';\r\n      }\r\n      if (hasTrailing && !isFlankedByWhitespace('right', node)) {\r\n        trailing = ' ';\r\n      }\r\n    }\r\n\r\n    return { leading: leading, trailing: trailing }\r\n  }\r\n\r\n  function isFlankedByWhitespace (side, node) {\r\n    var sibling;\r\n    var regExp;\r\n    var isFlanked;\r\n\r\n    if (side === 'left') {\r\n      sibling = node.previousSibling;\r\n      regExp = / $/;\r\n    } else {\r\n      sibling = node.nextSibling;\r\n      regExp = /^ /;\r\n    }\r\n\r\n    if (sibling) {\r\n      if (sibling.nodeType === 3) {\r\n        isFlanked = regExp.test(sibling.nodeValue);\r\n      } else if (sibling.nodeType === 1 && !isBlock(sibling)) {\r\n        isFlanked = regExp.test(sibling.textContent);\r\n      }\r\n    }\r\n    return isFlanked\r\n  }\r\n\r\n  var reduce = Array.prototype.reduce;\r\n  var leadingNewLinesRegExp = /^\\n*/;\r\n  var trailingNewLinesRegExp = /\\n*$/;\r\n  var escapes = [\r\n    [/\\\\/g, '\\\\\\\\'],\r\n    [/\\*/g, '\\\\*'],\r\n    [/^-/g, '\\\\-'],\r\n    [/^\\+ /g, '\\\\+ '],\r\n    [/^(=+)/g, '\\\\$1'],\r\n    [/^(#{1,6}) /g, '\\\\$1 '],\r\n    [/`/g, '\\\\`'],\r\n    [/^~~~/g, '\\\\~~~'],\r\n    [/\\[/g, '\\\\['],\r\n    [/\\]/g, '\\\\]'],\r\n    [/^>/g, '\\\\>'],\r\n    [/_/g, '\\\\_'],\r\n    [/^(\\d+)\\. /g, '$1\\\\. ']\r\n  ];\r\n\r\n  function TurndownService (options) {\r\n    if (!(this instanceof TurndownService)) return new TurndownService(options)\r\n\r\n    var defaults = {\r\n      rules: rules,\r\n      headingStyle: 'setext',\r\n      hr: '* * *',\r\n      bulletListMarker: '*',\r\n      codeBlockStyle: 'indented',\r\n      fence: '```',\r\n      emDelimiter: '_',\r\n      strongDelimiter: '**',\r\n      linkStyle: 'inlined',\r\n      linkReferenceStyle: 'full',\r\n      br: '  ',\r\n      blankReplacement: function (content, node) {\r\n        return node.isBlock ? '\\n\\n' : ''\r\n      },\r\n      keepReplacement: function (content, node) {\r\n        return node.isBlock ? '\\n\\n' + node.outerHTML + '\\n\\n' : node.outerHTML\r\n      },\r\n      defaultReplacement: function (content, node) {\r\n        return node.isBlock ? '\\n\\n' + content + '\\n\\n' : content\r\n      }\r\n    };\r\n    this.options = extend({}, defaults, options);\r\n    this.rules = new Rules(this.options);\r\n  }\r\n\r\n  TurndownService.prototype = {\r\n    /**\r\n     * The entry point for converting a string or DOM node to Markdown\r\n     * @public\r\n     * @param {String|HTMLElement} input The string or DOM node to convert\r\n     * @returns A Markdown representation of the input\r\n     * @type String\r\n     */\r\n\r\n    turndown: function (input) {\r\n      if (!canConvert(input)) {\r\n        throw new TypeError(\r\n          input + ' is not a string, or an element/document/fragment node.'\r\n        )\r\n      }\r\n\r\n      if (input === '') return ''\r\n\r\n      var output = process.call(this, new RootNode(input));\r\n      return postProcess.call(this, output)\r\n    },\r\n\r\n    /**\r\n     * Add one or more plugins\r\n     * @public\r\n     * @param {Function|Array} plugin The plugin or array of plugins to add\r\n     * @returns The Turndown instance for chaining\r\n     * @type Object\r\n     */\r\n\r\n    use: function (plugin) {\r\n      if (Array.isArray(plugin)) {\r\n        for (var i = 0; i < plugin.length; i++) this.use(plugin[i]);\r\n      } else if (typeof plugin === 'function') {\r\n        plugin(this);\r\n      } else {\r\n        throw new TypeError('plugin must be a Function or an Array of Functions')\r\n      }\r\n      return this\r\n    },\r\n\r\n    /**\r\n     * Adds a rule\r\n     * @public\r\n     * @param {String} key The unique key of the rule\r\n     * @param {Object} rule The rule\r\n     * @returns The Turndown instance for chaining\r\n     * @type Object\r\n     */\r\n\r\n    addRule: function (key, rule) {\r\n      this.rules.add(key, rule);\r\n      return this\r\n    },\r\n\r\n    /**\r\n     * Keep a node (as HTML) that matches the filter\r\n     * @public\r\n     * @param {String|Array|Function} filter The unique key of the rule\r\n     * @returns The Turndown instance for chaining\r\n     * @type Object\r\n     */\r\n\r\n    keep: function (filter) {\r\n      this.rules.keep(filter);\r\n      return this\r\n    },\r\n\r\n    /**\r\n     * Remove a node that matches the filter\r\n     * @public\r\n     * @param {String|Array|Function} filter The unique key of the rule\r\n     * @returns The Turndown instance for chaining\r\n     * @type Object\r\n     */\r\n\r\n    remove: function (filter) {\r\n      this.rules.remove(filter);\r\n      return this\r\n    },\r\n\r\n    /**\r\n     * Escapes Markdown syntax\r\n     * @public\r\n     * @param {String} string The string to escape\r\n     * @returns A string with Markdown syntax escaped\r\n     * @type String\r\n     */\r\n\r\n    escape: function (string) {\r\n      return escapes.reduce(function (accumulator, escape) {\r\n        return accumulator.replace(escape[0], escape[1])\r\n      }, string)\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Reduces a DOM node down to its Markdown string equivalent\r\n   * @private\r\n   * @param {HTMLElement} parentNode The node to convert\r\n   * @returns A Markdown representation of the node\r\n   * @type String\r\n   */\r\n\r\n  function process (parentNode) {\r\n    var self = this;\r\n    return reduce.call(parentNode.childNodes, function (output, node) {\r\n      node = new Node(node);\r\n\r\n      var replacement = '';\r\n      if (node.nodeType === 3) {\r\n        replacement = node.isCode ? node.nodeValue : self.escape(node.nodeValue);\r\n      } else if (node.nodeType === 1) {\r\n        replacement = replacementForNode.call(self, node);\r\n      }\r\n\r\n      return join(output, replacement)\r\n    }, '')\r\n  }\r\n\r\n  /**\r\n   * Appends strings as each rule requires and trims the output\r\n   * @private\r\n   * @param {String} output The conversion output\r\n   * @returns A trimmed version of the ouput\r\n   * @type String\r\n   */\r\n\r\n  function postProcess (output) {\r\n    var self = this;\r\n    this.rules.forEach(function (rule) {\r\n      if (typeof rule.append === 'function') {\r\n        output = join(output, rule.append(self.options));\r\n      }\r\n    });\r\n\r\n    return output.replace(/^[\\t\\r\\n]+/, '').replace(/[\\t\\r\\n\\s]+$/, '')\r\n  }\r\n\r\n  /**\r\n   * Converts an element node to its Markdown equivalent\r\n   * @private\r\n   * @param {HTMLElement} node The node to convert\r\n   * @returns A Markdown representation of the node\r\n   * @type String\r\n   */\r\n\r\n  function replacementForNode (node) {\r\n    var rule = this.rules.forNode(node);\r\n    var content = process.call(this, node);\r\n    var whitespace = node.flankingWhitespace;\r\n    if (whitespace.leading || whitespace.trailing) content = content.trim();\r\n    return (\r\n      whitespace.leading +\r\n      rule.replacement(content, node, this.options) +\r\n      whitespace.trailing\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Determines the new lines between the current output and the replacement\r\n   * @private\r\n   * @param {String} output The current conversion output\r\n   * @param {String} replacement The string to append to the output\r\n   * @returns The whitespace to separate the current output and the replacement\r\n   * @type String\r\n   */\r\n\r\n  function separatingNewlines (output, replacement) {\r\n    var newlines = [\r\n      output.match(trailingNewLinesRegExp)[0],\r\n      replacement.match(leadingNewLinesRegExp)[0]\r\n    ].sort();\r\n    var maxNewlines = newlines[newlines.length - 1];\r\n    return maxNewlines.length < 2 ? maxNewlines : '\\n\\n'\r\n  }\r\n\r\n  function join (string1, string2) {\r\n    var separator = separatingNewlines(string1, string2);\r\n\r\n    // Remove trailing/leading newlines and replace with separator\r\n    string1 = string1.replace(trailingNewLinesRegExp, '');\r\n    string2 = string2.replace(leadingNewLinesRegExp, '');\r\n\r\n    return string1 + separator + string2\r\n  }\r\n\r\n  /**\r\n   * Determines whether an input can be converted\r\n   * @private\r\n   * @param {String|HTMLElement} input Describe this parameter\r\n   * @returns Describe what it returns\r\n   * @type String|Object|Array|Boolean|Number\r\n   */\r\n\r\n  function canConvert (input) {\r\n    return (\r\n      input != null && (\r\n        typeof input === 'string' ||\r\n        (input.nodeType && (\r\n          input.nodeType === 1 || input.nodeType === 9 || input.nodeType === 11\r\n        ))\r\n      )\r\n    )\r\n  }\r\n\r\n  return TurndownService;\r\n\r\n});\r\n"]}