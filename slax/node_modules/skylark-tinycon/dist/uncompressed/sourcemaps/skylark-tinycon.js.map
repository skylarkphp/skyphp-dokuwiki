{"version":3,"sources":["skylark-tinycon.js"],"names":[],"mappingsfile":"../skylark-tinycon.js","sourcesContent":["define('skylark-tinycon/tinycon',[\n  \"skylark-langx-ns\"\n],function(skylark) {\n  var Tinycon = {};\n  var currentFavicon = null;\n  var originalFavicon = null;\n  var faviconImage = null;\n  var canvas = null;\n  var options = {};\n  var r = window.devicePixelRatio || 1;\n  var size = 16 * r;\n  var defaults = {\n    width: 7,\n    height: 9,\n    font: 10 * r + 'px arial',\n    color: '#ffffff',\n    background: '#F03D25',\n    fallback: true,\n    crossOrigin: true,\n    abbreviate: true\n  };\n\n  var ua = (function () {\n    var agent = navigator.userAgent.toLowerCase();\n    // New function has access to 'agent' via closure\n    return function (browser) {\n      return agent.indexOf(browser) !== -1;\n    };\n  }());\n\n  var browser = {\n    ie: ua('trident'),\n    chrome: ua('chrome'),\n    webkit: ua('chrome') || ua('safari'),\n    safari: ua('safari') && !ua('chrome'),\n    mozilla: ua('mozilla') && !ua('chrome') && !ua('safari')\n  };\n\n  // private methods\n  var getFaviconTag = function(){\n\n    var links = document.getElementsByTagName('link');\n\n    for(var i=0, len=links.length; i < len; i++) {\n      if ((links[i].getAttribute('rel') || '').match(/\\bicon\\b/i)) {\n        return links[i];\n      }\n    }\n\n    return false;\n  };\n\n  var removeFaviconTag = function(){\n\n    var links = document.getElementsByTagName('link');\n    var head = document.getElementsByTagName('head')[0];\n\n    for(var i=0, len=links.length; i < len; i++) {\n      var exists = (typeof(links[i]) !== 'undefined');\n      if (exists && (links[i].getAttribute('rel') || '').match(/\\bicon\\b/i)) {\n        head.removeChild(links[i]);\n      }\n    }\n  };\n\n  var getCurrentFavicon = function(){\n\n    if (!originalFavicon || !currentFavicon) {\n      var tag = getFaviconTag();\n      currentFavicon = tag ? tag.getAttribute('href') : '/favicon.ico';\n      if (!originalFavicon) {\n        originalFavicon = currentFavicon;\n      }\n    }\n\n    return currentFavicon;\n  };\n\n  var getCanvas = function (){\n\n    if (!canvas) {\n      canvas = document.createElement(\"canvas\");\n      canvas.width = size;\n      canvas.height = size;\n    }\n\n    return canvas;\n  };\n\n  var setFaviconTag = function(url){\n    if(url){\n      removeFaviconTag();\n\n      var link = document.createElement('link');\n      link.type = 'image/x-icon';\n      link.rel = 'icon';\n      link.href = url;\n      document.getElementsByTagName('head')[0].appendChild(link);\n    }\n  };\n\n  var log = function(message){\n    if (window.console) window.console.log(message);\n  };\n\n  var drawFavicon = function(label, color) {\n\n    // fallback to updating the browser title if unsupported\n    if (!getCanvas().getContext || browser.ie || browser.safari || options.fallback === 'force') {\n      return updateTitle(label);\n    }\n\n    var context = getCanvas().getContext(\"2d\");\n    var color = color || '#000000';\n    var src = getCurrentFavicon();\n\n    faviconImage = document.createElement('img');\n    faviconImage.onload = function() {\n\n      // clear canvas\n      context.clearRect(0, 0, size, size);\n\n      // draw the favicon\n      context.drawImage(faviconImage, 0, 0, faviconImage.width, faviconImage.height, 0, 0, size, size);\n\n      // draw bubble over the top\n      if ((label + '').length > 0) drawBubble(context, label, color);\n\n      // refresh tag in page\n      refreshFavicon();\n    };\n\n    // allow cross origin resource requests if the image is not a data:uri\n    // as detailed here: https://github.com/mrdoob/three.js/issues/1305\n    if (!src.match(/^data/) && options.crossOrigin) {\n      faviconImage.crossOrigin = 'anonymous';\n    }\n\n    faviconImage.src = src;\n  };\n\n  var updateTitle = function(label) {\n\n    if (options.fallback) {\n      // Grab the current title that we can prefix with the label\n      var originalTitle = document.title;\n\n      // Strip out the old label if there is one\n      if (originalTitle[0] === '(') {\n        originalTitle = originalTitle.slice(originalTitle.indexOf(' '));\n      }\n\n      if ((label + '').length > 0) {\n        document.title = '(' + label + ') ' + originalTitle;\n      } else {\n        document.title = originalTitle;\n      }\n    }\n  };\n\n  var drawBubble = function(context, label, color) {\n\n    // automatic abbreviation for long (>2 digits) numbers\n    if (typeof label == 'number' && label > 99 && options.abbreviate) {\n      label = abbreviateNumber(label);\n    }\n\n    // bubble needs to be larger for double digits\n    var len = (label + '').length-1;\n\n    var width = options.width * r + (6 * r * len),\n      height = options.height * r;\n\n    var top = size - height,\n            left = size - width - r,\n            bottom = 16 * r,\n            right = 16 * r,\n            radius = 2 * r;\n\n    // webkit seems to render fonts lighter than firefox\n    context.font = (browser.webkit ? 'bold ' : '') + options.font;\n    context.fillStyle = options.background;\n    context.strokeStyle = options.background;\n    context.lineWidth = r;\n\n    // bubble\n    context.beginPath();\n        context.moveTo(left + radius, top);\n    context.quadraticCurveTo(left, top, left, top + radius);\n    context.lineTo(left, bottom - radius);\n        context.quadraticCurveTo(left, bottom, left + radius, bottom);\n        context.lineTo(right - radius, bottom);\n        context.quadraticCurveTo(right, bottom, right, bottom - radius);\n        context.lineTo(right, top + radius);\n        context.quadraticCurveTo(right, top, right - radius, top);\n        context.closePath();\n        context.fill();\n\n    // bottom shadow\n    context.beginPath();\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.moveTo(left + radius / 2.0, bottom);\n    context.lineTo(right - radius / 2.0, bottom);\n    context.stroke();\n\n    // label\n    context.fillStyle = options.color;\n    context.textAlign = \"right\";\n    context.textBaseline = \"top\";\n\n    // unfortunately webkit/mozilla are a pixel different in text positioning\n    context.fillText(label, r === 2 ? 29 : 15, browser.mozilla ? 7*r : 6*r);\n  };\n\n  var refreshFavicon = function(){\n    // check support\n    if (!getCanvas().getContext) return;\n\n    setFaviconTag(getCanvas().toDataURL());\n  };\n\n  var abbreviateNumber = function(label) {\n    var metricPrefixes = [\n      ['G', 1000000000],\n      ['M',    1000000],\n      ['k',       1000]\n    ];\n\n    for(var i = 0; i < metricPrefixes.length; ++i) {\n      if (label >= metricPrefixes[i][1]) {\n        label = round(label / metricPrefixes[i][1]) + metricPrefixes[i][0];\n        break;\n      }\n    }\n\n    return label;\n  };\n\n  var round = function (value, precision) {\n    var number = new Number(value);\n    return number.toFixed(precision);\n  };\n\n  // public methods\n  Tinycon.setOptions = function(custom){\n    options = {};\n\n    // account for deprecated UK English spelling\n    if (custom.colour) {\n      custom.color = custom.colour;\n    }\n\n    for(var key in defaults){\n      options[key] = custom.hasOwnProperty(key) ? custom[key] : defaults[key];\n    }\n    return this;\n  };\n\n  Tinycon.setImage = function(url){\n    currentFavicon = url;\n    refreshFavicon();\n    return this;\n  };\n\n  Tinycon.setBubble = function(label, color) {\n    label = label || '';\n    drawFavicon(label, color);\n    return this;\n  };\n\n  Tinycon.reset = function(){\n    currentFavicon = originalFavicon;\n    setFaviconTag(originalFavicon);\n  };\n\n  Tinycon.setOptions(defaults);\n\n  return skylark.attach(\"itg.tinycon\",Tinycon);\n});\n\ndefine('skylark-tinycon/main',[\r\n\t\"./tinycon\"\r\n],function(tinycon){\r\n\treturn tinycon;\r\n});\ndefine('skylark-tinycon', ['skylark-tinycon/main'], function (main) { return main; });\n\n"]}