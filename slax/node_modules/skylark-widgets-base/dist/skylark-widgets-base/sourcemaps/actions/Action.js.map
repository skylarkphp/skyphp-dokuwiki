{"version":3,"sources":["actions/action.js"],"names":["define","objects","Evented","HashMap","base","ActiionManager","Action","inherit","klassName","name","category","text","tooltip","icon","shortcut","state","get","this","_state","checked","disabled","_construct","options","mixin","_init","execute","params","_execute","trigger","actions"],"mappings":";;;;;;;AAAAA,QACC,wBACA,+BACA,mCACA,UACA,oBACE,SAASC,EAAQC,EAASC,EAASC,EAAMC,GAE3C,IAAIC,EAASJ,EAAQK,SACpBC,UAAc,SAEdC,KAAU,GAEVC,SAAa,GAEbC,KAAS,GAETC,QAAY,GAEZC,KAAS,GAETC,SAAa,GAEbC,OACCC,IAAM,WACL,OAAQC,KAAKC,SAAWD,KAAKC,OAAS,IAAIf,GACzCgB,SAAU,EACVC,UAAW,OAKdC,WAAa,SAASC,GACjBA,GACHrB,EAAQsB,MAAMN,KAAKK,IAIrBE,MAAQ,aASRC,QAAS,SAASC,GACbT,KAAKU,UACRV,KAAKU,SAASD,GAEfT,KAAKW,QAAQ,YACZF,OAAQA,OAMX,OAAOtB,EAAKyB,QAAQvB,OAASA","file":"../../actions/action.js","sourcesContent":["define([\r\n\t\"skylark-langx-objects\",\r\n\t\"skylark-langx-events/emitter\",\r\n\t\"skylark-data-collection/hash-map\",\r\n\t\"../base\",\r\n\t\"./action-manager\"\r\n], function(objects,Evented, HashMap, base, ActiionManager){\r\n\r\n\tvar Action = Evented.inherit({\r\n\t\t\"klassName\" : \"Action\",\r\n\r\n\t\t\"name\"  : \"\",\r\n\r\n\t\t\"category\" : \"\",\r\n\r\n\t\t\"text\" : \"\",\r\n\r\n\t\t\"tooltip\" : \"\",\r\n\r\n\t\t\"icon\" : \"\",\r\n\r\n\t\t\"shortcut\" : \"\",\r\n\r\n\t\t\"state\"  : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn  this._state || (this._state = new HashMap({\r\n\t\t\t\t\tchecked : false,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_construct : function(options) {\r\n\t\t\tif (options) {\r\n\t\t\t\tobjects.mixin(this,options);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_init : function() {\r\n\r\n\t\t},\r\n\r\n\t    /**\r\n\t     * Executes the command. Additional arguments are passed to the executing function\r\n\t     *\r\n\t     * @return {$.Promise} a  promise that will be resolved when the command completes.\r\n\t     */\r\n\t\texecute: function(params){\r\n\t\t\tif (this._execute) {\r\n\t\t\t\tthis._execute(params);\r\n\t\t\t}\r\n\t\t\tthis.trigger(\"executed\",{\r\n\t\t\t\tparams :params\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t});\r\n\t\r\n\treturn base.actions.Action = Action;\r\n});\r\n\r\n\r\n"]}