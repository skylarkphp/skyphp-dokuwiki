{"version":3,"sources":["canvas-pane.js"],"names":["define","base","Widget","CanvasPane","inherit","klassName","_construct","parent","prototype","call","this","preventDragEvents","getContext","type","_elm","updateSize","pixelRatio","Editor","getPixelRatio","width","size","x","height","y"],"mappings":";;;;;;;AAAAA,QACE,SACA,YACA,SACDC,EACAC,GAEA,aASA,IAAIC,EAAaD,EAAOE,SACvBC,UAAc,aAEdC,WAAe,SAAUC,GAExBL,EAAOM,UAAUF,WAAWG,KAAKC,KAAMH,EAAQ,UAE/CG,KAAKC,qBAWNC,WAAa,SAASC,GAErB,OAAOH,KAAKI,KAAKF,WAAWC,IAG7BE,WAAa,WAEZb,EAAOM,UAAUO,WAAWN,KAAKC,MAEjC,IAAIM,EAAaC,OAAOC,gBAExBR,KAAKI,KAAKK,MAAQT,KAAKU,KAAKC,EAAIL,EAChCN,KAAKI,KAAKQ,OAASZ,KAAKU,KAAKG,EAAIP,KAKnC,OAAOf,EAAKE,WAAaA","file":"../canvas-pane.js","sourcesContent":["define([\r\n  \"./base\",\r\n  \"./widget\"\r\n],function(\r\n\tbase,\r\n\tWidget\r\n){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * DOM canvas element.\r\n\t * \r\n\t * @class Canvas\r\n\t * @extends {Widget}\r\n\t * @param {Widget} parent Parent element.\r\n\t */\r\n\tvar CanvasPane = Widget.inherit({\r\n\t\t\"klassName\" : \"CanvasPane\",\r\n\r\n\t\t\"_construct\" : function (parent)\r\n\t\t{\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"canvas\");\r\n\r\n\t\t\tthis.preventDragEvents();\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Get a context from this canvas.\r\n\t\t * \r\n\t\t * @method getContext\r\n\t\t * @param {string} type Type of context to get \"2d\", \"webgl\", etc\r\n\t\t * @return {Object} Context obtained from the canvas.\r\n\t\t */\r\n\t\tgetContext : function(type)\r\n\t\t{\r\n\t\t\treturn this._elm.getContext(type);\r\n\t\t},\r\n\r\n\t\tupdateSize : function()\r\n\t\t{\r\n\t\t\tWidget.prototype.updateSize.call(this);\r\n\r\n\t\t\tvar pixelRatio = Editor.getPixelRatio();\r\n\t\t\t\r\n\t\t\tthis._elm.width = this.size.x * pixelRatio;\r\n\t\t\tthis._elm.height = this.size.y * pixelRatio;\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn base.CanvasPane = CanvasPane;\r\n});"]}