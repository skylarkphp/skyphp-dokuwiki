{"version":3,"sources":["loading-modal.js"],"names":["define","funcs","base","Widget","TextPane","ImagePane","LoadingModal","inherit","_construct","parent","prototype","call","this","self","_elm","style","backgroundColor","zIndex","counter","text","setText","setStyle","message","allowWordBreak","icon","setImage","rotation","timer","loop","listenTo","$","window","event","updateInterface","show","start","visible","hide","force","stop","setVisibility","destroy","manager","updateSize","size","copy","set","x","center","position","y"],"mappings":";;;;;;;AAAAA,QACC,sBACA,SACA,WACA,cACA,gBACC,SACDC,EACAC,EAEAC,EACAC,EACAC,GAEA,aAWC,IAAIC,EAAeH,EAAOI,SAC1BC,WAAe,SAAUC,GAExBN,EAAOO,UAAUF,WAAWG,KAAKC,KAAMH,EAAQ,OAE/C,IAAII,EAAOD,KAEXA,KAAKE,KAAKC,MAAMC,gBAAkB,2BAClCJ,KAAKE,KAAKC,MAAME,OAAS,MAYzBL,KAAKM,QAAU,EAQfN,KAAKO,KAAO,IAAIf,EAASQ,MACzBA,KAAKO,KAAKC,QAAQ,gBAClBR,KAAKO,KAAKE,SAAS,QAAS,WAQ5BT,KAAKU,QAAU,IAAIlB,EAASQ,MAC5BA,KAAKU,QAAQF,QAAQ,eACrBR,KAAKU,QAAQD,SAAS,QAAS,WAC/BT,KAAKU,QAAQC,gBAAe,GAG5BX,KAAKY,KAAO,IAAInB,EAAUO,MAC1BA,KAAKY,KAAKC,SAAS,qBAEnB,IAAIC,EAAW,EAGfd,KAAKe,MAAQ,IAAI1B,EAAM2B,KAAK,WAE3BF,GAAY,IACZb,EAAKW,KAAKH,SAAS,YAAa,UAAYK,EAAW,UAKxDd,KAAKiB,SAASjB,KAAKkB,EAAEC,QAAS,SAAU,SAASC,GAEhDnB,EAAKoB,qBAYPC,KAAO,WAENtB,KAAKM,UAEe,IAAjBN,KAAKM,UAEPN,KAAKe,MAAMQ,QAEXvB,KAAKwB,SAAU,EACfxB,KAAKqB,oBAUPI,KAAO,SAASC,GAEf1B,KAAKM,WAEFN,KAAKM,QAAU,IAAe,IAAVoB,KAEtB1B,KAAKM,QAAU,EACfN,KAAKe,MAAMY,OAEX3B,KAAK4B,eAAc,KAIrBC,QAAU,WAETtC,EAAOO,UAAU+B,QAAQ9B,KAAKC,MAE9BA,KAAKM,QAAU,EACfN,KAAKe,MAAMY,OACX3B,KAAK8B,QAAQD,WAGdE,WAAa,WAEZ/B,KAAKgC,KAAKC,KAAKjC,KAAKH,OAAOmC,MAE3BzC,EAAOO,UAAUiC,WAAWhC,KAAKC,MAGjCA,KAAKO,KAAKE,SAAS,WAAY,QAC/BT,KAAKO,KAAKyB,KAAKE,IAAIlC,KAAKgC,KAAKG,EAAG,KAChCnC,KAAKO,KAAK6B,SACVpC,KAAKO,KAAK8B,SAASC,GAAKtC,KAAKO,KAAKyB,KAAKM,EACvCtC,KAAKO,KAAKc,kBAGVrB,KAAKU,QAAQD,SAAS,WAAY,QAClCT,KAAKU,QAAQsB,KAAKE,IAAIlC,KAAKgC,KAAKG,EAAG,KACnCnC,KAAKU,QAAQ0B,SACbpC,KAAKU,QAAQ2B,SAASC,GAAKtC,KAAKU,QAAQsB,KAAKM,EAAI,EACjDtC,KAAKU,QAAQW,kBAGbrB,KAAKY,KAAKoB,KAAKE,IAAI,GAAI,IACvBlC,KAAKY,KAAKwB,SACVpC,KAAKY,KAAKyB,SAASC,GAAK,GACxBtC,KAAKY,KAAKS,qBAKZ,OAAO/B,EAAKI,aAAeA","file":"../loading-modal.js","sourcesContent":["define([\r\n\t\"skylark-langx-funcs\",\r\n\t\"./base\",\r\n\t\"./widget\",\r\n\t\"./text-pane\",\r\n\t\"./image-pane\"\r\n],function(\r\n\tfuncs,\r\n\tbase,\r\n\r\n\tWidget,\r\n\tTextPane,\r\n\tImagePane\r\n){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Loading box, used to force the user to wait for data from a request.\r\n\t *\r\n\t * Blocks every input event (cancels propagation).\r\n\t * \r\n\t * @class LoadingModal\r\n\t * @extends {Element}\r\n\t * @param {Element} parent Parent element.\r\n\t */\r\n\t var LoadingModal = Widget.inherit({\r\n\t\t\"_construct\" : function (parent)\r\n\t\t{\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"div\");\r\n\t\t\t\r\n\t\t\tvar self = this;\r\n\r\n\t\t\tthis._elm.style.backgroundColor = \"rgba(0.0, 0.0, 0.0, 0.3)\"\r\n\t\t\tthis._elm.style.zIndex = \"200\";\r\n\r\n\t\t\t/**\r\n\t\t\t * Counter keeps the amount of requests to show the loadingBox.\r\n\t\t\t *\r\n\t\t\t * Is is incremented each time the box is show and decremented each time it is hidden.\r\n\t\t\t *\r\n\t\t\t * The box is only hidden if counter goes bellow 1.\r\n\t\t\t *\r\n\t\t\t * @attribute counter\r\n\t\t\t * @type {Number}\r\n\t\t\t */\r\n\t\t\tthis.counter = 0;\r\n\r\n\t\t\t/**\r\n\t\t\t * Loading text.\r\n\t\t\t *\r\n\t\t\t * @attribute text\r\n\t\t\t * @type {Text}\r\n\t\t\t */\r\n\t\t\tthis.text = new TextPane(this);\r\n\t\t\tthis.text.setText(\"Loading data\");\r\n\t\t\tthis.text.setStyle(\"color\", \"#FFFFFF\");\r\n\r\n\t\t\t/**\r\n\t\t\t * Message presented in the loading box.\r\n\t\t\t *\r\n\t\t\t * @attribute message\r\n\t\t\t * @type {Text}\r\n\t\t\t */\r\n\t\t\tthis.message = new TextPane(this);\r\n\t\t\tthis.message.setText(\"Please wait\");\r\n\t\t\tthis.message.setStyle(\"color\", \"#FFFFFF\");\r\n\t\t\tthis.message.allowWordBreak(true);\r\n\r\n\t\t\t//Icon\r\n\t\t\tthis.icon = new ImagePane(this);\r\n\t\t\tthis.icon.setImage(\"files/loading.png\");  // modified by lwf\r\n\t\t\t\r\n\t\t\tvar rotation = 0.0;\r\n\t\t\t\r\n\t\t\t//Animation\r\n\t\t\tthis.timer = new funcs.loop(function()\r\n\t\t\t{\r\n\t\t\t\trotation += 0.05;\r\n\t\t\t\tself.icon.setStyle(\"transform\", \"rotate(\" + rotation + \"rad)\");\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t//Event manager\r\n\t\t\t//this.manager = new EventManager();\r\n\t\t\tthis.listenTo(this.$(window), \"resize\", function(event)\r\n\t\t\t{\r\n\t\t\t\tself.updateInterface();\r\n\t\t\t});\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Show the loading box.\r\n\t\t * \r\n\t\t * @method show\r\n\t\t * @param {Boolean} showCancel If true shows the cancel button.\r\n\t\t * @param {Function} callback Callback function.\r\n\t\t */\r\n\t\tshow : function()\r\n\t\t{\t\r\n\t\t\tthis.counter++;\r\n\r\n\t\t\tif(this.counter === 1)\r\n\t\t\t{\r\n\t\t\t\tthis.timer.start();\r\n\t\t\t\t//this.manager.create();\r\n\t\t\t\tthis.visible = true;\r\n\t\t\t\tthis.updateInterface();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Hide modal box.\r\n\t\t *\r\n\t\t * @method hide\r\n\t\t * @param {Boolean} force Hide box and reset counter;\r\n\t\t */\r\n\t\thide : function(force)\r\n\t\t{\r\n\t\t\tthis.counter--;\r\n\r\n\t\t\tif(this.counter < 1 || force === true)\r\n\t\t\t{\r\n\t\t\t\tthis.counter = 0;\r\n\t\t\t\tthis.timer.stop();\r\n\t\t\t\t//this.manager.destroy();\r\n\t\t\t\tthis.setVisibility(false);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdestroy : function()\r\n\t\t{\r\n\t\t\tWidget.prototype.destroy.call(this);\r\n\r\n\t\t\tthis.counter = 0;\r\n\t\t\tthis.timer.stop();\r\n\t\t\tthis.manager.destroy();\r\n\t\t},\r\n\r\n\t\tupdateSize : function()\r\n\t\t{\r\n\t\t\tthis.size.copy(this.parent.size);\r\n\r\n\t\t\tWidget.prototype.updateSize.call(this);\r\n\r\n\t\t\t//Text\r\n\t\t\tthis.text.setStyle(\"fontSize\", \"38px\");\r\n\t\t\tthis.text.size.set(this.size.x, 100);\r\n\t\t\tthis.text.center();\r\n\t\t\tthis.text.position.y -= this.text.size.y;\r\n\t\t\tthis.text.updateInterface();\r\n\t\t\t\r\n\t\t\t//Message\r\n\t\t\tthis.message.setStyle(\"fontSize\", \"20px\");\r\n\t\t\tthis.message.size.set(this.size.x, 100);\r\n\t\t\tthis.message.center();\r\n\t\t\tthis.message.position.y -= this.message.size.y / 2;\r\n\t\t\tthis.message.updateInterface();\r\n\r\n\t\t\t//Icon\r\n\t\t\tthis.icon.size.set(80, 80);\r\n\t\t\tthis.icon.center();\r\n\t\t\tthis.icon.position.y += 30;\r\n\t\t\tthis.icon.updateInterface();\r\n\t\t}\r\n\r\n\t });\r\n\r\n\treturn base.LoadingModal = LoadingModal;\r\n});"]}