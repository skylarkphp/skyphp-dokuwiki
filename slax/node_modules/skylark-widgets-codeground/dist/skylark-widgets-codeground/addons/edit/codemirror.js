/**
 * skylark-widgets-codeground - The skylark code playground widget for showcasing html/css/js.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-widgets/skylark-widgets-codeground/
 * @license MIT
 */
define(["skylark-langx/langx","skylark-domx-query","skylark-codemirror/CodeMirror","../../addon","../../util","../../codeground","skylark-codemirror/mode/xml/xml","skylark-codemirror/mode/css/css","skylark-codemirror/mode/javascript/javascript","skylark-codemirror/mode/htmlmixed/htmlmixed","skylark-codemirror/mode/markdown/markdown","skylark-codemirror/addon/comment/comment","skylark-codemirror/addon/selection/active-line","skylark-codemirror/addon/fold/foldcode","skylark-codemirror/addon/fold/foldgutter","skylark-codemirror/addon/fold/brace-fold","skylark-codemirror/addon/fold/xml-fold","skylark-codemirror/addon/fold/indent-fold","skylark-codemirror/addon/fold/markdown-fold","skylark-codemirror/addon/fold/comment-fold","skylark-codemirror/addon/edit/matchbrackets","skylark-codemirror/addon/edit/closebrackets","skylark-codemirror/addon/edit/trailingspace","skylark-codemirror/addon/search/searchcursor","skylark-codemirror/addon/search/search","skylark-codemirror/addon/search/match-highlighter","skylark-codemirror/addon/dialog/dialog","skylark-codemirror/addon/hint/anyword-hint","skylark-codemirror/addon/hint/javascript-hint","skylark-codemirror/addon/lint/javascript-lint","skylark-codemirror/addon/lint/lint","skylark-codemirror/addon/tern/tern"],function(r,o,e,d,t,a){"use strict";class i extends d{get options(){return{highlightLine:!0,lineNumbers:!0,lineWrapping:!0,foldGutter:!0,gutters:["CodeMirror-linenumbers","CodeMirror-foldgutter"],pluginCssClass:"codeg-plugin-codemirror"}}_init(){super._init();var r,d=this.coder,a=this.options;this.editors={};var i={html:"htmlmixed"},s=(a=this.options,d.$(".codeg-editor"));for(r=0;r<s.length;r++){let d=o(s[r]).find("textarea"),n=d.data("codeg-type"),l=this.editors[n]=e.fromTextArea(d[0],a);l.setOption("mode",t.getMode(n,"",i)),l.$textarea=d,l.on("change",this.editorChange({type:n}))}this.listenTo(d,"reseted",this.update)}editorChange(r){return()=>{var o=this.editors[r.type];o.$textarea.val(o.getValue()),o.$textarea.trigger("change")}}update(o){var e=this.coder.getCodes();for(let o in this.editors){let d,t=this.editors[o],a=e[o];d=r.isString(a)?a:a.content||"",t.setValue(d)}}static get categoryName(){return"edit"}static get addonName(){return"codemirror"}}return i.register(a),i});
//# sourceMappingURL=../../sourcemaps/addons/edit/codemirror.js.map
