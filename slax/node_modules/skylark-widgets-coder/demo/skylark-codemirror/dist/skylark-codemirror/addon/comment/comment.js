/**
 * skylark-codemirror - A version of codemirror 5.45  that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-codemirror/
 * @license MIT
 */
define(["../../CodeMirror"],function(e){"use strict";var n={},t=/[^\s\u00a0]/,i=e.Pos;function l(e){var n=e.search(t);return-1==n?0:n}function o(e,n){var t=e.getMode();return!1!==t.useInnerComments&&t.innerMode?e.getModeAt(n):t}e.commands.toggleComment=function(e){e.toggleComment()},e.defineExtension("toggleComment",function(e){e||(e=n);for(var t=1/0,l=this.listSelections(),o=null,a=l.length-1;a>=0;a--){var r=l[a].from(),m=l[a].to();r.line>=t||(m.line>=t&&(m=i(t,0)),t=r.line,null==o?this.uncomment(r,m,e)?o="un":(this.lineComment(r,m,e),o="line"):"un"==o?this.uncomment(r,m,e):this.lineComment(r,m,e))}}),e.defineExtension("lineComment",function(e,a,r){r||(r=n);var m=this,c=o(m,e),g=m.getLine(e.line);if(null!=g&&(s=e,f=g,!/\bstring\b/.test(m.getTokenTypeAt(i(s.line,0)))||/^[\'\"\`]/.test(f))){var s,f,h=r.lineComment||c.lineComment;if(h){var d=Math.min(0!=a.ch||a.line==e.line?a.line+1:a.line,m.lastLine()+1),u=null==r.padding?" ":r.padding,v=r.commentBlankLines||e.line==a.line;m.operation(function(){if(r.indent){for(var n=null,o=e.line;o<d;++o){var a=(c=m.getLine(o)).slice(0,l(c));(null==n||n.length>a.length)&&(n=a)}for(o=e.line;o<d;++o){var c=m.getLine(o),g=n.length;(v||t.test(c))&&(c.slice(0,g)!=n&&(g=l(c)),m.replaceRange(n+h+u,i(o,0),i(o,g)))}}else for(o=e.line;o<d;++o)(v||t.test(m.getLine(o)))&&m.replaceRange(h+u,i(o,0))})}else(r.blockCommentStart||c.blockCommentStart)&&(r.fullLines=!0,m.blockComment(e,a,r))}}),e.defineExtension("blockComment",function(e,l,a){a||(a=n);var r=this,m=o(r,e),c=a.blockCommentStart||m.blockCommentStart,g=a.blockCommentEnd||m.blockCommentEnd;if(c&&g){if(!/\bcomment\b/.test(r.getTokenTypeAt(i(e.line,0)))){var s=Math.min(l.line,r.lastLine());s!=e.line&&0==l.ch&&t.test(r.getLine(s))&&--s;var f=null==a.padding?" ":a.padding;e.line>s||r.operation(function(){if(0!=a.fullLines){var n=t.test(r.getLine(s));r.replaceRange(f+g,i(s)),r.replaceRange(c+f,i(e.line,0));var o=a.blockCommentLead||m.blockCommentLead;if(null!=o)for(var h=e.line+1;h<=s;++h)(h!=s||n)&&r.replaceRange(o+f,i(h,0))}else r.replaceRange(g,l),r.replaceRange(c,e)})}}else(a.lineComment||m.lineComment)&&0!=a.fullLines&&r.lineComment(e,l,a)}),e.defineExtension("uncomment",function(e,l,a){a||(a=n);var r,m=this,c=o(m,e),g=Math.min(0!=l.ch||l.line==e.line?l.line:l.line-1,m.lastLine()),s=Math.min(e.line,g),f=a.lineComment||c.lineComment,h=[],d=null==a.padding?" ":a.padding;e:if(f){for(var u=s;u<=g;++u){var v=m.getLine(u),C=v.indexOf(f);if(C>-1&&!/comment/.test(m.getTokenTypeAt(i(u,C+1)))&&(C=-1),-1==C&&t.test(v))break e;if(C>-1&&t.test(v.slice(0,C)))break e;h.push(v)}if(m.operation(function(){for(var e=s;e<=g;++e){var n=h[e-s],t=n.indexOf(f),l=t+f.length;t<0||(n.slice(l,l+d.length)==d&&(l+=d.length),r=!0,m.replaceRange("",i(e,t),i(e,l)))}}),r)return!0}var p=a.blockCommentStart||c.blockCommentStart,k=a.blockCommentEnd||c.blockCommentEnd;if(!p||!k)return!1;var b=a.blockCommentLead||c.blockCommentLead,L=m.getLine(s),x=L.indexOf(p);if(-1==x)return!1;var R=g==s?L:m.getLine(g),O=R.indexOf(k,g==s?x+p.length:0),T=i(s,x+1),E=i(g,O+1);if(-1==O||!/comment/.test(m.getTokenTypeAt(T))||!/comment/.test(m.getTokenTypeAt(E))||m.getRange(T,E,"\n").indexOf(k)>-1)return!1;var M=L.lastIndexOf(p,e.ch),S=-1==M?-1:L.slice(0,e.ch).indexOf(k,M+p.length);if(-1!=M&&-1!=S&&S+k.length!=e.ch)return!1;S=R.indexOf(k,l.ch);var A=R.slice(l.ch).lastIndexOf(p,S-l.ch);return M=-1==S||-1==A?-1:l.ch+A,(-1==S||-1==M||M==l.ch)&&(m.operation(function(){m.replaceRange("",i(g,O-(d&&R.slice(O-d.length,O)==d?d.length:0)),i(g,O+k.length));var e=x+p.length;if(d&&L.slice(e,e+d.length)==d&&(e+=d.length),m.replaceRange("",i(s,x),i(s,e)),b)for(var n=s+1;n<=g;++n){var l=m.getLine(n),o=l.indexOf(b);if(-1!=o&&!t.test(l.slice(0,o))){var a=o+b.length;d&&l.slice(a,a+d.length)==d&&(a+=d.length),m.replaceRange("",i(n,o),i(n,a))}}}),!0)})});
//# sourceMappingURL=../../sourcemaps/addon/comment/comment.js.map
