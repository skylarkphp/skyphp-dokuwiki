/**
 * skylark-codemirror - A version of codemirror 5.45  that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-codemirror/
 * @license MIT
 */
define(["../line/saw_special_spans","../line/spans","../line/utils_line","../measurement/position_measurement","../util/browser","../util/dom","../util/event","../util/misc","./update_line","./selection","./update_lines","./view_tracking"],function(e,i,t,s,l,r,o,n,a,d,p,c){"use strict";class u{constructor(e,i,t){let l=e.display;this.viewport=i,this.visible=p.visibleLines(l,e.doc,i),this.editorIsHidden=!l.wrapper.offsetWidth,this.wrapperHeight=l.wrapper.clientHeight,this.wrapperWidth=l.wrapper.clientWidth,this.oldDisplayWidth=s.displayWidth(e),this.force=t,this.dims=s.getDimensions(e),this.events=[]}signal(e,i){o.hasHandler(e,i)&&this.events.push(arguments)}finish(){for(let e=0;e<this.events.length;e++)o.signal.apply(null,this.events[e])}}function h(o,d){let p=o.display,u=o.doc;if(d.editorIsHidden)return c.resetView(o),!1;if(!d.force&&d.visible.from>=p.viewFrom&&d.visible.to<=p.viewTo&&(null==p.updateLineNumbers||p.updateLineNumbers>=p.viewTo)&&p.renderedView==p.view&&0==c.countDirtyView(o))return!1;o.maybeUpdateLineNumberWidth()&&(c.resetView(o),d.dims=s.getDimensions(o));let h=u.first+u.size,f=Math.max(d.visible.from-o.options.viewportMargin,u.first),v=Math.min(h,d.visible.to+o.options.viewportMargin);p.viewFrom<f&&f-p.viewFrom<20&&(f=Math.max(u.first,p.viewFrom)),p.viewTo>v&&p.viewTo-v<20&&(v=Math.min(h,p.viewTo)),e.sawCollapsedSpans&&(f=i.visualLineNo(o.doc,f),v=i.visualLineEndNo(o.doc,v));let w=f!=p.viewFrom||v!=p.viewTo||p.lastWrapHeight!=d.wrapperHeight||p.lastWrapWidth!=d.wrapperWidth;c.adjustView(o,f,v),p.viewOffset=i.heightAtLine(t.getLine(o.doc,p.viewFrom)),o.display.mover.style.top=p.viewOffset+"px";let m=c.countDirtyView(o);if(!w&&0==m&&!d.force&&p.renderedView==p.view&&(null==p.updateLineNumbers||p.updateLineNumbers>=p.viewTo))return!1;let y=function(e){if(e.hasFocus())return null;let i=r.activeElt();if(!i||!r.contains(e.display.lineDiv,i))return null;let t={activeElt:i};if(window.getSelection){let i=window.getSelection();i.anchorNode&&i.extend&&r.contains(e.display.lineDiv,i.anchorNode)&&(t.anchorNode=i.anchorNode,t.anchorOffset=i.anchorOffset,t.focusNode=i.focusNode,t.focusOffset=i.focusOffset)}return t}(o);return m>4&&(p.lineDiv.style.display="none"),function(e,i,s){let o=e.display,d=e.options.lineNumbers,p=o.lineDiv,c=p.firstChild;function u(i){let t=i.nextSibling;return l.webkit&&l.mac&&e.display.currentWheelTarget==i?i.style.display="none":i.parentNode.removeChild(i),t}let h=o.view,f=o.viewFrom;for(let l=0;l<h.length;l++){let o=h[l];if(o.hidden);else if(o.node&&o.node.parentNode==p){for(;c!=o.node;)c=u(c);let l=d&&null!=i&&i<=f&&o.lineNumber;o.changes&&(n.indexOf(o.changes,"gutter")>-1&&(l=!1),a.updateLineForChanges(e,o,f,s)),l&&(r.removeChildren(o.lineNumber),o.lineNumber.appendChild(document.createTextNode(t.lineNumberFor(e.options,f)))),c=o.node.nextSibling}else{let i=a.buildLineElement(e,o,f,s);p.insertBefore(i,c)}f+=o.size}for(;c;)c=u(c)}(o,p.updateLineNumbers,d.dims),m>4&&(p.lineDiv.style.display=""),p.renderedView=p.view,function(e){if(e&&e.activeElt&&e.activeElt!=r.activeElt()&&(e.activeElt.focus(),e.anchorNode&&r.contains(document.body,e.anchorNode)&&r.contains(document.body,e.focusNode))){let i=window.getSelection(),t=document.createRange();t.setEnd(e.anchorNode,e.anchorOffset),t.collapse(!1),i.removeAllRanges(),i.addRange(t),i.extend(e.focusNode,e.focusOffset)}}(y),r.removeChildren(p.cursorDiv),r.removeChildren(p.selectionDiv),p.gutters.style.height=p.sizer.style.minHeight=0,w&&(p.lastWrapHeight=d.wrapperHeight,p.lastWrapWidth=d.wrapperWidth,o.startWorker(400)),p.updateLineNumbers=null,!0}function f(e,i){let t=i.viewport;for(let l=!0;(l&&e.options.lineWrapping&&i.oldDisplayWidth!=s.displayWidth(e)||(t&&null!=t.top&&(t={top:Math.min(e.doc.height+s.paddingVert(e.display)-s.displayHeight(e),t.top)}),i.visible=p.visibleLines(e.display,e.doc,t),!(i.visible.from>=e.display.viewFrom&&i.visible.to<=e.display.viewTo)))&&h(e,i);l=!1){p.updateHeightsInViewport(e);let t=e.measureForScrollbars();d.updateSelection(e),e.updateScrollbars(t),v(e,t),i.force=!1}i.signal(e,"update",e),e.display.viewFrom==e.display.reportedViewFrom&&e.display.viewTo==e.display.reportedViewTo||(i.signal(e,"viewportChange",e,e.display.viewFrom,e.display.viewTo),e.display.reportedViewFrom=e.display.viewFrom,e.display.reportedViewTo=e.display.viewTo)}function v(e,i){e.display.sizer.style.minHeight=i.docHeight+"px",e.display.heightForcer.style.top=i.docHeight+"px",e.display.gutters.style.height=i.docHeight+e.display.barHeight+s.scrollGap(e)+"px"}return{DisplayUpdate:u,maybeClipScrollbars:function(e){let i=e.display;!i.scrollbarsClipped&&i.scroller.offsetWidth&&(i.nativeBarWidth=i.scroller.offsetWidth-i.scroller.clientWidth,i.heightForcer.style.height=s.scrollGap(e)+"px",i.sizer.style.marginBottom=-i.nativeBarWidth+"px",i.sizer.style.borderRightWidth=s.scrollGap(e)+"px",i.scrollbarsClipped=!0)},updateDisplayIfNeeded:h,postUpdateDisplay:f,updateDisplaySimple:function(e,i){let t=new u(e,i);if(h(e,t)){p.updateHeightsInViewport(e),f(e,t);let i=e.measureForScrollbars();d.updateSelection(e),e.updateScrollbars(i),v(e,i),t.finish()}},updateGutterSpace:function(e){let i=e.display.gutters.offsetWidth;e.display.sizer.style.marginLeft=i+"px"},setDocumentHeight:v}});
//# sourceMappingURL=../../sourcemaps/primitives/display/update_display.js.map
