{"version":3,"sources":["addon/beautify/beautify.js"],"names":["define","langx","CodeMirror","Pos","defaultOptions","initialBeautify","autoBeautify","javascript","beautifyFunc","completionFunc","cm","change","indexOf","text","css","html","getOptions","doc","mode","state","name","beautify","options","setValue","getValue","onChange","shouldComplete","bracketChar","bracketCount","getRange","to","split","length","searchCount","i","lineCount","offset","lineText","getLine","setCursor","defineOption","val","old","Init","off","indentUnit","getOption","cmOptions","indent_size","mixin","on","defineExtension","this"],"mappings":";;;;;;;AAAAA,QACE,sBACA,oBACC,SAASC,EAAMC,GAChB,aACA,IAAIC,EAAMD,EAAWC,IAEjBC,GACFC,iBAAiB,EACjBC,cAAc,EACdC,YACEC,aAAc,KACdC,eAAgB,SAAUC,EAAIC,GAC5B,OAAoD,KAA5C,IAAK,IAAK,KAAKC,QAAQD,EAAOE,KAAK,MAG/CC,KACEN,aAAc,KACdC,eAAgB,SAAUC,EAAIC,GAC5B,OAA+C,KAAvC,IAAK,KAAKC,QAAQD,EAAOE,KAAK,MAG1CE,MACEP,aAAc,KACdC,eAAgB,SAAUC,EAAIC,GAC5B,OAA0C,KAAlC,KAAKC,QAAQD,EAAOE,KAAK,OAKvC,SAASG,EAAYN,GACnB,GAAKA,GAAOA,EAAGO,KAAQP,EAAGO,IAAIC,MAASR,EAAGS,MAG1C,MAAyB,eAArBT,EAAGO,IAAIC,KAAKE,KACPV,EAAGS,MAAME,SAASd,WACG,QAArBG,EAAGO,IAAIC,KAAKE,KACZV,EAAGS,MAAME,SAASP,IACG,cAArBJ,EAAGO,IAAIC,KAAKE,KACZV,EAAGS,MAAME,SAASN,UADtB,EAIP,SAASM,EAAUX,GACjB,IAAIY,EAAUN,EAAWN,GAErBY,GAAWA,EAAQd,cACrBE,EAAGa,SAASD,EAAQd,aAAaE,EAAGc,WAAYF,IAYpD,SAASG,EAAUf,EAAIC,GACrB,KAAID,EAAGS,MAAME,UAAaX,EAAGS,MAAME,SAASf,eAV9C,SAAwBI,EAAIC,GAC1B,IAAIW,EAAUN,EAAWN,GAEzB,QAAIY,EAAQb,gBACHa,EAAQb,eAAeC,EAAIC,GAShCe,CAAehB,EAAIC,GAAS,CAC9B,IAAIgB,EAAchB,EAAOE,KAAK,GAC1Be,EAAelB,EAAGmB,SAAS,IAAI1B,EAAI,EAAG,GAAIQ,EAAOmB,IAAIC,MAAMJ,GAAaK,OAE5EX,EAASX,GAIT,IAFA,IAAIuB,EAAc,EAETC,EAAI,EAAGA,EAAIxB,EAAGyB,YAAaD,IAAK,CAIvC,IAHA,IAAIE,GAAU,EACVC,EAAW3B,EAAG4B,QAAQJ,IAEuC,KAAzDE,EAASC,EAASzB,QAAQe,EAAaS,EAAS,KAGtD,GAAIR,MAFJK,EAEkC,CAChCvB,EAAG6B,UAAU,IAAIpC,EAAI+B,EAAGE,EAAS,IACjC,MAIJ,GAAIR,IAAiBK,EACnB,QAKR/B,EAAWsC,aAAa,YAAY,EAAO,SAAS9B,EAAI+B,EAAKC,GAG3D,GAFIA,GAAOA,IAAQxC,EAAWyC,MAC5BjC,EAAGkC,IAAI,SAAUnB,GACfgB,EAAK,CACP,IAAII,EAAanC,EAAGoC,UAAU,cAE1BC,GACFxC,YACEyC,YAAaH,GAEf/B,KACEkC,YAAaH,GAEf9B,MACEiC,YAAaH,IAKfnC,EAAGS,MAAME,SADQ,iBAARoB,EACWxC,EAAMgD,SAAU7C,EAAgB2C,EAAWN,GAAI,GAE/CxC,EAAMgD,SAAU7C,EAAgB2C,GAAU,GAE5DrC,EAAGS,MAAME,SAAShB,iBACpBgB,EAASX,GAEXA,EAAGwC,GAAG,SAAUzB,MAIpBvB,EAAWiD,gBAAgB,WAAY,WACrC9B,EAAS+B","file":"../../../addon/beautify/beautify.js","sourcesContent":["define([\r\n  \"skylark-langx/langx\",\r\n  \"../../CodeMirror\"\r\n], function(langx,CodeMirror) {\r\n  'use strict';\r\n  var Pos = CodeMirror.Pos;\r\n\r\n  var defaultOptions = {\r\n    initialBeautify: true,\r\n    autoBeautify: true,\r\n    javascript: {\r\n      beautifyFunc: null,\r\n      completionFunc: function (cm, change) {\r\n        return ['}', ']', ';'].indexOf(change.text[0]) !== -1;\r\n      }\r\n    },\r\n    css: {\r\n      beautifyFunc: null,\r\n      completionFunc: function (cm, change) {\r\n        return ['}', ';'].indexOf(change.text[0]) !== -1;\r\n      }\r\n    },\r\n    html: {\r\n      beautifyFunc: null,\r\n      completionFunc: function (cm, change) {\r\n        return ['>'].indexOf(change.text[0]) !== -1;\r\n      }\r\n    }\r\n  };\r\n\r\n  function getOptions (cm) {\r\n    if (!cm || !cm.doc || !cm.doc.mode || !cm.state)\r\n      return;\r\n\r\n    if (cm.doc.mode.name === 'javascript')\r\n      return cm.state.beautify.javascript;\r\n    else if (cm.doc.mode.name === 'css')\r\n      return cm.state.beautify.css;\r\n    else if (cm.doc.mode.name === 'htmlmixed')\r\n      return cm.state.beautify.html;\r\n  }\r\n\r\n  function beautify (cm) {\r\n    var options = getOptions(cm);\r\n\r\n    if (options && options.beautifyFunc)\r\n      cm.setValue(options.beautifyFunc(cm.getValue(), options));\r\n  }\r\n\r\n  function shouldComplete(cm, change) {\r\n    var options = getOptions(cm);\r\n\r\n    if (options.completionFunc)\r\n      return options.completionFunc(cm, change);\r\n\r\n    return false;\r\n  }\r\n\r\n  function onChange (cm, change) {\r\n    if (cm.state.beautify && !cm.state.beautify.autoBeautify)\r\n      return;\r\n\r\n    if (shouldComplete(cm, change)) {\r\n      var bracketChar = change.text[0];\r\n      var bracketCount = cm.getRange(new Pos(0, 0), change.to).split(bracketChar).length;\r\n\r\n      beautify(cm);\r\n\r\n      var searchCount = 0;\r\n\r\n      for (var i = 0; i < cm.lineCount(); i++) {\r\n        var offset = -1;\r\n        var lineText = cm.getLine(i);\r\n\r\n        while ((offset = lineText.indexOf(bracketChar, offset + 1)) !== -1) {\r\n          searchCount++;\r\n\r\n          if (bracketCount === searchCount) {\r\n            cm.setCursor(new Pos(i, offset + 1));\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (bracketCount === searchCount)\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  CodeMirror.defineOption('beautify', false, function(cm, val, old) {\r\n    if (old && old !== CodeMirror.Init)\r\n      cm.off('change', onChange);\r\n    if (val) {\r\n      var indentUnit = cm.getOption('indentUnit');\r\n\r\n      var cmOptions = {\r\n        javascript: {\r\n          indent_size: indentUnit\r\n        },\r\n        css: {\r\n          indent_size: indentUnit\r\n        },\r\n        html: {\r\n          indent_size: indentUnit\r\n        }\r\n      };\r\n\r\n      if (typeof val === 'object')\r\n        cm.state.beautify = langx.mixin({}, defaultOptions, cmOptions, val,true);\r\n      else\r\n        cm.state.beautify = langx.mixin({}, defaultOptions, cmOptions,true);\r\n\r\n      if (cm.state.beautify.initialBeautify)\r\n        beautify(cm);\r\n\r\n      cm.on('change', onChange);\r\n    }\r\n  });\r\n\r\n  CodeMirror.defineExtension('beautify', function () {\r\n    beautify(this);\r\n  });\r\n});"]}