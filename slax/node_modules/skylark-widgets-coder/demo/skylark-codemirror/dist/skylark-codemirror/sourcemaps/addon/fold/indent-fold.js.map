{"version":3,"sources":["addon/fold/indent-fold.js"],"names":["define","CodeMirror","lineIndent","cm","lineNo","text","getLine","spaceTo","search","test","getTokenTypeAt","Pos","countColumn","getOption","registerHelper","start","myIndent","line","lastLineInFold","i","end","lastLine","indent","from","length","to"],"mappings":";;;;;;;AAGAA,QAAQ,oBAAqB,SAASC,GACtC,aAEA,SAASC,EAAWC,EAAIC,GACtB,IAAIC,EAAOF,EAAGG,QAAQF,GAClBG,EAAUF,EAAKG,OAAO,MAC1B,OAAgB,GAAZD,GAAiB,cAAcE,KAAKN,EAAGO,eAAeT,EAAWU,IAAIP,EAAQG,EAAU,MACjF,EACHN,EAAWW,YAAYP,EAAM,KAAMF,EAAGU,UAAU,YAGzDZ,EAAWa,eAAe,OAAQ,SAAU,SAASX,EAAIY,GACvD,IAAIC,EAAWd,EAAWC,EAAIY,EAAME,MACpC,KAAID,EAAW,GAAf,CAKA,IAJA,IAAIE,EAAiB,KAIZC,EAAIJ,EAAME,KAAO,EAAGG,EAAMjB,EAAGkB,WAAYF,GAAKC,IAAOD,EAAG,CAC/D,IAAIG,EAASpB,EAAWC,EAAIgB,GAC5B,IAAe,GAAXG,OACG,CAAA,KAAIA,EAASN,GAOlB,MALAE,EAAiBC,GAQrB,OAAID,GACFK,KAAMtB,EAAWU,IAAII,EAAME,KAAMd,EAAGG,QAAQS,EAAME,MAAMO,QACxDC,GAAIxB,EAAWU,IAAIO,EAAgBf,EAAGG,QAAQY,GAAgBM,cAFhE","file":"../../../addon/fold/indent-fold.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\ndefine([\"../../CodeMirror\"], function(CodeMirror) {\n\"use strict\";\n\nfunction lineIndent(cm, lineNo) {\n  var text = cm.getLine(lineNo)\n  var spaceTo = text.search(/\\S/)\n  if (spaceTo == -1 || /\\bcomment\\b/.test(cm.getTokenTypeAt(CodeMirror.Pos(lineNo, spaceTo + 1))))\n    return -1\n  return CodeMirror.countColumn(text, null, cm.getOption(\"tabSize\"))\n}\n\nCodeMirror.registerHelper(\"fold\", \"indent\", function(cm, start) {\n  var myIndent = lineIndent(cm, start.line)\n  if (myIndent < 0) return\n  var lastLineInFold = null\n\n  // Go through lines until we find a line that definitely doesn't belong in\n  // the block we're folding, or to the end.\n  for (var i = start.line + 1, end = cm.lastLine(); i <= end; ++i) {\n    var indent = lineIndent(cm, i)\n    if (indent == -1) {\n    } else if (indent > myIndent) {\n      // Lines with a greater indent are considered part of the block.\n      lastLineInFold = i;\n    } else {\n      // If this line has non-space, non-comment content, and is\n      // indented less or equal to the start line, it is the start of\n      // another block.\n      break;\n    }\n  }\n  if (lastLineInFold) return {\n    from: CodeMirror.Pos(start.line, cm.getLine(start.line).length),\n    to: CodeMirror.Pos(lastLineInFold, cm.getLine(lastLineInFold).length)\n  };\n});\n\n});\n"]}