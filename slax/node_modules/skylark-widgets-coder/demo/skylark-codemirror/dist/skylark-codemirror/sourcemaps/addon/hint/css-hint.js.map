{"version":3,"sources":["addon/hint/css-hint.js"],"names":["define","CodeMirror","pseudoClasses","link","visited","active","hover","focus","first-letter","first-line","first-child","before","after","lang","registerHelper","cm","cur","getCursor","token","getTokenAt","inner","innerMode","getMode","state","mode","name","type","indexOf","string","list","from","Pos","line","start","to","end","ch","word","slice","test","spec","resolveMode","result","st","add","propertyKeywords","valueKeywords","colorKeywords","mediaTypes","mediaFeatures","length","keywords","lastIndexOf","push"],"mappings":";;;;;;;AAGAA,QAAQ,mBAAoB,sBAAuB,SAASC,GAC1D,aAEA,IAAIC,GAAiBC,KAAM,EAAGC,QAAS,EAAGC,OAAQ,EAAGC,MAAO,EAAGC,MAAO,EACjDC,eAAgB,EAAGC,aAAc,EAAGC,cAAe,EACnDC,OAAQ,EAAGC,MAAO,EAAGC,KAAM,GAEhDZ,EAAWa,eAAe,OAAQ,MAAO,SAASC,GAChD,IAAIC,EAAMD,EAAGE,YAAaC,EAAQH,EAAGI,WAAWH,GAC5CI,EAAQnB,EAAWoB,UAAUN,EAAGO,UAAWJ,EAAMK,OACrD,GAAuB,OAAnBH,EAAMI,KAAKC,KAAf,CAEA,GAAkB,WAAdP,EAAMQ,MAA2D,GAAtC,aAAaC,QAAQT,EAAMU,QACxD,OAAQC,MAAO,cAAeC,KAAM7B,EAAW8B,IAAIf,EAAIgB,KAAMd,EAAMe,OAC3DC,GAAIjC,EAAW8B,IAAIf,EAAIgB,KAAMd,EAAMiB,MAE7C,IAAIF,EAAQf,EAAMe,MAAOE,EAAMnB,EAAIoB,GAAIC,EAAOnB,EAAMU,OAAOU,MAAM,EAAGH,EAAMF,GACtE,WAAWM,KAAKF,KAClBA,EAAO,GAAIJ,EAAQE,EAAMnB,EAAIoB,IAG/B,IAAII,EAAOvC,EAAWwC,YAAY,YAE9BC,KAOAC,EAAKvB,EAAMG,MAAMA,MAarB,MAZU,UAANoB,GAAgC,cAAdzB,EAAMQ,KAC1BkB,EAAI1C,GACW,SAANyC,GAAuB,aAANA,EAC1BC,EAAIJ,EAAKK,kBACM,QAANF,GAAsB,UAANA,GAAwB,MAANA,GAAoB,UAANA,GACzDC,EAAIJ,EAAKM,eACTF,EAAIJ,EAAKO,gBACM,SAANJ,GAAuB,gBAANA,IAC1BC,EAAIJ,EAAKQ,YACTJ,EAAIJ,EAAKS,gBAGPP,EAAOQ,QACTrB,KAAMa,EACNZ,KAAM7B,EAAW8B,IAAIf,EAAIgB,KAAMC,GAC/BC,GAAIjC,EAAW8B,IAAIf,EAAIgB,KAAMG,SAH/B,EAnBA,SAASS,EAAIO,GACX,IAAK,IAAI1B,KAAQ0B,EACVd,GAAqC,GAA7BZ,EAAK2B,YAAYf,EAAM,IAClCK,EAAOW,KAAK5B","file":"../../../addon/hint/css-hint.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\ndefine([\"../../CodeMirror\", \"../../mode/css/css\"], function(CodeMirror) {\n  \"use strict\";\n\n  var pseudoClasses = {link: 1, visited: 1, active: 1, hover: 1, focus: 1,\n                       \"first-letter\": 1, \"first-line\": 1, \"first-child\": 1,\n                       before: 1, after: 1, lang: 1};\n\n  CodeMirror.registerHelper(\"hint\", \"css\", function(cm) {\n    var cur = cm.getCursor(), token = cm.getTokenAt(cur);\n    var inner = CodeMirror.innerMode(cm.getMode(), token.state);\n    if (inner.mode.name != \"css\") return;\n\n    if (token.type == \"keyword\" && \"!important\".indexOf(token.string) == 0)\n      return {list: [\"!important\"], from: CodeMirror.Pos(cur.line, token.start),\n              to: CodeMirror.Pos(cur.line, token.end)};\n\n    var start = token.start, end = cur.ch, word = token.string.slice(0, end - start);\n    if (/[^\\w$_-]/.test(word)) {\n      word = \"\"; start = end = cur.ch;\n    }\n\n    var spec = CodeMirror.resolveMode(\"text/css\");\n\n    var result = [];\n    function add(keywords) {\n      for (var name in keywords)\n        if (!word || name.lastIndexOf(word, 0) == 0)\n          result.push(name);\n    }\n\n    var st = inner.state.state;\n    if (st == \"pseudo\" || token.type == \"variable-3\") {\n      add(pseudoClasses);\n    } else if (st == \"block\" || st == \"maybeprop\") {\n      add(spec.propertyKeywords);\n    } else if (st == \"prop\" || st == \"parens\" || st == \"at\" || st == \"params\") {\n      add(spec.valueKeywords);\n      add(spec.colorKeywords);\n    } else if (st == \"media\" || st == \"media_parens\") {\n      add(spec.mediaTypes);\n      add(spec.mediaFeatures);\n    }\n\n    if (result.length) return {\n      list: result,\n      from: CodeMirror.Pos(cur.line, start),\n      to: CodeMirror.Pos(cur.line, end)\n    };\n  });\n});\n"]}