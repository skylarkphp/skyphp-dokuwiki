{"version":3,"sources":["addon/lint/lint.js"],"names":["define","CodeMirror","GUTTER_ID","rm","elt","parentNode","removeChild","showTooltipFor","e","content","node","tooltip","tt","document","createElement","position","off","style","top","Math","max","clientY","offsetHeight","left","clientX","className","appendChild","cloneNode","body","on","opacity","showTooltip","hide","setTimeout","poll","setInterval","n","nodeType","host","clearInterval","LintState","cm","options","hasGutter","this","marked","timeout","onMouseOver","target","srcElement","test","box","getBoundingClientRect","x","right","y","bottom","spans","findMarksAt","coordsChar","annotations","i","length","ann","__annotation","push","createDocumentFragment","annotationTooltip","popupTooltips","waitingFor","clearMarks","state","lint","clearGutter","clear","makeMarker","labels","severity","multiple","tooltips","marker","inner","tip","messageHTML","innerHTML","createTextNode","message","startLinting","passOptions","getAnnotations","getHelper","Pos","async","id","abort","getValue","arg2","operation","updateLinting","lintAsync","then","issues","annotationsNotSorted","a","lines","line","from","groupByLine","anns","maxSeverity","tipLabel","formatAnnotation","to","markText","setGutterMarker","onUpdateLinting","onChange","clearTimeout","delay","defineOption","val","old","Init","lintOnChange","getWrapperElement","gutters","getOption","hasLintGutter","Function","defineExtension"],"mappings":"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","file":"../../../addon/lint/lint.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\ndefine([\"../../CodeMirror\"], function(CodeMirror) {\n  \"use strict\";\n  var GUTTER_ID = \"CodeMirror-lint-markers\";\n\n  function showTooltip(e, content) {\n    var tt = document.createElement(\"div\");\n    tt.className = \"CodeMirror-lint-tooltip\";\n    tt.appendChild(content.cloneNode(true));\n    document.body.appendChild(tt);\n\n    function position(e) {\n      if (!tt.parentNode) return CodeMirror.off(document, \"mousemove\", position);\n      tt.style.top = Math.max(0, e.clientY - tt.offsetHeight - 5) + \"px\";\n      tt.style.left = (e.clientX + 5) + \"px\";\n    }\n    CodeMirror.on(document, \"mousemove\", position);\n    position(e);\n    if (tt.style.opacity != null) tt.style.opacity = 1;\n    return tt;\n  }\n  function rm(elt) {\n    if (elt.parentNode) elt.parentNode.removeChild(elt);\n  }\n  function hideTooltip(tt) {\n    if (!tt.parentNode) return;\n    if (tt.style.opacity == null) rm(tt);\n    tt.style.opacity = 0;\n    setTimeout(function() { rm(tt); }, 600);\n  }\n\n  function showTooltipFor(e, content, node) {\n    var tooltip = showTooltip(e, content);\n    function hide() {\n      CodeMirror.off(node, \"mouseout\", hide);\n      if (tooltip) { hideTooltip(tooltip); tooltip = null; }\n    }\n    var poll = setInterval(function() {\n      if (tooltip) for (var n = node;; n = n.parentNode) {\n        if (n && n.nodeType == 11) n = n.host;\n        if (n == document.body) return;\n        if (!n) { hide(); break; }\n      }\n      if (!tooltip) return clearInterval(poll);\n    }, 400);\n    CodeMirror.on(node, \"mouseout\", hide);\n  }\n\n  function LintState(cm, options, hasGutter) {\n    this.marked = [];\n    this.options = options;\n    this.timeout = null;\n    this.hasGutter = hasGutter;\n    this.onMouseOver = function(e) { onMouseOver(cm, e); };\n    this.waitingFor = 0\n  }\n\n  function parseOptions(_cm, options) {\n    if (options instanceof Function) return {getAnnotations: options};\n    if (!options || options === true) options = {};\n    return options;\n  }\n\n  function clearMarks(cm) {\n    var state = cm.state.lint;\n    if (state.hasGutter) cm.clearGutter(GUTTER_ID);\n    for (var i = 0; i < state.marked.length; ++i)\n      state.marked[i].clear();\n    state.marked.length = 0;\n  }\n\n  function makeMarker(labels, severity, multiple, tooltips) {\n    var marker = document.createElement(\"div\"), inner = marker;\n    marker.className = \"CodeMirror-lint-marker-\" + severity;\n    if (multiple) {\n      inner = marker.appendChild(document.createElement(\"div\"));\n      inner.className = \"CodeMirror-lint-marker-multiple\";\n    }\n\n    if (tooltips != false) CodeMirror.on(inner, \"mouseover\", function(e) {\n      showTooltipFor(e, labels, inner);\n    });\n\n    return marker;\n  }\n\n  function getMaxSeverity(a, b) {\n    if (a == \"error\") return a;\n    else return b;\n  }\n\n  function groupByLine(annotations) {\n    var lines = [];\n    for (var i = 0; i < annotations.length; ++i) {\n      var ann = annotations[i], line = ann.from.line;\n      (lines[line] || (lines[line] = [])).push(ann);\n    }\n    return lines;\n  }\n\n  function annotationTooltip(ann) {\n    var severity = ann.severity;\n    if (!severity) severity = \"error\";\n    var tip = document.createElement(\"div\");\n    tip.className = \"CodeMirror-lint-message-\" + severity;\n    if (typeof ann.messageHTML != 'undefined') {\n        tip.innerHTML = ann.messageHTML;\n    } else {\n        tip.appendChild(document.createTextNode(ann.message));\n    }\n    return tip;\n  }\n\n  function lintAsync(cm, getAnnotations, passOptions) {\n    var state = cm.state.lint\n    var id = ++state.waitingFor\n    function abort() {\n      id = -1\n      cm.off(\"change\", abort)\n    }\n    cm.on(\"change\", abort)\n    getAnnotations(cm.getValue(), function(annotations, arg2) {\n      cm.off(\"change\", abort)\n      if (state.waitingFor != id) return\n      if (arg2 && annotations instanceof CodeMirror) annotations = arg2\n      cm.operation(function() {updateLinting(cm, annotations)})\n    }, passOptions, cm);\n  }\n\n  function startLinting(cm) {\n    var state = cm.state.lint, options = state.options;\n    /*\n     * Passing rules in `options` property prevents JSHint (and other linters) from complaining\n     * about unrecognized rules like `onUpdateLinting`, `delay`, `lintOnChange`, etc.\n     */\n    var passOptions = options.options || options;\n    var getAnnotations = options.getAnnotations || cm.getHelper(CodeMirror.Pos(0, 0), \"lint\");\n    if (!getAnnotations) return;\n    if (options.async || getAnnotations.async) {\n      lintAsync(cm, getAnnotations, passOptions)\n    } else {\n      var annotations = getAnnotations(cm.getValue(), passOptions, cm);\n      if (!annotations) return;\n      if (annotations.then) annotations.then(function(issues) {\n        cm.operation(function() {updateLinting(cm, issues)})\n      });\n      else cm.operation(function() {updateLinting(cm, annotations)})\n    }\n  }\n\n  function updateLinting(cm, annotationsNotSorted) {\n    clearMarks(cm);\n    var state = cm.state.lint, options = state.options;\n\n    var annotations = groupByLine(annotationsNotSorted);\n\n    for (var line = 0; line < annotations.length; ++line) {\n      var anns = annotations[line];\n      if (!anns) continue;\n\n      var maxSeverity = null;\n      var tipLabel = state.hasGutter && document.createDocumentFragment();\n\n      for (var i = 0; i < anns.length; ++i) {\n        var ann = anns[i];\n        var severity = ann.severity;\n        if (!severity) severity = \"error\";\n        maxSeverity = getMaxSeverity(maxSeverity, severity);\n\n        if (options.formatAnnotation) ann = options.formatAnnotation(ann);\n        if (state.hasGutter) tipLabel.appendChild(annotationTooltip(ann));\n\n        if (ann.to) state.marked.push(cm.markText(ann.from, ann.to, {\n          className: \"CodeMirror-lint-mark-\" + severity,\n          __annotation: ann\n        }));\n      }\n\n      if (state.hasGutter)\n        cm.setGutterMarker(line, GUTTER_ID, makeMarker(tipLabel, maxSeverity, anns.length > 1,\n                                                       state.options.tooltips));\n    }\n    if (options.onUpdateLinting) options.onUpdateLinting(annotationsNotSorted, annotations, cm);\n  }\n\n  function onChange(cm) {\n    var state = cm.state.lint;\n    if (!state) return;\n    clearTimeout(state.timeout);\n    state.timeout = setTimeout(function(){startLinting(cm);}, state.options.delay || 500);\n  }\n\n  function popupTooltips(annotations, e) {\n    var target = e.target || e.srcElement;\n    var tooltip = document.createDocumentFragment();\n    for (var i = 0; i < annotations.length; i++) {\n      var ann = annotations[i];\n      tooltip.appendChild(annotationTooltip(ann));\n    }\n    showTooltipFor(e, tooltip, target);\n  }\n\n  function onMouseOver(cm, e) {\n    var target = e.target || e.srcElement;\n    if (!/\\bCodeMirror-lint-mark-/.test(target.className)) return;\n    var box = target.getBoundingClientRect(), x = (box.left + box.right) / 2, y = (box.top + box.bottom) / 2;\n    var spans = cm.findMarksAt(cm.coordsChar({left: x, top: y}, \"client\"));\n\n    var annotations = [];\n    for (var i = 0; i < spans.length; ++i) {\n      var ann = spans[i].__annotation;\n      if (ann) annotations.push(ann);\n    }\n    if (annotations.length) popupTooltips(annotations, e);\n  }\n\n  CodeMirror.defineOption(\"lint\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      clearMarks(cm);\n      if (cm.state.lint.options.lintOnChange !== false)\n        cm.off(\"change\", onChange);\n      CodeMirror.off(cm.getWrapperElement(), \"mouseover\", cm.state.lint.onMouseOver);\n      clearTimeout(cm.state.lint.timeout);\n      delete cm.state.lint;\n    }\n\n    if (val) {\n      var gutters = cm.getOption(\"gutters\"), hasLintGutter = false;\n      for (var i = 0; i < gutters.length; ++i) if (gutters[i] == GUTTER_ID) hasLintGutter = true;\n      var state = cm.state.lint = new LintState(cm, parseOptions(cm, val), hasLintGutter);\n      if (state.options.lintOnChange !== false)\n        cm.on(\"change\", onChange);\n      if (state.options.tooltips != false && state.options.tooltips != \"gutter\")\n        CodeMirror.on(cm.getWrapperElement(), \"mouseover\", state.onMouseOver);\n\n      startLinting(cm);\n    }\n  });\n\n  CodeMirror.defineExtension(\"performLint\", function() {\n    if (this.state.lint) startLinting(this);\n  });\n});\n"]}