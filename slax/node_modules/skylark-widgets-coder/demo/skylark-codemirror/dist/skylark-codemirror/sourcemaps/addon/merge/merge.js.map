{"version":3,"sources":["addon/merge/merge.js"],"names":["define","CodeMirror","Pos","svgNS","DiffView","mv","type","this","classes","chunk","start","end","insert","del","connect","ensureDiff","dv","diffOutOfDate","diff","getDiff","orig","getValue","edit","options","ignoreWhitespace","chunks","getChunks","signal","prototype","constructor","init","pane","state","diffViews","push","copyObj","value","readOnly","allowEditingOriginals","trackAlignable","TrackAlignable","lockButton","title","phrase","classLocation","chunkClassLocation","Object","toString","call","asString","dealigned","needsScrollSync","showDifferences","registerEvents","otherDv","forceUpdate","debounceChange","from","to","marked","updatingFast","update","mode","updating","svg","clear","copyButtons","clearMarks","updateMarks","DIFF_INSERT","DIFF_DELETE","alignChunks","makeConnections","syncScroll","setDealign","fast","set","clearTimeout","setTimeout","change","_cm","text","length","line","swapDoc","on","registerUpdate","setScrollLock","registerScroll","setShowDifferences","val","toOrig","lockScroll","editor","other","now","Date","scrollSetBy","scrollSetAt","sInfo","getScrollInfo","targetPos","top","botDist","mix","halfScreen","clientHeight","midY","mid","lineAtHeight","around","n","nInEdit","beforeE","afterE","beforeO","afterO","i","fromLocal","editFrom","origFrom","toLocal","editTo","origTo","before","after","chunkBoundariesAround","off","getOffsets","offOther","ratio","bot","height","otherInfo","scrollTo","left","lastLine","heightAtLine","action","addClass","rmClass","removeClass","locs","removeLineClass","arr","mark","TextMarker","parent","vp","getViewport","operation","markChanges","lineNr","main","getLineHandle","addLineClass","marks","pos","clipPos","cls","markChunk","bfrom","Math","max","bto","min","chunkStart","pending","part","tp","str","DIFF_EQUAL","cleanFrom","startOfLineClean","moveOver","cleanTo","endOfLineClean","a","posMax","b","posMin","posEq","markText","className","w","gap","offsetWidth","attrs","offsetHeight","vpEdit","vpOrig","outerTop","wrap","getBoundingClientRect","sTopEdit","getScrollerElement","sTopOrig","ch","drawConnectorsForChunk","getMatchingOrigLine","editLine","editStart","origStart","alignableFor","cm","isOrig","tracker","firstLine","trackI","result","alignable","mergeAlignable","origAlignable","setIndex","rI","origI","chunkI","outer","nextR","nextO","rLine","oLine","record","splice","force","curOp","right","linesToAlign","j","findAlignedLines","aligners","scroll","ln","alignLines","lines","maxOffset","offset","padAbove","size","above","elt","document","createElement","style","minWidth","addLineWidget","mergeSpacer","handleMouseEvents","flip","topLpx","topRpx","tmp","botLpx","botRpx","curveTop","curveBot","appendChild","createElementNS","copy","editOriginals","topReverse","copyReverse","copyChunk","origEnd","editEnd","handler","revertChunk","replaceRange","getRange","dmp","MergeView","node","origLeft","origRight","hasLeft","hasRight","panes","self","leftPane","buildGap","editPane","rightPane","wrapElt","collapseIdentical","margin","l","e","unclearNearChunks","editors","collapseStretch","onCollapse","collapseIdenticalStretches","onResize","window","resizeInterval","setInterval","p","parentNode","body","clearInterval","lock","lockWrap","gapElts","revertButtons","target","srcElement","unshift","createSVGRect","obj","diff_match_patch","diff_main","test","startEdit","startOrig","startOff","cleanFromEdit","cleanFromOrig","endOff","cleanToEdit","cleanToOrig","next","charCodeAt","last","collapseSingle","widget","inclusiveLeft","inclusiveRight","replacedWith","clearOnEnter","explicitlyCleared","tag","content","cssText","createTextNode","count","childNodes","removeChild","firstChild","arguments","setAttribute","prop","hasOwnProperty","out","at","nl","indexOf","rightOriginal","leftOriginal","rightChunks","leftChunks","F_WIDGET","F_WIDGET_BELOW","F_MARKER","doc","_","marker","collapsed","found","find","_min","check","hasMarker","bind","lineNo","hasWidgetBelow","hasWidget","nBefore","nAfter","map","findPrevDiff","findNextDiff","goNearbyDiff","dir","views","getCursor","Pass","setCursor","flags","flag","pred","handle","markedSpans","widgets","widgetFrom","widgetTo","commands","goNextDiff","goPrevDiff"],"mappings":"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","file":"../../../addon/merge/merge.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// declare global: diff_match_patch, DIFF_INSERT, DIFF_DELETE, DIFF_EQUAL\n\ndefine([\"../../CodeMirror\", \"diff_match_patch\"], function(CodeMirror) {\n  \"use strict\";\n  var Pos = CodeMirror.Pos;\n  var svgNS = \"http://www.w3.org/2000/svg\";\n\n  function DiffView(mv, type) {\n    this.mv = mv;\n    this.type = type;\n    this.classes = type == \"left\"\n      ? {chunk: \"CodeMirror-merge-l-chunk\",\n         start: \"CodeMirror-merge-l-chunk-start\",\n         end: \"CodeMirror-merge-l-chunk-end\",\n         insert: \"CodeMirror-merge-l-inserted\",\n         del: \"CodeMirror-merge-l-deleted\",\n         connect: \"CodeMirror-merge-l-connect\"}\n      : {chunk: \"CodeMirror-merge-r-chunk\",\n         start: \"CodeMirror-merge-r-chunk-start\",\n         end: \"CodeMirror-merge-r-chunk-end\",\n         insert: \"CodeMirror-merge-r-inserted\",\n         del: \"CodeMirror-merge-r-deleted\",\n         connect: \"CodeMirror-merge-r-connect\"};\n  }\n\n  DiffView.prototype = {\n    constructor: DiffView,\n    init: function(pane, orig, options) {\n      this.edit = this.mv.edit;\n      ;(this.edit.state.diffViews || (this.edit.state.diffViews = [])).push(this);\n      this.orig = CodeMirror(pane, copyObj({value: orig, readOnly: !this.mv.options.allowEditingOriginals}, copyObj(options)));\n      if (this.mv.options.connect == \"align\") {\n        if (!this.edit.state.trackAlignable) this.edit.state.trackAlignable = new TrackAlignable(this.edit)\n        this.orig.state.trackAlignable = new TrackAlignable(this.orig)\n      }\n      this.lockButton.title = this.edit.phrase(\"Toggle locked scrolling\");\n\n      this.orig.state.diffViews = [this];\n      var classLocation = options.chunkClassLocation || \"background\";\n      if (Object.prototype.toString.call(classLocation) != \"[object Array]\") classLocation = [classLocation]\n      this.classes.classLocation = classLocation\n\n      this.diff = getDiff(asString(orig), asString(options.value), this.mv.options.ignoreWhitespace);\n      this.chunks = getChunks(this.diff);\n      this.diffOutOfDate = this.dealigned = false;\n      this.needsScrollSync = null\n\n      this.showDifferences = options.showDifferences !== false;\n    },\n    registerEvents: function(otherDv) {\n      this.forceUpdate = registerUpdate(this);\n      setScrollLock(this, true, false);\n      registerScroll(this, otherDv);\n    },\n    setShowDifferences: function(val) {\n      val = val !== false;\n      if (val != this.showDifferences) {\n        this.showDifferences = val;\n        this.forceUpdate(\"full\");\n      }\n    }\n  };\n\n  function ensureDiff(dv) {\n    if (dv.diffOutOfDate) {\n      dv.diff = getDiff(dv.orig.getValue(), dv.edit.getValue(), dv.mv.options.ignoreWhitespace);\n      dv.chunks = getChunks(dv.diff);\n      dv.diffOutOfDate = false;\n      CodeMirror.signal(dv.edit, \"updateDiff\", dv.diff);\n    }\n  }\n\n  var updating = false;\n  function registerUpdate(dv) {\n    var edit = {from: 0, to: 0, marked: []};\n    var orig = {from: 0, to: 0, marked: []};\n    var debounceChange, updatingFast = false;\n    function update(mode) {\n      updating = true;\n      updatingFast = false;\n      if (mode == \"full\") {\n        if (dv.svg) clear(dv.svg);\n        if (dv.copyButtons) clear(dv.copyButtons);\n        clearMarks(dv.edit, edit.marked, dv.classes);\n        clearMarks(dv.orig, orig.marked, dv.classes);\n        edit.from = edit.to = orig.from = orig.to = 0;\n      }\n      ensureDiff(dv);\n      if (dv.showDifferences) {\n        updateMarks(dv.edit, dv.diff, edit, DIFF_INSERT, dv.classes);\n        updateMarks(dv.orig, dv.diff, orig, DIFF_DELETE, dv.classes);\n      }\n\n      if (dv.mv.options.connect == \"align\")\n        alignChunks(dv);\n      makeConnections(dv);\n      if (dv.needsScrollSync != null) syncScroll(dv, dv.needsScrollSync)\n\n      updating = false;\n    }\n    function setDealign(fast) {\n      if (updating) return;\n      dv.dealigned = true;\n      set(fast);\n    }\n    function set(fast) {\n      if (updating || updatingFast) return;\n      clearTimeout(debounceChange);\n      if (fast === true) updatingFast = true;\n      debounceChange = setTimeout(update, fast === true ? 20 : 250);\n    }\n    function change(_cm, change) {\n      if (!dv.diffOutOfDate) {\n        dv.diffOutOfDate = true;\n        edit.from = edit.to = orig.from = orig.to = 0;\n      }\n      // Update faster when a line was added/removed\n      setDealign(change.text.length - 1 != change.to.line - change.from.line);\n    }\n    function swapDoc() {\n      dv.diffOutOfDate = true;\n      dv.dealigned = true;\n      update(\"full\");\n    }\n    dv.edit.on(\"change\", change);\n    dv.orig.on(\"change\", change);\n    dv.edit.on(\"swapDoc\", swapDoc);\n    dv.orig.on(\"swapDoc\", swapDoc);\n    if (dv.mv.options.connect == \"align\") {\n      CodeMirror.on(dv.edit.state.trackAlignable, \"realign\", setDealign)\n      CodeMirror.on(dv.orig.state.trackAlignable, \"realign\", setDealign)\n    }\n    dv.edit.on(\"viewportChange\", function() { set(false); });\n    dv.orig.on(\"viewportChange\", function() { set(false); });\n    update();\n    return update;\n  }\n\n  function registerScroll(dv, otherDv) {\n    dv.edit.on(\"scroll\", function() {\n      syncScroll(dv, true) && makeConnections(dv);\n    });\n    dv.orig.on(\"scroll\", function() {\n      syncScroll(dv, false) && makeConnections(dv);\n      if (otherDv) syncScroll(otherDv, true) && makeConnections(otherDv);\n    });\n  }\n\n  function syncScroll(dv, toOrig) {\n    // Change handler will do a refresh after a timeout when diff is out of date\n    if (dv.diffOutOfDate) {\n      if (dv.lockScroll && dv.needsScrollSync == null) dv.needsScrollSync = toOrig\n      return false\n    }\n    dv.needsScrollSync = null\n    if (!dv.lockScroll) return true;\n    var editor, other, now = +new Date;\n    if (toOrig) { editor = dv.edit; other = dv.orig; }\n    else { editor = dv.orig; other = dv.edit; }\n    // Don't take action if the position of this editor was recently set\n    // (to prevent feedback loops)\n    if (editor.state.scrollSetBy == dv && (editor.state.scrollSetAt || 0) + 250 > now) return false;\n\n    var sInfo = editor.getScrollInfo();\n    if (dv.mv.options.connect == \"align\") {\n      targetPos = sInfo.top;\n    } else {\n      var halfScreen = .5 * sInfo.clientHeight, midY = sInfo.top + halfScreen;\n      var mid = editor.lineAtHeight(midY, \"local\");\n      var around = chunkBoundariesAround(dv.chunks, mid, toOrig);\n      var off = getOffsets(editor, toOrig ? around.edit : around.orig);\n      var offOther = getOffsets(other, toOrig ? around.orig : around.edit);\n      var ratio = (midY - off.top) / (off.bot - off.top);\n      var targetPos = (offOther.top - halfScreen) + ratio * (offOther.bot - offOther.top);\n\n      var botDist, mix;\n      // Some careful tweaking to make sure no space is left out of view\n      // when scrolling to top or bottom.\n      if (targetPos > sInfo.top && (mix = sInfo.top / halfScreen) < 1) {\n        targetPos = targetPos * mix + sInfo.top * (1 - mix);\n      } else if ((botDist = sInfo.height - sInfo.clientHeight - sInfo.top) < halfScreen) {\n        var otherInfo = other.getScrollInfo();\n        var botDistOther = otherInfo.height - otherInfo.clientHeight - targetPos;\n        if (botDistOther > botDist && (mix = botDist / halfScreen) < 1)\n          targetPos = targetPos * mix + (otherInfo.height - otherInfo.clientHeight - botDist) * (1 - mix);\n      }\n    }\n\n    other.scrollTo(sInfo.left, targetPos);\n    other.state.scrollSetAt = now;\n    other.state.scrollSetBy = dv;\n    return true;\n  }\n\n  function getOffsets(editor, around) {\n    var bot = around.after;\n    if (bot == null) bot = editor.lastLine() + 1;\n    return {top: editor.heightAtLine(around.before || 0, \"local\"),\n            bot: editor.heightAtLine(bot, \"local\")};\n  }\n\n  function setScrollLock(dv, val, action) {\n    dv.lockScroll = val;\n    if (val && action != false) syncScroll(dv, DIFF_INSERT) && makeConnections(dv);\n    (val ? CodeMirror.addClass : CodeMirror.rmClass)(dv.lockButton, \"CodeMirror-merge-scrolllock-enabled\");\n  }\n\n  // Updating the marks for editor content\n\n  function removeClass(editor, line, classes) {\n    var locs = classes.classLocation\n    for (var i = 0; i < locs.length; i++) {\n      editor.removeLineClass(line, locs[i], classes.chunk);\n      editor.removeLineClass(line, locs[i], classes.start);\n      editor.removeLineClass(line, locs[i], classes.end);\n    }\n  }\n\n  function clearMarks(editor, arr, classes) {\n    for (var i = 0; i < arr.length; ++i) {\n      var mark = arr[i];\n      if (mark instanceof CodeMirror.TextMarker)\n        mark.clear();\n      else if (mark.parent)\n        removeClass(editor, mark, classes);\n    }\n    arr.length = 0;\n  }\n\n  // FIXME maybe add a margin around viewport to prevent too many updates\n  function updateMarks(editor, diff, state, type, classes) {\n    var vp = editor.getViewport();\n    editor.operation(function() {\n      if (state.from == state.to || vp.from - state.to > 20 || state.from - vp.to > 20) {\n        clearMarks(editor, state.marked, classes);\n        markChanges(editor, diff, type, state.marked, vp.from, vp.to, classes);\n        state.from = vp.from; state.to = vp.to;\n      } else {\n        if (vp.from < state.from) {\n          markChanges(editor, diff, type, state.marked, vp.from, state.from, classes);\n          state.from = vp.from;\n        }\n        if (vp.to > state.to) {\n          markChanges(editor, diff, type, state.marked, state.to, vp.to, classes);\n          state.to = vp.to;\n        }\n      }\n    });\n  }\n\n  function addClass(editor, lineNr, classes, main, start, end) {\n    var locs = classes.classLocation, line = editor.getLineHandle(lineNr);\n    for (var i = 0; i < locs.length; i++) {\n      if (main) editor.addLineClass(line, locs[i], classes.chunk);\n      if (start) editor.addLineClass(line, locs[i], classes.start);\n      if (end) editor.addLineClass(line, locs[i], classes.end);\n    }\n    return line;\n  }\n\n  function markChanges(editor, diff, type, marks, from, to, classes) {\n    var pos = Pos(0, 0);\n    var top = Pos(from, 0), bot = editor.clipPos(Pos(to - 1));\n    var cls = type == DIFF_DELETE ? classes.del : classes.insert;\n    function markChunk(start, end) {\n      var bfrom = Math.max(from, start), bto = Math.min(to, end);\n      for (var i = bfrom; i < bto; ++i)\n        marks.push(addClass(editor, i, classes, true, i == start, i == end - 1));\n      // When the chunk is empty, make sure a horizontal line shows up\n      if (start == end && bfrom == end && bto == end) {\n        if (bfrom)\n          marks.push(addClass(editor, bfrom - 1, classes, false, false, true));\n        else\n          marks.push(addClass(editor, bfrom, classes, false, true, false));\n      }\n    }\n\n    var chunkStart = 0, pending = false;\n    for (var i = 0; i < diff.length; ++i) {\n      var part = diff[i], tp = part[0], str = part[1];\n      if (tp == DIFF_EQUAL) {\n        var cleanFrom = pos.line + (startOfLineClean(diff, i) ? 0 : 1);\n        moveOver(pos, str);\n        var cleanTo = pos.line + (endOfLineClean(diff, i) ? 1 : 0);\n        if (cleanTo > cleanFrom) {\n          if (pending) { markChunk(chunkStart, cleanFrom); pending = false }\n          chunkStart = cleanTo;\n        }\n      } else {\n        pending = true\n        if (tp == type) {\n          var end = moveOver(pos, str, true);\n          var a = posMax(top, pos), b = posMin(bot, end);\n          if (!posEq(a, b))\n            marks.push(editor.markText(a, b, {className: cls}));\n          pos = end;\n        }\n      }\n    }\n    if (pending) markChunk(chunkStart, pos.line + 1);\n  }\n\n  // Updating the gap between editor and original\n\n  function makeConnections(dv) {\n    if (!dv.showDifferences) return;\n\n    if (dv.svg) {\n      clear(dv.svg);\n      var w = dv.gap.offsetWidth;\n      attrs(dv.svg, \"width\", w, \"height\", dv.gap.offsetHeight);\n    }\n    if (dv.copyButtons) clear(dv.copyButtons);\n\n    var vpEdit = dv.edit.getViewport(), vpOrig = dv.orig.getViewport();\n    var outerTop = dv.mv.wrap.getBoundingClientRect().top\n    var sTopEdit = outerTop - dv.edit.getScrollerElement().getBoundingClientRect().top + dv.edit.getScrollInfo().top\n    var sTopOrig = outerTop - dv.orig.getScrollerElement().getBoundingClientRect().top + dv.orig.getScrollInfo().top;\n    for (var i = 0; i < dv.chunks.length; i++) {\n      var ch = dv.chunks[i];\n      if (ch.editFrom <= vpEdit.to && ch.editTo >= vpEdit.from &&\n          ch.origFrom <= vpOrig.to && ch.origTo >= vpOrig.from)\n        drawConnectorsForChunk(dv, ch, sTopOrig, sTopEdit, w);\n    }\n  }\n\n  function getMatchingOrigLine(editLine, chunks) {\n    var editStart = 0, origStart = 0;\n    for (var i = 0; i < chunks.length; i++) {\n      var chunk = chunks[i];\n      if (chunk.editTo > editLine && chunk.editFrom <= editLine) return null;\n      if (chunk.editFrom > editLine) break;\n      editStart = chunk.editTo;\n      origStart = chunk.origTo;\n    }\n    return origStart + (editLine - editStart);\n  }\n\n  // Combines information about chunks and widgets/markers to return\n  // an array of lines, in a single editor, that probably need to be\n  // aligned with their counterparts in the editor next to it.\n  function alignableFor(cm, chunks, isOrig) {\n    var tracker = cm.state.trackAlignable\n    var start = cm.firstLine(), trackI = 0\n    var result = []\n    for (var i = 0;; i++) {\n      var chunk = chunks[i]\n      var chunkStart = !chunk ? 1e9 : isOrig ? chunk.origFrom : chunk.editFrom\n      for (; trackI < tracker.alignable.length; trackI += 2) {\n        var n = tracker.alignable[trackI] + 1\n        if (n <= start) continue\n        if (n <= chunkStart) result.push(n)\n        else break\n      }\n      if (!chunk) break\n      result.push(start = isOrig ? chunk.origTo : chunk.editTo)\n    }\n    return result\n  }\n\n  // Given information about alignable lines in two editors, fill in\n  // the result (an array of three-element arrays) to reflect the\n  // lines that need to be aligned with each other.\n  function mergeAlignable(result, origAlignable, chunks, setIndex) {\n    var rI = 0, origI = 0, chunkI = 0, diff = 0\n    outer: for (;; rI++) {\n      var nextR = result[rI], nextO = origAlignable[origI]\n      if (!nextR && nextO == null) break\n\n      var rLine = nextR ? nextR[0] : 1e9, oLine = nextO == null ? 1e9 : nextO\n      while (chunkI < chunks.length) {\n        var chunk = chunks[chunkI]\n        if (chunk.origFrom <= oLine && chunk.origTo > oLine) {\n          origI++\n          rI--\n          continue outer;\n        }\n        if (chunk.editTo > rLine) {\n          if (chunk.editFrom <= rLine) continue outer;\n          break\n        }\n        diff += (chunk.origTo - chunk.origFrom) - (chunk.editTo - chunk.editFrom)\n        chunkI++\n      }\n      if (rLine == oLine - diff) {\n        nextR[setIndex] = oLine\n        origI++\n      } else if (rLine < oLine - diff) {\n        nextR[setIndex] = rLine + diff\n      } else {\n        var record = [oLine - diff, null, null]\n        record[setIndex] = oLine\n        result.splice(rI, 0, record)\n        origI++\n      }\n    }\n  }\n\n  function findAlignedLines(dv, other) {\n    var alignable = alignableFor(dv.edit, dv.chunks, false), result = []\n    if (other) for (var i = 0, j = 0; i < other.chunks.length; i++) {\n      var n = other.chunks[i].editTo\n      while (j < alignable.length && alignable[j] < n) j++\n      if (j == alignable.length || alignable[j] != n) alignable.splice(j++, 0, n)\n    }\n    for (var i = 0; i < alignable.length; i++)\n      result.push([alignable[i], null, null])\n\n    mergeAlignable(result, alignableFor(dv.orig, dv.chunks, true), dv.chunks, 1)\n    if (other)\n      mergeAlignable(result, alignableFor(other.orig, other.chunks, true), other.chunks, 2)\n\n    return result\n  }\n\n  function alignChunks(dv, force) {\n    if (!dv.dealigned && !force) return;\n    if (!dv.orig.curOp) return dv.orig.operation(function() {\n      alignChunks(dv, force);\n    });\n\n    dv.dealigned = false;\n    var other = dv.mv.left == dv ? dv.mv.right : dv.mv.left;\n    if (other) {\n      ensureDiff(other);\n      other.dealigned = false;\n    }\n    var linesToAlign = findAlignedLines(dv, other);\n\n    // Clear old aligners\n    var aligners = dv.mv.aligners;\n    for (var i = 0; i < aligners.length; i++)\n      aligners[i].clear();\n    aligners.length = 0;\n\n    var cm = [dv.edit, dv.orig], scroll = [];\n    if (other) cm.push(other.orig);\n    for (var i = 0; i < cm.length; i++)\n      scroll.push(cm[i].getScrollInfo().top);\n\n    for (var ln = 0; ln < linesToAlign.length; ln++)\n      alignLines(cm, linesToAlign[ln], aligners);\n\n    for (var i = 0; i < cm.length; i++)\n      cm[i].scrollTo(null, scroll[i]);\n  }\n\n  function alignLines(cm, lines, aligners) {\n    var maxOffset = 0, offset = [];\n    for (var i = 0; i < cm.length; i++) if (lines[i] != null) {\n      var off = cm[i].heightAtLine(lines[i], \"local\");\n      offset[i] = off;\n      maxOffset = Math.max(maxOffset, off);\n    }\n    for (var i = 0; i < cm.length; i++) if (lines[i] != null) {\n      var diff = maxOffset - offset[i];\n      if (diff > 1)\n        aligners.push(padAbove(cm[i], lines[i], diff));\n    }\n  }\n\n  function padAbove(cm, line, size) {\n    var above = true;\n    if (line > cm.lastLine()) {\n      line--;\n      above = false;\n    }\n    var elt = document.createElement(\"div\");\n    elt.className = \"CodeMirror-merge-spacer\";\n    elt.style.height = size + \"px\"; elt.style.minWidth = \"1px\";\n    return cm.addLineWidget(line, elt, {height: size, above: above, mergeSpacer: true, handleMouseEvents: true});\n  }\n\n  function drawConnectorsForChunk(dv, chunk, sTopOrig, sTopEdit, w) {\n    var flip = dv.type == \"left\";\n    var top = dv.orig.heightAtLine(chunk.origFrom, \"local\", true) - sTopOrig;\n    if (dv.svg) {\n      var topLpx = top;\n      var topRpx = dv.edit.heightAtLine(chunk.editFrom, \"local\", true) - sTopEdit;\n      if (flip) { var tmp = topLpx; topLpx = topRpx; topRpx = tmp; }\n      var botLpx = dv.orig.heightAtLine(chunk.origTo, \"local\", true) - sTopOrig;\n      var botRpx = dv.edit.heightAtLine(chunk.editTo, \"local\", true) - sTopEdit;\n      if (flip) { var tmp = botLpx; botLpx = botRpx; botRpx = tmp; }\n      var curveTop = \" C \" + w/2 + \" \" + topRpx + \" \" + w/2 + \" \" + topLpx + \" \" + (w + 2) + \" \" + topLpx;\n      var curveBot = \" C \" + w/2 + \" \" + botLpx + \" \" + w/2 + \" \" + botRpx + \" -1 \" + botRpx;\n      attrs(dv.svg.appendChild(document.createElementNS(svgNS, \"path\")),\n            \"d\", \"M -1 \" + topRpx + curveTop + \" L \" + (w + 2) + \" \" + botLpx + curveBot + \" z\",\n            \"class\", dv.classes.connect);\n    }\n    if (dv.copyButtons) {\n      var copy = dv.copyButtons.appendChild(elt(\"div\", dv.type == \"left\" ? \"\\u21dd\" : \"\\u21dc\",\n                                                \"CodeMirror-merge-copy\"));\n      var editOriginals = dv.mv.options.allowEditingOriginals;\n      copy.title = dv.edit.phrase(editOriginals ? \"Push to left\" : \"Revert chunk\");\n      copy.chunk = chunk;\n      copy.style.top = (chunk.origTo > chunk.origFrom ? top : dv.edit.heightAtLine(chunk.editFrom, \"local\") - sTopEdit) + \"px\";\n\n      if (editOriginals) {\n        var topReverse = dv.edit.heightAtLine(chunk.editFrom, \"local\") - sTopEdit;\n        var copyReverse = dv.copyButtons.appendChild(elt(\"div\", dv.type == \"right\" ? \"\\u21dd\" : \"\\u21dc\",\n                                                         \"CodeMirror-merge-copy-reverse\"));\n        copyReverse.title = \"Push to right\";\n        copyReverse.chunk = {editFrom: chunk.origFrom, editTo: chunk.origTo,\n                             origFrom: chunk.editFrom, origTo: chunk.editTo};\n        copyReverse.style.top = topReverse + \"px\";\n        dv.type == \"right\" ? copyReverse.style.left = \"2px\" : copyReverse.style.right = \"2px\";\n      }\n    }\n  }\n\n  function copyChunk(dv, to, from, chunk) {\n    if (dv.diffOutOfDate) return;\n    var origStart = chunk.origTo > from.lastLine() ? Pos(chunk.origFrom - 1) : Pos(chunk.origFrom, 0)\n    var origEnd = Pos(chunk.origTo, 0)\n    var editStart = chunk.editTo > to.lastLine() ? Pos(chunk.editFrom - 1) : Pos(chunk.editFrom, 0)\n    var editEnd = Pos(chunk.editTo, 0)\n    var handler = dv.mv.options.revertChunk\n    if (handler)\n      handler(dv.mv, from, origStart, origEnd, to, editStart, editEnd)\n    else\n      to.replaceRange(from.getRange(origStart, origEnd), editStart, editEnd)\n  }\n\n  // Merge view, containing 0, 1, or 2 diff views.\n\n  var MergeView = CodeMirror.MergeView = function(node, options) {\n    if (!(this instanceof MergeView)) return new MergeView(node, options);\n\n    this.options = options;\n    var origLeft = options.origLeft, origRight = options.origRight == null ? options.orig : options.origRight;\n\n    var hasLeft = origLeft != null, hasRight = origRight != null;\n    var panes = 1 + (hasLeft ? 1 : 0) + (hasRight ? 1 : 0);\n    var wrap = [], left = this.left = null, right = this.right = null;\n    var self = this;\n\n    if (hasLeft) {\n      left = this.left = new DiffView(this, \"left\");\n      var leftPane = elt(\"div\", null, \"CodeMirror-merge-pane CodeMirror-merge-left\");\n      wrap.push(leftPane);\n      wrap.push(buildGap(left));\n    }\n\n    var editPane = elt(\"div\", null, \"CodeMirror-merge-pane CodeMirror-merge-editor\");\n    wrap.push(editPane);\n\n    if (hasRight) {\n      right = this.right = new DiffView(this, \"right\");\n      wrap.push(buildGap(right));\n      var rightPane = elt(\"div\", null, \"CodeMirror-merge-pane CodeMirror-merge-right\");\n      wrap.push(rightPane);\n    }\n\n    (hasRight ? rightPane : editPane).className += \" CodeMirror-merge-pane-rightmost\";\n\n    wrap.push(elt(\"div\", null, null, \"height: 0; clear: both;\"));\n\n    var wrapElt = this.wrap = node.appendChild(elt(\"div\", wrap, \"CodeMirror-merge CodeMirror-merge-\" + panes + \"pane\"));\n    this.edit = CodeMirror(editPane, copyObj(options));\n\n    if (left) left.init(leftPane, origLeft, options);\n    if (right) right.init(rightPane, origRight, options);\n    if (options.collapseIdentical)\n      this.editor().operation(function() {\n        collapseIdenticalStretches(self, options.collapseIdentical);\n      });\n    if (options.connect == \"align\") {\n      this.aligners = [];\n      alignChunks(this.left || this.right, true);\n    }\n    if (left) left.registerEvents(right)\n    if (right) right.registerEvents(left)\n\n\n    var onResize = function() {\n      if (left) makeConnections(left);\n      if (right) makeConnections(right);\n    };\n    CodeMirror.on(window, \"resize\", onResize);\n    var resizeInterval = setInterval(function() {\n      for (var p = wrapElt.parentNode; p && p != document.body; p = p.parentNode) {}\n      if (!p) { clearInterval(resizeInterval); CodeMirror.off(window, \"resize\", onResize); }\n    }, 5000);\n  };\n\n  function buildGap(dv) {\n    var lock = dv.lockButton = elt(\"div\", null, \"CodeMirror-merge-scrolllock\");\n    var lockWrap = elt(\"div\", [lock], \"CodeMirror-merge-scrolllock-wrap\");\n    CodeMirror.on(lock, \"click\", function() { setScrollLock(dv, !dv.lockScroll); });\n    var gapElts = [lockWrap];\n    if (dv.mv.options.revertButtons !== false) {\n      dv.copyButtons = elt(\"div\", null, \"CodeMirror-merge-copybuttons-\" + dv.type);\n      CodeMirror.on(dv.copyButtons, \"click\", function(e) {\n        var node = e.target || e.srcElement;\n        if (!node.chunk) return;\n        if (node.className == \"CodeMirror-merge-copy-reverse\") {\n          copyChunk(dv, dv.orig, dv.edit, node.chunk);\n          return;\n        }\n        copyChunk(dv, dv.edit, dv.orig, node.chunk);\n      });\n      gapElts.unshift(dv.copyButtons);\n    }\n    if (dv.mv.options.connect != \"align\") {\n      var svg = document.createElementNS && document.createElementNS(svgNS, \"svg\");\n      if (svg && !svg.createSVGRect) svg = null;\n      dv.svg = svg;\n      if (svg) gapElts.push(svg);\n    }\n\n    return dv.gap = elt(\"div\", gapElts, \"CodeMirror-merge-gap\");\n  }\n\n  MergeView.prototype = {\n    constructor: MergeView,\n    editor: function() { return this.edit; },\n    rightOriginal: function() { return this.right && this.right.orig; },\n    leftOriginal: function() { return this.left && this.left.orig; },\n    setShowDifferences: function(val) {\n      if (this.right) this.right.setShowDifferences(val);\n      if (this.left) this.left.setShowDifferences(val);\n    },\n    rightChunks: function() {\n      if (this.right) { ensureDiff(this.right); return this.right.chunks; }\n    },\n    leftChunks: function() {\n      if (this.left) { ensureDiff(this.left); return this.left.chunks; }\n    }\n  };\n\n  function asString(obj) {\n    if (typeof obj == \"string\") return obj;\n    else return obj.getValue();\n  }\n\n  // Operations on diffs\n  var dmp;\n  function getDiff(a, b, ignoreWhitespace) {\n    if (!dmp) dmp = new diff_match_patch();\n\n    var diff = dmp.diff_main(a, b);\n    // The library sometimes leaves in empty parts, which confuse the algorithm\n    for (var i = 0; i < diff.length; ++i) {\n      var part = diff[i];\n      if (ignoreWhitespace ? !/[^ \\t]/.test(part[1]) : !part[1]) {\n        diff.splice(i--, 1);\n      } else if (i && diff[i - 1][0] == part[0]) {\n        diff.splice(i--, 1);\n        diff[i][1] += part[1];\n      }\n    }\n    return diff;\n  }\n\n  function getChunks(diff) {\n    var chunks = [];\n    if (!diff.length) return chunks;\n    var startEdit = 0, startOrig = 0;\n    var edit = Pos(0, 0), orig = Pos(0, 0);\n    for (var i = 0; i < diff.length; ++i) {\n      var part = diff[i], tp = part[0];\n      if (tp == DIFF_EQUAL) {\n        var startOff = !startOfLineClean(diff, i) || edit.line < startEdit || orig.line < startOrig ? 1 : 0;\n        var cleanFromEdit = edit.line + startOff, cleanFromOrig = orig.line + startOff;\n        moveOver(edit, part[1], null, orig);\n        var endOff = endOfLineClean(diff, i) ? 1 : 0;\n        var cleanToEdit = edit.line + endOff, cleanToOrig = orig.line + endOff;\n        if (cleanToEdit > cleanFromEdit) {\n          if (i) chunks.push({origFrom: startOrig, origTo: cleanFromOrig,\n                              editFrom: startEdit, editTo: cleanFromEdit});\n          startEdit = cleanToEdit; startOrig = cleanToOrig;\n        }\n      } else {\n        moveOver(tp == DIFF_INSERT ? edit : orig, part[1]);\n      }\n    }\n    if (startEdit <= edit.line || startOrig <= orig.line)\n      chunks.push({origFrom: startOrig, origTo: orig.line + 1,\n                   editFrom: startEdit, editTo: edit.line + 1});\n    return chunks;\n  }\n\n  function endOfLineClean(diff, i) {\n    if (i == diff.length - 1) return true;\n    var next = diff[i + 1][1];\n    if ((next.length == 1 && i < diff.length - 2) || next.charCodeAt(0) != 10) return false;\n    if (i == diff.length - 2) return true;\n    next = diff[i + 2][1];\n    return (next.length > 1 || i == diff.length - 3) && next.charCodeAt(0) == 10;\n  }\n\n  function startOfLineClean(diff, i) {\n    if (i == 0) return true;\n    var last = diff[i - 1][1];\n    if (last.charCodeAt(last.length - 1) != 10) return false;\n    if (i == 1) return true;\n    last = diff[i - 2][1];\n    return last.charCodeAt(last.length - 1) == 10;\n  }\n\n  function chunkBoundariesAround(chunks, n, nInEdit) {\n    var beforeE, afterE, beforeO, afterO;\n    for (var i = 0; i < chunks.length; i++) {\n      var chunk = chunks[i];\n      var fromLocal = nInEdit ? chunk.editFrom : chunk.origFrom;\n      var toLocal = nInEdit ? chunk.editTo : chunk.origTo;\n      if (afterE == null) {\n        if (fromLocal > n) { afterE = chunk.editFrom; afterO = chunk.origFrom; }\n        else if (toLocal > n) { afterE = chunk.editTo; afterO = chunk.origTo; }\n      }\n      if (toLocal <= n) { beforeE = chunk.editTo; beforeO = chunk.origTo; }\n      else if (fromLocal <= n) { beforeE = chunk.editFrom; beforeO = chunk.origFrom; }\n    }\n    return {edit: {before: beforeE, after: afterE}, orig: {before: beforeO, after: afterO}};\n  }\n\n  function collapseSingle(cm, from, to) {\n    cm.addLineClass(from, \"wrap\", \"CodeMirror-merge-collapsed-line\");\n    var widget = document.createElement(\"span\");\n    widget.className = \"CodeMirror-merge-collapsed-widget\";\n    widget.title = cm.phrase(\"Identical text collapsed. Click to expand.\");\n    var mark = cm.markText(Pos(from, 0), Pos(to - 1), {\n      inclusiveLeft: true,\n      inclusiveRight: true,\n      replacedWith: widget,\n      clearOnEnter: true\n    });\n    function clear() {\n      mark.clear();\n      cm.removeLineClass(from, \"wrap\", \"CodeMirror-merge-collapsed-line\");\n    }\n    if (mark.explicitlyCleared) clear();\n    CodeMirror.on(widget, \"click\", clear);\n    mark.on(\"clear\", clear);\n    CodeMirror.on(widget, \"click\", clear);\n    return {mark: mark, clear: clear};\n  }\n\n  function collapseStretch(size, editors) {\n    var marks = [];\n    function clear() {\n      for (var i = 0; i < marks.length; i++) marks[i].clear();\n    }\n    for (var i = 0; i < editors.length; i++) {\n      var editor = editors[i];\n      var mark = collapseSingle(editor.cm, editor.line, editor.line + size);\n      marks.push(mark);\n      mark.mark.on(\"clear\", clear);\n    }\n    return marks[0].mark;\n  }\n\n  function unclearNearChunks(dv, margin, off, clear) {\n    for (var i = 0; i < dv.chunks.length; i++) {\n      var chunk = dv.chunks[i];\n      for (var l = chunk.editFrom - margin; l < chunk.editTo + margin; l++) {\n        var pos = l + off;\n        if (pos >= 0 && pos < clear.length) clear[pos] = false;\n      }\n    }\n  }\n\n  function collapseIdenticalStretches(mv, margin) {\n    if (typeof margin != \"number\") margin = 2;\n    var clear = [], edit = mv.editor(), off = edit.firstLine();\n    for (var l = off, e = edit.lastLine(); l <= e; l++) clear.push(true);\n    if (mv.left) unclearNearChunks(mv.left, margin, off, clear);\n    if (mv.right) unclearNearChunks(mv.right, margin, off, clear);\n\n    for (var i = 0; i < clear.length; i++) {\n      if (clear[i]) {\n        var line = i + off;\n        for (var size = 1; i < clear.length - 1 && clear[i + 1]; i++, size++) {}\n        if (size > margin) {\n          var editors = [{line: line, cm: edit}];\n          if (mv.left) editors.push({line: getMatchingOrigLine(line, mv.left.chunks), cm: mv.left.orig});\n          if (mv.right) editors.push({line: getMatchingOrigLine(line, mv.right.chunks), cm: mv.right.orig});\n          var mark = collapseStretch(size, editors);\n          if (mv.options.onCollapse) mv.options.onCollapse(mv, line, size, mark);\n        }\n      }\n    }\n  }\n\n  // General utilities\n\n  function elt(tag, content, className, style) {\n    var e = document.createElement(tag);\n    if (className) e.className = className;\n    if (style) e.style.cssText = style;\n    if (typeof content == \"string\") e.appendChild(document.createTextNode(content));\n    else if (content) for (var i = 0; i < content.length; ++i) e.appendChild(content[i]);\n    return e;\n  }\n\n  function clear(node) {\n    for (var count = node.childNodes.length; count > 0; --count)\n      node.removeChild(node.firstChild);\n  }\n\n  function attrs(elt) {\n    for (var i = 1; i < arguments.length; i += 2)\n      elt.setAttribute(arguments[i], arguments[i+1]);\n  }\n\n  function copyObj(obj, target) {\n    if (!target) target = {};\n    for (var prop in obj) if (obj.hasOwnProperty(prop)) target[prop] = obj[prop];\n    return target;\n  }\n\n  function moveOver(pos, str, copy, other) {\n    var out = copy ? Pos(pos.line, pos.ch) : pos, at = 0;\n    for (;;) {\n      var nl = str.indexOf(\"\\n\", at);\n      if (nl == -1) break;\n      ++out.line;\n      if (other) ++other.line;\n      at = nl + 1;\n    }\n    out.ch = (at ? 0 : out.ch) + (str.length - at);\n    if (other) other.ch = (at ? 0 : other.ch) + (str.length - at);\n    return out;\n  }\n\n  // Tracks collapsed markers and line widgets, in order to be able to\n  // accurately align the content of two editors.\n\n  var F_WIDGET = 1, F_WIDGET_BELOW = 2, F_MARKER = 4\n\n  function TrackAlignable(cm) {\n    this.cm = cm\n    this.alignable = []\n    this.height = cm.doc.height\n    var self = this\n    cm.on(\"markerAdded\", function(_, marker) {\n      if (!marker.collapsed) return\n      var found = marker.find(1)\n      if (found != null) self.set(found.line, F_MARKER)\n    })\n    cm.on(\"markerCleared\", function(_, marker, _min, max) {\n      if (max != null && marker.collapsed)\n        self.check(max, F_MARKER, self.hasMarker)\n    })\n    cm.on(\"markerChanged\", this.signal.bind(this))\n    cm.on(\"lineWidgetAdded\", function(_, widget, lineNo) {\n      if (widget.mergeSpacer) return\n      if (widget.above) self.set(lineNo - 1, F_WIDGET_BELOW)\n      else self.set(lineNo, F_WIDGET)\n    })\n    cm.on(\"lineWidgetCleared\", function(_, widget, lineNo) {\n      if (widget.mergeSpacer) return\n      if (widget.above) self.check(lineNo - 1, F_WIDGET_BELOW, self.hasWidgetBelow)\n      else self.check(lineNo, F_WIDGET, self.hasWidget)\n    })\n    cm.on(\"lineWidgetChanged\", this.signal.bind(this))\n    cm.on(\"change\", function(_, change) {\n      var start = change.from.line, nBefore = change.to.line - change.from.line\n      var nAfter = change.text.length - 1, end = start + nAfter\n      if (nBefore || nAfter) self.map(start, nBefore, nAfter)\n      self.check(end, F_MARKER, self.hasMarker)\n      if (nBefore || nAfter) self.check(change.from.line, F_MARKER, self.hasMarker)\n    })\n    cm.on(\"viewportChange\", function() {\n      if (self.cm.doc.height != self.height) self.signal()\n    })\n  }\n\n  TrackAlignable.prototype = {\n    signal: function() {\n      CodeMirror.signal(this, \"realign\")\n      this.height = this.cm.doc.height\n    },\n\n    set: function(n, flags) {\n      var pos = -1\n      for (; pos < this.alignable.length; pos += 2) {\n        var diff = this.alignable[pos] - n\n        if (diff == 0) {\n          if ((this.alignable[pos + 1] & flags) == flags) return\n          this.alignable[pos + 1] |= flags\n          this.signal()\n          return\n        }\n        if (diff > 0) break\n      }\n      this.signal()\n      this.alignable.splice(pos, 0, n, flags)\n    },\n\n    find: function(n) {\n      for (var i = 0; i < this.alignable.length; i += 2)\n        if (this.alignable[i] == n) return i\n      return -1\n    },\n\n    check: function(n, flag, pred) {\n      var found = this.find(n)\n      if (found == -1 || !(this.alignable[found + 1] & flag)) return\n      if (!pred.call(this, n)) {\n        this.signal()\n        var flags = this.alignable[found + 1] & ~flag\n        if (flags) this.alignable[found + 1] = flags\n        else this.alignable.splice(found, 2)\n      }\n    },\n\n    hasMarker: function(n) {\n      var handle = this.cm.getLineHandle(n)\n      if (handle.markedSpans) for (var i = 0; i < handle.markedSpans.length; i++)\n        if (handle.markedSpans[i].mark.collapsed && handle.markedSpans[i].to != null)\n          return true\n      return false\n    },\n\n    hasWidget: function(n) {\n      var handle = this.cm.getLineHandle(n)\n      if (handle.widgets) for (var i = 0; i < handle.widgets.length; i++)\n        if (!handle.widgets[i].above && !handle.widgets[i].mergeSpacer) return true\n      return false\n    },\n\n    hasWidgetBelow: function(n) {\n      if (n == this.cm.lastLine()) return false\n      var handle = this.cm.getLineHandle(n + 1)\n      if (handle.widgets) for (var i = 0; i < handle.widgets.length; i++)\n        if (handle.widgets[i].above && !handle.widgets[i].mergeSpacer) return true\n      return false\n    },\n\n    map: function(from, nBefore, nAfter) {\n      var diff = nAfter - nBefore, to = from + nBefore, widgetFrom = -1, widgetTo = -1\n      for (var i = 0; i < this.alignable.length; i += 2) {\n        var n = this.alignable[i]\n        if (n == from && (this.alignable[i + 1] & F_WIDGET_BELOW)) widgetFrom = i\n        if (n == to && (this.alignable[i + 1] & F_WIDGET_BELOW)) widgetTo = i\n        if (n <= from) continue\n        else if (n < to) this.alignable.splice(i--, 2)\n        else this.alignable[i] += diff\n      }\n      if (widgetFrom > -1) {\n        var flags = this.alignable[widgetFrom + 1]\n        if (flags == F_WIDGET_BELOW) this.alignable.splice(widgetFrom, 2)\n        else this.alignable[widgetFrom + 1] = flags & ~F_WIDGET_BELOW\n      }\n      if (widgetTo > -1 && nAfter)\n        this.set(from + nAfter, F_WIDGET_BELOW)\n    }\n  }\n\n  function posMin(a, b) { return (a.line - b.line || a.ch - b.ch) < 0 ? a : b; }\n  function posMax(a, b) { return (a.line - b.line || a.ch - b.ch) > 0 ? a : b; }\n  function posEq(a, b) { return a.line == b.line && a.ch == b.ch; }\n\n  function findPrevDiff(chunks, start, isOrig) {\n    for (var i = chunks.length - 1; i >= 0; i--) {\n      var chunk = chunks[i];\n      var to = (isOrig ? chunk.origTo : chunk.editTo) - 1;\n      if (to < start) return to;\n    }\n  }\n\n  function findNextDiff(chunks, start, isOrig) {\n    for (var i = 0; i < chunks.length; i++) {\n      var chunk = chunks[i];\n      var from = (isOrig ? chunk.origFrom : chunk.editFrom);\n      if (from > start) return from;\n    }\n  }\n\n  function goNearbyDiff(cm, dir) {\n    var found = null, views = cm.state.diffViews, line = cm.getCursor().line;\n    if (views) for (var i = 0; i < views.length; i++) {\n      var dv = views[i], isOrig = cm == dv.orig;\n      ensureDiff(dv);\n      var pos = dir < 0 ? findPrevDiff(dv.chunks, line, isOrig) : findNextDiff(dv.chunks, line, isOrig);\n      if (pos != null && (found == null || (dir < 0 ? pos > found : pos < found)))\n        found = pos;\n    }\n    if (found != null)\n      cm.setCursor(found, 0);\n    else\n      return CodeMirror.Pass;\n  }\n\n  CodeMirror.commands.goNextDiff = function(cm) {\n    return goNearbyDiff(cm, 1);\n  };\n  CodeMirror.commands.goPrevDiff = function(cm) {\n    return goNearbyDiff(cm, -1);\n  };\n});\n"]}