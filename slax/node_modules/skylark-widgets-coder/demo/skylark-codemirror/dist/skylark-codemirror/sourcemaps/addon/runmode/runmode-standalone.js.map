{"version":3,"sources":["addon/runmode/runmode-standalone.js"],"names":["window","CodeMirror","StringStream","string","this","pos","start","lineStart","prototype","eol","length","sol","peek","charAt","next","eat","match","ch","ok","test","eatWhile","eatSpace","skipToEnd","skipTo","found","indexOf","backUp","n","column","indentation","pattern","consume","caseInsensitive","slice","index","cased","str","toLowerCase","substr","current","hideFirstChars","inner","lookAhead","startState","mode","a1","a2","modes","mimeModes","defineMode","name","arguments","dependencies","Array","call","defineMIME","mime","spec","resolveMode","hasOwnProperty","getMode","options","mfactory","Error","registerHelper","registerGlobalHelper","Math","min","token","stream","runMode","modespec","callback","indentUnit","nodeType","tabSize","node","col","innerHTML","text","style","appendChild","document","createElement","content","idx","size","i","sp","className","replace","createTextNode","lines","split","splitLines","state","e","blankLine"],"mappings":"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","file":"../../../addon/runmode/runmode-standalone.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\nwindow.CodeMirror = {};\n\n(function() {\n\"use strict\";\n\nfunction splitLines(string){ return string.split(/\\r?\\n|\\r/); };\n\nfunction StringStream(string) {\n  this.pos = this.start = 0;\n  this.string = string;\n  this.lineStart = 0;\n}\nStringStream.prototype = {\n  eol: function() {return this.pos >= this.string.length;},\n  sol: function() {return this.pos == 0;},\n  peek: function() {return this.string.charAt(this.pos) || null;},\n  next: function() {\n    if (this.pos < this.string.length)\n      return this.string.charAt(this.pos++);\n  },\n  eat: function(match) {\n    var ch = this.string.charAt(this.pos);\n    if (typeof match == \"string\") var ok = ch == match;\n    else var ok = ch && (match.test ? match.test(ch) : match(ch));\n    if (ok) {++this.pos; return ch;}\n  },\n  eatWhile: function(match) {\n    var start = this.pos;\n    while (this.eat(match)){}\n    return this.pos > start;\n  },\n  eatSpace: function() {\n    var start = this.pos;\n    while (/[\\s\\u00a0]/.test(this.string.charAt(this.pos))) ++this.pos;\n    return this.pos > start;\n  },\n  skipToEnd: function() {this.pos = this.string.length;},\n  skipTo: function(ch) {\n    var found = this.string.indexOf(ch, this.pos);\n    if (found > -1) {this.pos = found; return true;}\n  },\n  backUp: function(n) {this.pos -= n;},\n  column: function() {return this.start - this.lineStart;},\n  indentation: function() {return 0;},\n  match: function(pattern, consume, caseInsensitive) {\n    if (typeof pattern == \"string\") {\n      var cased = function(str) {return caseInsensitive ? str.toLowerCase() : str;};\n      var substr = this.string.substr(this.pos, pattern.length);\n      if (cased(substr) == cased(pattern)) {\n        if (consume !== false) this.pos += pattern.length;\n        return true;\n      }\n    } else {\n      var match = this.string.slice(this.pos).match(pattern);\n      if (match && match.index > 0) return null;\n      if (match && consume !== false) this.pos += match[0].length;\n      return match;\n    }\n  },\n  current: function(){return this.string.slice(this.start, this.pos);},\n  hideFirstChars: function(n, inner) {\n    this.lineStart += n;\n    try { return inner(); }\n    finally { this.lineStart -= n; }\n  },\n  lookAhead: function() { return null }\n};\nCodeMirror.StringStream = StringStream;\n\nCodeMirror.startState = function (mode, a1, a2) {\n  return mode.startState ? mode.startState(a1, a2) : true;\n};\n\nvar modes = CodeMirror.modes = {}, mimeModes = CodeMirror.mimeModes = {};\nCodeMirror.defineMode = function (name, mode) {\n  if (arguments.length > 2)\n    mode.dependencies = Array.prototype.slice.call(arguments, 2);\n  modes[name] = mode;\n};\nCodeMirror.defineMIME = function (mime, spec) { mimeModes[mime] = spec; };\nCodeMirror.resolveMode = function(spec) {\n  if (typeof spec == \"string\" && mimeModes.hasOwnProperty(spec)) {\n    spec = mimeModes[spec];\n  } else if (spec && typeof spec.name == \"string\" && mimeModes.hasOwnProperty(spec.name)) {\n    spec = mimeModes[spec.name];\n  }\n  if (typeof spec == \"string\") return {name: spec};\n  else return spec || {name: \"null\"};\n};\nCodeMirror.getMode = function (options, spec) {\n  spec = CodeMirror.resolveMode(spec);\n  var mfactory = modes[spec.name];\n  if (!mfactory) throw new Error(\"Unknown mode: \" + spec);\n  return mfactory(options, spec);\n};\nCodeMirror.registerHelper = CodeMirror.registerGlobalHelper = Math.min;\nCodeMirror.defineMode(\"null\", function() {\n  return {token: function(stream) {stream.skipToEnd();}};\n});\nCodeMirror.defineMIME(\"text/plain\", \"null\");\n\nCodeMirror.runMode = function (string, modespec, callback, options) {\n  var mode = CodeMirror.getMode({ indentUnit: 2 }, modespec);\n\n  if (callback.nodeType == 1) {\n    var tabSize = (options && options.tabSize) || 4;\n    var node = callback, col = 0;\n    node.innerHTML = \"\";\n    callback = function (text, style) {\n      if (text == \"\\n\") {\n        node.appendChild(document.createElement(\"br\"));\n        col = 0;\n        return;\n      }\n      var content = \"\";\n      // replace tabs\n      for (var pos = 0; ;) {\n        var idx = text.indexOf(\"\\t\", pos);\n        if (idx == -1) {\n          content += text.slice(pos);\n          col += text.length - pos;\n          break;\n        } else {\n          col += idx - pos;\n          content += text.slice(pos, idx);\n          var size = tabSize - col % tabSize;\n          col += size;\n          for (var i = 0; i < size; ++i) content += \" \";\n          pos = idx + 1;\n        }\n      }\n\n      if (style) {\n        var sp = node.appendChild(document.createElement(\"span\"));\n        sp.className = \"cm-\" + style.replace(/ +/g, \" cm-\");\n        sp.appendChild(document.createTextNode(content));\n      } else {\n        node.appendChild(document.createTextNode(content));\n      }\n    };\n  }\n\n  var lines = splitLines(string), state = (options && options.state) || CodeMirror.startState(mode);\n  for (var i = 0, e = lines.length; i < e; ++i) {\n    if (i) callback(\"\\n\");\n    var stream = new CodeMirror.StringStream(lines[i]);\n    if (!stream.string && mode.blankLine) mode.blankLine(state);\n    while (!stream.eol()) {\n      var style = mode.token(stream, state);\n      callback(stream.current(), style, i, stream.start, state);\n      stream.start = stream.pos;\n    }\n  }\n};\n})();\n"]}