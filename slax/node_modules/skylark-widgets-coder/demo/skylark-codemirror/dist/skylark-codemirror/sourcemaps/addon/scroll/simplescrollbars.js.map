{"version":3,"sources":["addon/scroll/simplescrollbars.js"],"names":["define","CodeMirror","Bar","cls","orientation","scroll","this","screen","total","size","pos","node","document","createElement","className","inner","appendChild","self","onWheel","e","moved","wheelEventPixels","oldPos","moveTo","e_preventDefault","on","which","axis","start","startpos","move","done","off","where","innerBox","getBoundingClientRect","clientX","left","right","clientY","top","bottom","prototype","setPos","force","style","SimpleScrollbars","place","addClass","horiz","vert","width","update","scrollSize","clientSize","barSize","sizeChanged","buttonSize","measure","window","getComputedStyle","currentStyle","parseInt","height","needsH","scrollWidth","clientWidth","needsV","scrollHeight","clientHeight","display","viewHeight","viewWidth","barLeft","setScrollTop","setScrollLeft","clear","parent","parentNode","removeChild","scrollbarModel","simple","overlay"],"mappings":"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","file":"../../../addon/scroll/simplescrollbars.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\ndefine([\"../../CodeMirror\"], function(CodeMirror) {\n  \"use strict\";\n\n  function Bar(cls, orientation, scroll) {\n    this.orientation = orientation;\n    this.scroll = scroll;\n    this.screen = this.total = this.size = 1;\n    this.pos = 0;\n\n    this.node = document.createElement(\"div\");\n    this.node.className = cls + \"-\" + orientation;\n    this.inner = this.node.appendChild(document.createElement(\"div\"));\n\n    var self = this;\n    CodeMirror.on(this.inner, \"mousedown\", function(e) {\n      if (e.which != 1) return;\n      CodeMirror.e_preventDefault(e);\n      var axis = self.orientation == \"horizontal\" ? \"pageX\" : \"pageY\";\n      var start = e[axis], startpos = self.pos;\n      function done() {\n        CodeMirror.off(document, \"mousemove\", move);\n        CodeMirror.off(document, \"mouseup\", done);\n      }\n      function move(e) {\n        if (e.which != 1) return done();\n        self.moveTo(startpos + (e[axis] - start) * (self.total / self.size));\n      }\n      CodeMirror.on(document, \"mousemove\", move);\n      CodeMirror.on(document, \"mouseup\", done);\n    });\n\n    CodeMirror.on(this.node, \"click\", function(e) {\n      CodeMirror.e_preventDefault(e);\n      var innerBox = self.inner.getBoundingClientRect(), where;\n      if (self.orientation == \"horizontal\")\n        where = e.clientX < innerBox.left ? -1 : e.clientX > innerBox.right ? 1 : 0;\n      else\n        where = e.clientY < innerBox.top ? -1 : e.clientY > innerBox.bottom ? 1 : 0;\n      self.moveTo(self.pos + where * self.screen);\n    });\n\n    function onWheel(e) {\n      var moved = CodeMirror.wheelEventPixels(e)[self.orientation == \"horizontal\" ? \"x\" : \"y\"];\n      var oldPos = self.pos;\n      self.moveTo(self.pos + moved);\n      if (self.pos != oldPos) CodeMirror.e_preventDefault(e);\n    }\n    CodeMirror.on(this.node, \"mousewheel\", onWheel);\n    CodeMirror.on(this.node, \"DOMMouseScroll\", onWheel);\n  }\n\n  Bar.prototype.setPos = function(pos, force) {\n    if (pos < 0) pos = 0;\n    if (pos > this.total - this.screen) pos = this.total - this.screen;\n    if (!force && pos == this.pos) return false;\n    this.pos = pos;\n    this.inner.style[this.orientation == \"horizontal\" ? \"left\" : \"top\"] =\n      (pos * (this.size / this.total)) + \"px\";\n    return true\n  };\n\n  Bar.prototype.moveTo = function(pos) {\n    if (this.setPos(pos)) this.scroll(pos, this.orientation);\n  }\n\n  var minButtonSize = 10;\n\n  Bar.prototype.update = function(scrollSize, clientSize, barSize) {\n    var sizeChanged = this.screen != clientSize || this.total != scrollSize || this.size != barSize\n    if (sizeChanged) {\n      this.screen = clientSize;\n      this.total = scrollSize;\n      this.size = barSize;\n    }\n\n    var buttonSize = this.screen * (this.size / this.total);\n    if (buttonSize < minButtonSize) {\n      this.size -= minButtonSize - buttonSize;\n      buttonSize = minButtonSize;\n    }\n    this.inner.style[this.orientation == \"horizontal\" ? \"width\" : \"height\"] =\n      buttonSize + \"px\";\n    this.setPos(this.pos, sizeChanged);\n  };\n\n  function SimpleScrollbars(cls, place, scroll) {\n    this.addClass = cls;\n    this.horiz = new Bar(cls, \"horizontal\", scroll);\n    place(this.horiz.node);\n    this.vert = new Bar(cls, \"vertical\", scroll);\n    place(this.vert.node);\n    this.width = null;\n  }\n\n  SimpleScrollbars.prototype.update = function(measure) {\n    if (this.width == null) {\n      var style = window.getComputedStyle ? window.getComputedStyle(this.horiz.node) : this.horiz.node.currentStyle;\n      if (style) this.width = parseInt(style.height);\n    }\n    var width = this.width || 0;\n\n    var needsH = measure.scrollWidth > measure.clientWidth + 1;\n    var needsV = measure.scrollHeight > measure.clientHeight + 1;\n    this.vert.node.style.display = needsV ? \"block\" : \"none\";\n    this.horiz.node.style.display = needsH ? \"block\" : \"none\";\n\n    if (needsV) {\n      this.vert.update(measure.scrollHeight, measure.clientHeight,\n                       measure.viewHeight - (needsH ? width : 0));\n      this.vert.node.style.bottom = needsH ? width + \"px\" : \"0\";\n    }\n    if (needsH) {\n      this.horiz.update(measure.scrollWidth, measure.clientWidth,\n                        measure.viewWidth - (needsV ? width : 0) - measure.barLeft);\n      this.horiz.node.style.right = needsV ? width + \"px\" : \"0\";\n      this.horiz.node.style.left = measure.barLeft + \"px\";\n    }\n\n    return {right: needsV ? width : 0, bottom: needsH ? width : 0};\n  };\n\n  SimpleScrollbars.prototype.setScrollTop = function(pos) {\n    this.vert.setPos(pos);\n  };\n\n  SimpleScrollbars.prototype.setScrollLeft = function(pos) {\n    this.horiz.setPos(pos);\n  };\n\n  SimpleScrollbars.prototype.clear = function() {\n    var parent = this.horiz.node.parentNode;\n    parent.removeChild(this.horiz.node);\n    parent.removeChild(this.vert.node);\n  };\n\n  CodeMirror.scrollbarModel.simple = function(place, scroll) {\n    return new SimpleScrollbars(\"CodeMirror-simplescroll\", place, scroll);\n  };\n  CodeMirror.scrollbarModel.overlay = function(place, scroll) {\n    return new SimpleScrollbars(\"CodeMirror-overlayscroll\", place, scroll);\n  };\n});\n"]}