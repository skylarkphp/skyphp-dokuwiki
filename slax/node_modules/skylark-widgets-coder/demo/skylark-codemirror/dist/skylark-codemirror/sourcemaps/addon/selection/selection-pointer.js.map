{"version":3,"sources":["addon/selection/selection-pointer.js"],"names":["define","CodeMirror","reset","cm","state","selectionPointer","rects","scheduleUpdate","willUpdate","setTimeout","data","mouseX","somethingSelected","sel","display","selectionDiv","firstChild","nextSibling","push","getBoundingClientRect","inside","i","length","rect","left","right","top","mouseY","bottom","cursor","value","lineDiv","style","update","defineOption","val","off","getWrapperElement","mousemove","mouseout","window","windowScroll","event","buttons","which","clientX","clientY","contains","relatedTarget","on"],"mappings":";;;;;;;AAGAA,QAAQ,oBAAqB,SAASC,GACpC,aAkDA,SAASC,EAAMC,GACbA,EAAGC,MAAMC,iBAAiBC,MAAQ,KAClCC,EAAeJ,GAGjB,SAASI,EAAeJ,GACjBA,EAAGC,MAAMC,iBAAiBG,aAC7BL,EAAGC,MAAMC,iBAAiBG,YAAa,EACvCC,WAAW,YAOf,SAAgBN,GACd,IAAIO,EAAOP,EAAGC,MAAMC,iBACpB,IAAKK,EAAM,OACX,GAAkB,MAAdA,EAAKJ,OAAgC,MAAfI,EAAKC,SAC7BD,EAAKJ,SACDH,EAAGS,qBACL,IAAK,IAAIC,EAAMV,EAAGW,QAAQC,aAAaC,WAAYH,EAAKA,EAAMA,EAAII,YAChEP,EAAKJ,MAAMY,KAAKL,EAAIM,yBAG1B,IAAIC,GAAS,EACb,GAAmB,MAAfV,EAAKC,OAAgB,IAAK,IAAIU,EAAI,EAAGA,EAAIX,EAAKJ,MAAMgB,OAAQD,IAAK,CACnE,IAAIE,EAAOb,EAAKJ,MAAMe,GAClBE,EAAKC,MAAQd,EAAKC,QAAUY,EAAKE,OAASf,EAAKC,QAC/CY,EAAKG,KAAOhB,EAAKiB,QAAUJ,EAAKK,QAAUlB,EAAKiB,SACjDP,GAAS,GAEb,IAAIS,EAAST,EAASV,EAAKoB,MAAQ,GAC/B3B,EAAGW,QAAQiB,QAAQC,MAAMH,QAAUA,IACrC1B,EAAGW,QAAQiB,QAAQC,MAAMH,OAASA,GAzBhCI,CAAO9B,GACPA,EAAGC,MAAMC,iBAAiBG,YAAa,GACtC,KA3DPP,EAAWiC,aAAa,oBAAoB,EAAO,SAAS/B,EAAIgC,GAC9D,IAAIzB,EAAOP,EAAGC,MAAMC,iBAChBK,IACFT,EAAWmC,IAAIjC,EAAGkC,oBAAqB,YAAa3B,EAAK4B,WACzDrC,EAAWmC,IAAIjC,EAAGkC,oBAAqB,WAAY3B,EAAK6B,UACxDtC,EAAWmC,IAAII,OAAQ,SAAU9B,EAAK+B,cACtCtC,EAAGiC,IAAI,iBAAkBlC,GACzBC,EAAGiC,IAAI,SAAUlC,GACjBC,EAAGC,MAAMC,iBAAmB,KAC5BF,EAAGW,QAAQiB,QAAQC,MAAMH,OAAS,IAEhCM,IACFzB,EAAOP,EAAGC,MAAMC,kBACdyB,MAAqB,iBAAPK,EAAkBA,EAAM,UACtCG,UAAW,SAASI,IAe1B,SAAmBvC,EAAIuC,GACrB,IAAIhC,EAAOP,EAAGC,MAAMC,kBACC,MAAjBqC,EAAMC,QAAkBD,EAAME,MAAQF,EAAMC,SAC9CjC,EAAKC,OAASD,EAAKiB,OAAS,MAE5BjB,EAAKC,OAAS+B,EAAMG,QACpBnC,EAAKiB,OAASe,EAAMI,SAEtBvC,EAAeJ,GAvBkBmC,CAAUnC,EAAIuC,IAC3CH,SAAU,SAASG,IAyBzB,SAAkBvC,EAAIuC,GACpB,IAAKvC,EAAGkC,oBAAoBU,SAASL,EAAMM,eAAgB,CACzD,IAAItC,EAAOP,EAAGC,MAAMC,iBACpBK,EAAKC,OAASD,EAAKiB,OAAS,KAC5BpB,EAAeJ,IA7BeoC,CAASpC,EAAIuC,IACzCD,aAAc,WAAavC,EAAMC,IACjCG,MAAO,KACPK,OAAQ,KAAMgB,OAAQ,KACtBnB,YAAY,GAEdP,EAAWgD,GAAG9C,EAAGkC,oBAAqB,YAAa3B,EAAK4B,WACxDrC,EAAWgD,GAAG9C,EAAGkC,oBAAqB,WAAY3B,EAAK6B,UACvDtC,EAAWgD,GAAGT,OAAQ,SAAU9B,EAAK+B,cACrCtC,EAAG8C,GAAG,iBAAkB/C,GACxBC,EAAG8C,GAAG,SAAU/C","file":"../../../addon/selection/selection-pointer.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\ndefine([\"../../CodeMirror\"], function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineOption(\"selectionPointer\", false, function(cm, val) {\n    var data = cm.state.selectionPointer;\n    if (data) {\n      CodeMirror.off(cm.getWrapperElement(), \"mousemove\", data.mousemove);\n      CodeMirror.off(cm.getWrapperElement(), \"mouseout\", data.mouseout);\n      CodeMirror.off(window, \"scroll\", data.windowScroll);\n      cm.off(\"cursorActivity\", reset);\n      cm.off(\"scroll\", reset);\n      cm.state.selectionPointer = null;\n      cm.display.lineDiv.style.cursor = \"\";\n    }\n    if (val) {\n      data = cm.state.selectionPointer = {\n        value: typeof val == \"string\" ? val : \"default\",\n        mousemove: function(event) { mousemove(cm, event); },\n        mouseout: function(event) { mouseout(cm, event); },\n        windowScroll: function() { reset(cm); },\n        rects: null,\n        mouseX: null, mouseY: null,\n        willUpdate: false\n      };\n      CodeMirror.on(cm.getWrapperElement(), \"mousemove\", data.mousemove);\n      CodeMirror.on(cm.getWrapperElement(), \"mouseout\", data.mouseout);\n      CodeMirror.on(window, \"scroll\", data.windowScroll);\n      cm.on(\"cursorActivity\", reset);\n      cm.on(\"scroll\", reset);\n    }\n  });\n\n  function mousemove(cm, event) {\n    var data = cm.state.selectionPointer;\n    if (event.buttons == null ? event.which : event.buttons) {\n      data.mouseX = data.mouseY = null;\n    } else {\n      data.mouseX = event.clientX;\n      data.mouseY = event.clientY;\n    }\n    scheduleUpdate(cm);\n  }\n\n  function mouseout(cm, event) {\n    if (!cm.getWrapperElement().contains(event.relatedTarget)) {\n      var data = cm.state.selectionPointer;\n      data.mouseX = data.mouseY = null;\n      scheduleUpdate(cm);\n    }\n  }\n\n  function reset(cm) {\n    cm.state.selectionPointer.rects = null;\n    scheduleUpdate(cm);\n  }\n\n  function scheduleUpdate(cm) {\n    if (!cm.state.selectionPointer.willUpdate) {\n      cm.state.selectionPointer.willUpdate = true;\n      setTimeout(function() {\n        update(cm);\n        cm.state.selectionPointer.willUpdate = false;\n      }, 50);\n    }\n  }\n\n  function update(cm) {\n    var data = cm.state.selectionPointer;\n    if (!data) return;\n    if (data.rects == null && data.mouseX != null) {\n      data.rects = [];\n      if (cm.somethingSelected()) {\n        for (var sel = cm.display.selectionDiv.firstChild; sel; sel = sel.nextSibling)\n          data.rects.push(sel.getBoundingClientRect());\n      }\n    }\n    var inside = false;\n    if (data.mouseX != null) for (var i = 0; i < data.rects.length; i++) {\n      var rect = data.rects[i];\n      if (rect.left <= data.mouseX && rect.right >= data.mouseX &&\n          rect.top <= data.mouseY && rect.bottom >= data.mouseY)\n        inside = true;\n    }\n    var cursor = inside ? data.value : \"\";\n    if (cm.display.lineDiv.style.cursor != cursor)\n      cm.display.lineDiv.style.cursor = cursor;\n  }\n});\n"]}