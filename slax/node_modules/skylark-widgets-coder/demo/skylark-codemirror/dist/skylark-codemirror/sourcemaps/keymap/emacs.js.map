{"version":3,"sources":["keymap/emacs.js"],"names":["define","CodeMirror","Pos","posEq","a","b","line","ch","killRing","addToRing","str","push","length","shift","getFromRing","n","Math","min","lastKill","kill","cm","from","to","ring","text","getRange","pos","isClean","gen","growRingTop","replaceRange","changeGeneration","byChar","dir","findPosH","byWord","byLine","findPosV","doc","sel","goalColumn","byPage","byParagraph","no","getLine","sawText","test","slice","fst","firstLine","lst","lastLine","clipPos","bySentence","sawWord","next","charAt","byExpr","wrap","findMatchingBracket","strict","match","forward","first","token","getTokenAt","after","start","end","string","newPos","getPrefix","precise","digits","state","emacsPrefix","clearPrefix","Number","repeated","cmd","f","execCommand","prefix","i","findEnd","by","move","extendSelection","getCursor","motion","killTo","cursor","selections","listSelections","head","killRegion","somethingSelected","selection","anchor","addPrefix","digit","on","maybeClearPrefix","maybeDuplicateInput","prefixPreservingKeys","Alt-G","Ctrl-X","Ctrl-Q","Ctrl-U","arg","emacsPrefixMap","hasOwnProperty","off","event","dup","origin","one","join","txt","replaceSelection","maybeRemovePrefixMap","removeKeyMap","prefixMap","setMark","setCursor","setExtending","getExtending","clearMark","operateOnWord","op","emacs","keyMap","normalizeKeyMap","Ctrl-W","Ctrl-K","Alt-W","getSelection","Ctrl-Y","setSelection","Alt-Y","pop","Ctrl-Space","Ctrl-Shift-2","Ctrl-F","Ctrl-B","Right","Left","Ctrl-D","Delete","Ctrl-H","Backspace","Alt-F","Alt-B","Alt-Right","Alt-Left","Alt-D","Alt-Backspace","Ctrl-N","Ctrl-P","Down","Up","Ctrl-A","Ctrl-E","End","Home","Alt-V","Ctrl-V","PageUp","PageDown","Ctrl-Up","Ctrl-Down","Alt-A","Alt-E","Alt-K","Ctrl-Alt-K","Ctrl-Alt-Backspace","Ctrl-Alt-F","Ctrl-Alt-B","Shift-Ctrl-Alt-2","Ctrl-Alt-T","leftStart","leftEnd","rightEnd","rightStart","Ctrl-Alt-U","stack","Alt-Space","Ctrl-O","Ctrl-T","Alt-C","w","letter","search","toUpperCase","toLowerCase","Alt-U","Alt-L","Alt-;","Ctrl-/","Shift-Ctrl--","Ctrl-Z","Cmd-Z","Shift-Alt-,","Shift-Alt-.","Ctrl-S","Ctrl-R","Ctrl-G","Shift-Alt-5","Alt-/","Enter","Ctrl-J","Tab","Alt-G G","msg","openDialog","bottom","prompt","getInput","num","isNaN","Ctrl-X Tab","indentSelection","getOption","Ctrl-X Ctrl-X","Ctrl-X Ctrl-S","Ctrl-X Ctrl-W","Ctrl-X S","Ctrl-X F","Ctrl-X U","Ctrl-X K","Ctrl-X Delete","Ctrl-X H","Ctrl-Q Tab","addKeyMap","regPrefix","d","String"],"mappings":"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","file":"../../keymap/emacs.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\ndefine([\"../CodeMirror\"], function(CodeMirror) {\n  \"use strict\";\n\n  var Pos = CodeMirror.Pos;\n  function posEq(a, b) { return a.line == b.line && a.ch == b.ch; }\n\n  // Kill 'ring'\n\n  var killRing = [];\n  function addToRing(str) {\n    killRing.push(str);\n    if (killRing.length > 50) killRing.shift();\n  }\n  function growRingTop(str) {\n    if (!killRing.length) return addToRing(str);\n    killRing[killRing.length - 1] += str;\n  }\n  function getFromRing(n) { return killRing[killRing.length - (n ? Math.min(n, 1) : 1)] || \"\"; }\n  function popFromRing() { if (killRing.length > 1) killRing.pop(); return getFromRing(); }\n\n  var lastKill = null;\n\n  function kill(cm, from, to, ring, text) {\n    if (text == null) text = cm.getRange(from, to);\n\n    if (ring == \"grow\" && lastKill && lastKill.cm == cm && posEq(from, lastKill.pos) && cm.isClean(lastKill.gen))\n      growRingTop(text);\n    else if (ring !== false)\n      addToRing(text);\n    cm.replaceRange(\"\", from, to, \"+delete\");\n\n    if (ring == \"grow\") lastKill = {cm: cm, pos: from, gen: cm.changeGeneration()};\n    else lastKill = null;\n  }\n\n  // Boundaries of various units\n\n  function byChar(cm, pos, dir) {\n    return cm.findPosH(pos, dir, \"char\", true);\n  }\n\n  function byWord(cm, pos, dir) {\n    return cm.findPosH(pos, dir, \"word\", true);\n  }\n\n  function byLine(cm, pos, dir) {\n    return cm.findPosV(pos, dir, \"line\", cm.doc.sel.goalColumn);\n  }\n\n  function byPage(cm, pos, dir) {\n    return cm.findPosV(pos, dir, \"page\", cm.doc.sel.goalColumn);\n  }\n\n  function byParagraph(cm, pos, dir) {\n    var no = pos.line, line = cm.getLine(no);\n    var sawText = /\\S/.test(dir < 0 ? line.slice(0, pos.ch) : line.slice(pos.ch));\n    var fst = cm.firstLine(), lst = cm.lastLine();\n    for (;;) {\n      no += dir;\n      if (no < fst || no > lst)\n        return cm.clipPos(Pos(no - dir, dir < 0 ? 0 : null));\n      line = cm.getLine(no);\n      var hasText = /\\S/.test(line);\n      if (hasText) sawText = true;\n      else if (sawText) return Pos(no, 0);\n    }\n  }\n\n  function bySentence(cm, pos, dir) {\n    var line = pos.line, ch = pos.ch;\n    var text = cm.getLine(pos.line), sawWord = false;\n    for (;;) {\n      var next = text.charAt(ch + (dir < 0 ? -1 : 0));\n      if (!next) { // End/beginning of line reached\n        if (line == (dir < 0 ? cm.firstLine() : cm.lastLine())) return Pos(line, ch);\n        text = cm.getLine(line + dir);\n        if (!/\\S/.test(text)) return Pos(line, ch);\n        line += dir;\n        ch = dir < 0 ? text.length : 0;\n        continue;\n      }\n      if (sawWord && /[!?.]/.test(next)) return Pos(line, ch + (dir > 0 ? 1 : 0));\n      if (!sawWord) sawWord = /\\w/.test(next);\n      ch += dir;\n    }\n  }\n\n  function byExpr(cm, pos, dir) {\n    var wrap;\n    if (cm.findMatchingBracket && (wrap = cm.findMatchingBracket(pos, {strict: true}))\n        && wrap.match && (wrap.forward ? 1 : -1) == dir)\n      return dir > 0 ? Pos(wrap.to.line, wrap.to.ch + 1) : wrap.to;\n\n    for (var first = true;; first = false) {\n      var token = cm.getTokenAt(pos);\n      var after = Pos(pos.line, dir < 0 ? token.start : token.end);\n      if (first && dir > 0 && token.end == pos.ch || !/\\w/.test(token.string)) {\n        var newPos = cm.findPosH(after, dir, \"char\");\n        if (posEq(after, newPos)) return pos;\n        else pos = newPos;\n      } else {\n        return after;\n      }\n    }\n  }\n\n  // Prefixes (only crudely supported)\n\n  function getPrefix(cm, precise) {\n    var digits = cm.state.emacsPrefix;\n    if (!digits) return precise ? null : 1;\n    clearPrefix(cm);\n    return digits == \"-\" ? -1 : Number(digits);\n  }\n\n  function repeated(cmd) {\n    var f = typeof cmd == \"string\" ? function(cm) { cm.execCommand(cmd); } : cmd;\n    return function(cm) {\n      var prefix = getPrefix(cm);\n      f(cm);\n      for (var i = 1; i < prefix; ++i) f(cm);\n    };\n  }\n\n  function findEnd(cm, pos, by, dir) {\n    var prefix = getPrefix(cm);\n    if (prefix < 0) { dir = -dir; prefix = -prefix; }\n    for (var i = 0; i < prefix; ++i) {\n      var newPos = by(cm, pos, dir);\n      if (posEq(newPos, pos)) break;\n      pos = newPos;\n    }\n    return pos;\n  }\n\n  function move(by, dir) {\n    var f = function(cm) {\n      cm.extendSelection(findEnd(cm, cm.getCursor(), by, dir));\n    };\n    f.motion = true;\n    return f;\n  }\n\n  function killTo(cm, by, dir, ring) {\n    var selections = cm.listSelections(), cursor;\n    var i = selections.length;\n    while (i--) {\n      cursor = selections[i].head;\n      kill(cm, cursor, findEnd(cm, cursor, by, dir), ring);\n    }\n  }\n\n  function killRegion(cm, ring) {\n    if (cm.somethingSelected()) {\n      var selections = cm.listSelections(), selection;\n      var i = selections.length;\n      while (i--) {\n        selection = selections[i];\n        kill(cm, selection.anchor, selection.head, ring);\n      }\n      return true;\n    }\n  }\n\n  function addPrefix(cm, digit) {\n    if (cm.state.emacsPrefix) {\n      if (digit != \"-\") cm.state.emacsPrefix += digit;\n      return;\n    }\n    // Not active yet\n    cm.state.emacsPrefix = digit;\n    cm.on(\"keyHandled\", maybeClearPrefix);\n    cm.on(\"inputRead\", maybeDuplicateInput);\n  }\n\n  var prefixPreservingKeys = {\"Alt-G\": true, \"Ctrl-X\": true, \"Ctrl-Q\": true, \"Ctrl-U\": true};\n\n  function maybeClearPrefix(cm, arg) {\n    if (!cm.state.emacsPrefixMap && !prefixPreservingKeys.hasOwnProperty(arg))\n      clearPrefix(cm);\n  }\n\n  function clearPrefix(cm) {\n    cm.state.emacsPrefix = null;\n    cm.off(\"keyHandled\", maybeClearPrefix);\n    cm.off(\"inputRead\", maybeDuplicateInput);\n  }\n\n  function maybeDuplicateInput(cm, event) {\n    var dup = getPrefix(cm);\n    if (dup > 1 && event.origin == \"+input\") {\n      var one = event.text.join(\"\\n\"), txt = \"\";\n      for (var i = 1; i < dup; ++i) txt += one;\n      cm.replaceSelection(txt);\n    }\n  }\n\n  function addPrefixMap(cm) {\n    cm.state.emacsPrefixMap = true;\n    cm.addKeyMap(prefixMap);\n    cm.on(\"keyHandled\", maybeRemovePrefixMap);\n    cm.on(\"inputRead\", maybeRemovePrefixMap);\n  }\n\n  function maybeRemovePrefixMap(cm, arg) {\n    if (typeof arg == \"string\" && (/^\\d$/.test(arg) || arg == \"Ctrl-U\")) return;\n    cm.removeKeyMap(prefixMap);\n    cm.state.emacsPrefixMap = false;\n    cm.off(\"keyHandled\", maybeRemovePrefixMap);\n    cm.off(\"inputRead\", maybeRemovePrefixMap);\n  }\n\n  // Utilities\n\n  function setMark(cm) {\n    cm.setCursor(cm.getCursor());\n    cm.setExtending(!cm.getExtending());\n    cm.on(\"change\", function() { cm.setExtending(false); });\n  }\n\n  function clearMark(cm) {\n    cm.setExtending(false);\n    cm.setCursor(cm.getCursor());\n  }\n\n  function getInput(cm, msg, f) {\n    if (cm.openDialog)\n      cm.openDialog(msg + \": <input type=\\\"text\\\" style=\\\"width: 10em\\\"/>\", f, {bottom: true});\n    else\n      f(prompt(msg, \"\"));\n  }\n\n  function operateOnWord(cm, op) {\n    var start = cm.getCursor(), end = cm.findPosH(start, 1, \"word\");\n    cm.replaceRange(op(cm.getRange(start, end)), start, end);\n    cm.setCursor(end);\n  }\n\n  function toEnclosingExpr(cm) {\n    var pos = cm.getCursor(), line = pos.line, ch = pos.ch;\n    var stack = [];\n    while (line >= cm.firstLine()) {\n      var text = cm.getLine(line);\n      for (var i = ch == null ? text.length : ch; i > 0;) {\n        var ch = text.charAt(--i);\n        if (ch == \")\")\n          stack.push(\"(\");\n        else if (ch == \"]\")\n          stack.push(\"[\");\n        else if (ch == \"}\")\n          stack.push(\"{\");\n        else if (/[\\(\\{\\[]/.test(ch) && (!stack.length || stack.pop() != ch))\n          return cm.extendSelection(Pos(line, i));\n      }\n      --line; ch = null;\n    }\n  }\n\n  function quit(cm) {\n    cm.execCommand(\"clearSearch\");\n    clearMark(cm);\n  }\n\n  CodeMirror.emacs = {kill: kill, killRegion: killRegion, repeated: repeated};\n\n  // Actual keymap\n\n  var keyMap = CodeMirror.keyMap.emacs = CodeMirror.normalizeKeyMap({\n    \"Ctrl-W\": function(cm) {kill(cm, cm.getCursor(\"start\"), cm.getCursor(\"end\"), true);},\n    \"Ctrl-K\": repeated(function(cm) {\n      var start = cm.getCursor(), end = cm.clipPos(Pos(start.line));\n      var text = cm.getRange(start, end);\n      if (!/\\S/.test(text)) {\n        text += \"\\n\";\n        end = Pos(start.line + 1, 0);\n      }\n      kill(cm, start, end, \"grow\", text);\n    }),\n    \"Alt-W\": function(cm) {\n      addToRing(cm.getSelection());\n      clearMark(cm);\n    },\n    \"Ctrl-Y\": function(cm) {\n      var start = cm.getCursor();\n      cm.replaceRange(getFromRing(getPrefix(cm)), start, start, \"paste\");\n      cm.setSelection(start, cm.getCursor());\n    },\n    \"Alt-Y\": function(cm) {cm.replaceSelection(popFromRing(), \"around\", \"paste\");},\n\n    \"Ctrl-Space\": setMark, \"Ctrl-Shift-2\": setMark,\n\n    \"Ctrl-F\": move(byChar, 1), \"Ctrl-B\": move(byChar, -1),\n    \"Right\": move(byChar, 1), \"Left\": move(byChar, -1),\n    \"Ctrl-D\": function(cm) { killTo(cm, byChar, 1, false); },\n    \"Delete\": function(cm) { killRegion(cm, false) || killTo(cm, byChar, 1, false); },\n    \"Ctrl-H\": function(cm) { killTo(cm, byChar, -1, false); },\n    \"Backspace\": function(cm) { killRegion(cm, false) || killTo(cm, byChar, -1, false); },\n\n    \"Alt-F\": move(byWord, 1), \"Alt-B\": move(byWord, -1),\n    \"Alt-Right\": move(byWord, 1), \"Alt-Left\": move(byWord, -1),\n    \"Alt-D\": function(cm) { killTo(cm, byWord, 1, \"grow\"); },\n    \"Alt-Backspace\": function(cm) { killTo(cm, byWord, -1, \"grow\"); },\n\n    \"Ctrl-N\": move(byLine, 1), \"Ctrl-P\": move(byLine, -1),\n    \"Down\": move(byLine, 1), \"Up\": move(byLine, -1),\n    \"Ctrl-A\": \"goLineStart\", \"Ctrl-E\": \"goLineEnd\",\n    \"End\": \"goLineEnd\", \"Home\": \"goLineStart\",\n\n    \"Alt-V\": move(byPage, -1), \"Ctrl-V\": move(byPage, 1),\n    \"PageUp\": move(byPage, -1), \"PageDown\": move(byPage, 1),\n\n    \"Ctrl-Up\": move(byParagraph, -1), \"Ctrl-Down\": move(byParagraph, 1),\n\n    \"Alt-A\": move(bySentence, -1), \"Alt-E\": move(bySentence, 1),\n    \"Alt-K\": function(cm) { killTo(cm, bySentence, 1, \"grow\"); },\n\n    \"Ctrl-Alt-K\": function(cm) { killTo(cm, byExpr, 1, \"grow\"); },\n    \"Ctrl-Alt-Backspace\": function(cm) { killTo(cm, byExpr, -1, \"grow\"); },\n    \"Ctrl-Alt-F\": move(byExpr, 1), \"Ctrl-Alt-B\": move(byExpr, -1, \"grow\"),\n\n    \"Shift-Ctrl-Alt-2\": function(cm) {\n      var cursor = cm.getCursor();\n      cm.setSelection(findEnd(cm, cursor, byExpr, 1), cursor);\n    },\n    \"Ctrl-Alt-T\": function(cm) {\n      var leftStart = byExpr(cm, cm.getCursor(), -1), leftEnd = byExpr(cm, leftStart, 1);\n      var rightEnd = byExpr(cm, leftEnd, 1), rightStart = byExpr(cm, rightEnd, -1);\n      cm.replaceRange(cm.getRange(rightStart, rightEnd) + cm.getRange(leftEnd, rightStart) +\n                      cm.getRange(leftStart, leftEnd), leftStart, rightEnd);\n    },\n    \"Ctrl-Alt-U\": repeated(toEnclosingExpr),\n\n    \"Alt-Space\": function(cm) {\n      var pos = cm.getCursor(), from = pos.ch, to = pos.ch, text = cm.getLine(pos.line);\n      while (from && /\\s/.test(text.charAt(from - 1))) --from;\n      while (to < text.length && /\\s/.test(text.charAt(to))) ++to;\n      cm.replaceRange(\" \", Pos(pos.line, from), Pos(pos.line, to));\n    },\n    \"Ctrl-O\": repeated(function(cm) { cm.replaceSelection(\"\\n\", \"start\"); }),\n    \"Ctrl-T\": repeated(function(cm) {\n      cm.execCommand(\"transposeChars\");\n    }),\n\n    \"Alt-C\": repeated(function(cm) {\n      operateOnWord(cm, function(w) {\n        var letter = w.search(/\\w/);\n        if (letter == -1) return w;\n        return w.slice(0, letter) + w.charAt(letter).toUpperCase() + w.slice(letter + 1).toLowerCase();\n      });\n    }),\n    \"Alt-U\": repeated(function(cm) {\n      operateOnWord(cm, function(w) { return w.toUpperCase(); });\n    }),\n    \"Alt-L\": repeated(function(cm) {\n      operateOnWord(cm, function(w) { return w.toLowerCase(); });\n    }),\n\n    \"Alt-;\": \"toggleComment\",\n\n    \"Ctrl-/\": repeated(\"undo\"), \"Shift-Ctrl--\": repeated(\"undo\"),\n    \"Ctrl-Z\": repeated(\"undo\"), \"Cmd-Z\": repeated(\"undo\"),\n    \"Shift-Alt-,\": \"goDocStart\", \"Shift-Alt-.\": \"goDocEnd\",\n    \"Ctrl-S\": \"findPersistentNext\", \"Ctrl-R\": \"findPersistentPrev\", \"Ctrl-G\": quit, \"Shift-Alt-5\": \"replace\",\n    \"Alt-/\": \"autocomplete\",\n    \"Enter\": \"newlineAndIndent\",\n    \"Ctrl-J\": repeated(function(cm) { cm.replaceSelection(\"\\n\", \"end\"); }),\n    \"Tab\": \"indentAuto\",\n\n    \"Alt-G G\": function(cm) {\n      var prefix = getPrefix(cm, true);\n      if (prefix != null && prefix > 0) return cm.setCursor(prefix - 1);\n\n      getInput(cm, \"Goto line\", function(str) {\n        var num;\n        if (str && !isNaN(num = Number(str)) && num == (num|0) && num > 0)\n          cm.setCursor(num - 1);\n      });\n    },\n\n    \"Ctrl-X Tab\": function(cm) {\n      cm.indentSelection(getPrefix(cm, true) || cm.getOption(\"indentUnit\"));\n    },\n    \"Ctrl-X Ctrl-X\": function(cm) {\n      cm.setSelection(cm.getCursor(\"head\"), cm.getCursor(\"anchor\"));\n    },\n    \"Ctrl-X Ctrl-S\": \"save\",\n    \"Ctrl-X Ctrl-W\": \"save\",\n    \"Ctrl-X S\": \"saveAll\",\n    \"Ctrl-X F\": \"open\",\n    \"Ctrl-X U\": repeated(\"undo\"),\n    \"Ctrl-X K\": \"close\",\n    \"Ctrl-X Delete\": function(cm) { kill(cm, cm.getCursor(), bySentence(cm, cm.getCursor(), 1), \"grow\"); },\n    \"Ctrl-X H\": \"selectAll\",\n\n    \"Ctrl-Q Tab\": repeated(\"insertTab\"),\n    \"Ctrl-U\": addPrefixMap\n  });\n\n  var prefixMap = {\"Ctrl-G\": clearPrefix};\n  function regPrefix(d) {\n    prefixMap[d] = function(cm) { addPrefix(cm, d); };\n    keyMap[\"Ctrl-\" + d] = function(cm) { addPrefix(cm, d); };\n    prefixPreservingKeys[\"Ctrl-\" + d] = true;\n  }\n  for (var i = 0; i < 10; ++i) regPrefix(String(i));\n  regPrefix(\"-\");\n});\n"]}