{"version":3,"sources":["keymap/sublime.js"],"names":["define","CodeMirror","cmds","commands","Pos","moveSubword","cm","dir","extendSelectionsBy","range","display","shift","doc","extend","empty","start","ch","clipPos","line","getLine","length","type","state","pos","e","i","next","charAt","cat","isWordChar","toUpperCase","findPosSubword","head","from","to","insertLine","above","isReadOnly","Pass","operation","len","listSelections","newSelection","last","at","replaceRange","indentLine","push","anchor","setSelections","execCommand","wordAt","end","word","slice","addCursorToSelection","ranges","newRanges","newAnchor","findPosV","goalColumn","newHead","cursorCoords","left","newRange","goSubwordLeft","goSubwordRight","scrollLineUp","info","getScrollInfo","somethingSelected","visibleBottomLine","lineAtHeight","top","clientHeight","getCursor","scrollTo","defaultTextHeight","scrollLineDown","visibleTopLine","splitSelectionByLine","lineRanges","singleSelectionTop","setSelection","scroll","selectLine","extended","insertLineAfter","insertLineBefore","selectNextOccurrence","fullWord","sublimeFindFullWord","sel","cmpPos","text","getRange","query","RegExp","cur","getSearchCursor","found","findNext","firstLine","isSelectedRange","addSelection","addCursorToPrevLine","addCursorToNextLine","mirror","selectBetweenBrackets","opening","scanForBracket","closing","indexOf","startPos","sortLines","caseSensitive","selected","toSort","lastLine","lines","sort","a","b","au","bu","modifyWordOrSelection","mod","indices","replacements","replaceSelections","getTarget","findAndGoTo","forward","target","findPrevious","selectScope","goToBracket","prev","swapLineUp","linesToMove","newSels","scrollIntoView","swapLineDown","toggleCommentIndented","toggleComment","indent","joinLines","joined","offset","obj","actual","exec","duplicateLine","rangeCount","sortLinesInsensitive","nextBookmark","marks","sublimeBookmarks","current","find","prevBookmark","unshift","pop","toggleBookmark","findMarksAt","findMarks","j","sublimeBookmark","clear","k","splice","markText","clearWhenEmpty","clearBookmarks","selectBookmarks","smartBackspace","cursors","indentUnit","getOption","cursor","toStartOfLine","column","countColumn","deletePos","findPosH","test","prevIndent","findColumn","delLineRight","upcaseAtCursor","str","downcaseAtCursor","toLowerCase","setSublimeMark","sublimeMark","setBookmark","selectToSublimeMark","deleteToSublimeMark","tmp","sublimeKilled","swapWithSublimeMark","setCursor","sublimeYank","replaceSelection","showInCenter","bottom","findUnder","findUnderPrevious","findAllUnder","matches","primaryIndex","keyMap","macSublime","Cmd-Left","Shift-Tab","Shift-Ctrl-K","Alt-Q","Ctrl-Left","Ctrl-Right","Ctrl-Alt-Up","Ctrl-Alt-Down","Cmd-L","Shift-Cmd-L","Esc","Cmd-Enter","Shift-Cmd-Enter","Cmd-D","Shift-Cmd-Space","Shift-Cmd-M","Cmd-M","Cmd-Ctrl-Up","Cmd-Ctrl-Down","Cmd-/","Cmd-J","Shift-Cmd-D","F5","Cmd-F5","F2","Shift-F2","Cmd-F2","Shift-Cmd-F2","Alt-F2","Backspace","Cmd-K Cmd-K","Cmd-K Cmd-U","Cmd-K Cmd-L","Cmd-K Cmd-Space","Cmd-K Cmd-A","Cmd-K Cmd-W","Cmd-K Cmd-X","Cmd-K Cmd-Y","Cmd-K Cmd-C","Cmd-K Cmd-G","Cmd-K Cmd-Backspace","Cmd-K Cmd-0","Cmd-K Cmd-J","Ctrl-Shift-Up","Ctrl-Shift-Down","Cmd-F3","Shift-Cmd-F3","Alt-F3","Shift-Cmd-[","Shift-Cmd-]","Cmd-I","Shift-Cmd-I","Cmd-H","F3","Shift-F3","fallthrough","normalizeKeyMap","pcSublime","Ctrl-T","Alt-Left","Alt-Right","Ctrl-Up","Ctrl-Down","Ctrl-L","Shift-Ctrl-L","Ctrl-Enter","Shift-Ctrl-Enter","Ctrl-D","Shift-Ctrl-Space","Shift-Ctrl-M","Ctrl-M","Shift-Ctrl-Up","Shift-Ctrl-Down","Ctrl-/","Ctrl-J","Shift-Ctrl-D","F9","Ctrl-F9","Ctrl-F2","Shift-Ctrl-F2","Ctrl-K Ctrl-K","Ctrl-K Ctrl-U","Ctrl-K Ctrl-L","Ctrl-K Ctrl-Space","Ctrl-K Ctrl-A","Ctrl-K Ctrl-W","Ctrl-K Ctrl-X","Ctrl-K Ctrl-Y","Ctrl-K Ctrl-C","Ctrl-K Ctrl-G","Ctrl-K Ctrl-Backspace","Ctrl-K Ctrl-0","Ctrl-K Ctrl-J","Ctrl-F3","Shift-Ctrl-F3","Shift-Ctrl-[","Shift-Ctrl-]","Ctrl-I","Shift-Ctrl-I","Ctrl-H","mac","default","macDefault","sublime"],"mappings":"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","file":"../../keymap/sublime.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// A rough approximation of Sublime Text's keybindings\n// Depends on addon/search/searchcursor.js and optionally addon/dialog/dialogs.js\n\ndefine([\"../CodeMirror\", \"../addon/search/searchcursor\", \"../addon/edit/matchbrackets\"],function(CodeMirror) {\n  \"use strict\";\n\n  var cmds = CodeMirror.commands;\n  var Pos = CodeMirror.Pos;\n\n  // This is not exactly Sublime's algorithm. I couldn't make heads or tails of that.\n  function findPosSubword(doc, start, dir) {\n    if (dir < 0 && start.ch == 0) return doc.clipPos(Pos(start.line - 1));\n    var line = doc.getLine(start.line);\n    if (dir > 0 && start.ch >= line.length) return doc.clipPos(Pos(start.line + 1, 0));\n    var state = \"start\", type;\n    for (var pos = start.ch, e = dir < 0 ? 0 : line.length, i = 0; pos != e; pos += dir, i++) {\n      var next = line.charAt(dir < 0 ? pos - 1 : pos);\n      var cat = next != \"_\" && CodeMirror.isWordChar(next) ? \"w\" : \"o\";\n      if (cat == \"w\" && next.toUpperCase() == next) cat = \"W\";\n      if (state == \"start\") {\n        if (cat != \"o\") { state = \"in\"; type = cat; }\n      } else if (state == \"in\") {\n        if (type != cat) {\n          if (type == \"w\" && cat == \"W\" && dir < 0) pos--;\n          if (type == \"W\" && cat == \"w\" && dir > 0) { type = \"w\"; continue; }\n          break;\n        }\n      }\n    }\n    return Pos(start.line, pos);\n  }\n\n  function moveSubword(cm, dir) {\n    cm.extendSelectionsBy(function(range) {\n      if (cm.display.shift || cm.doc.extend || range.empty())\n        return findPosSubword(cm.doc, range.head, dir);\n      else\n        return dir < 0 ? range.from() : range.to();\n    });\n  }\n\n  cmds.goSubwordLeft = function(cm) { moveSubword(cm, -1); };\n  cmds.goSubwordRight = function(cm) { moveSubword(cm, 1); };\n\n  cmds.scrollLineUp = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleBottomLine = cm.lineAtHeight(info.top + info.clientHeight, \"local\");\n      if (cm.getCursor().line >= visibleBottomLine)\n        cm.execCommand(\"goLineUp\");\n    }\n    cm.scrollTo(null, info.top - cm.defaultTextHeight());\n  };\n  cmds.scrollLineDown = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleTopLine = cm.lineAtHeight(info.top, \"local\")+1;\n      if (cm.getCursor().line <= visibleTopLine)\n        cm.execCommand(\"goLineDown\");\n    }\n    cm.scrollTo(null, info.top + cm.defaultTextHeight());\n  };\n\n  cmds.splitSelectionByLine = function(cm) {\n    var ranges = cm.listSelections(), lineRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      for (var line = from.line; line <= to.line; ++line)\n        if (!(to.line > from.line && line == to.line && to.ch == 0))\n          lineRanges.push({anchor: line == from.line ? from : Pos(line, 0),\n                           head: line == to.line ? to : Pos(line)});\n    }\n    cm.setSelections(lineRanges, 0);\n  };\n\n  cmds.singleSelectionTop = function(cm) {\n    var range = cm.listSelections()[0];\n    cm.setSelection(range.anchor, range.head, {scroll: false});\n  };\n\n  cmds.selectLine = function(cm) {\n    var ranges = cm.listSelections(), extended = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      extended.push({anchor: Pos(range.from().line, 0),\n                     head: Pos(range.to().line + 1, 0)});\n    }\n    cm.setSelections(extended);\n  };\n\n  function insertLine(cm, above) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    cm.operation(function() {\n      var len = cm.listSelections().length, newSelection = [], last = -1;\n      for (var i = 0; i < len; i++) {\n        var head = cm.listSelections()[i].head;\n        if (head.line <= last) continue;\n        var at = Pos(head.line + (above ? 0 : 1), 0);\n        cm.replaceRange(\"\\n\", at, null, \"+insertLine\");\n        cm.indentLine(at.line, null, true);\n        newSelection.push({head: at, anchor: at});\n        last = head.line + 1;\n      }\n      cm.setSelections(newSelection);\n    });\n    cm.execCommand(\"indentAuto\");\n  }\n\n  cmds.insertLineAfter = function(cm) { return insertLine(cm, false); };\n\n  cmds.insertLineBefore = function(cm) { return insertLine(cm, true); };\n\n  function wordAt(cm, pos) {\n    var start = pos.ch, end = start, line = cm.getLine(pos.line);\n    while (start && CodeMirror.isWordChar(line.charAt(start - 1))) --start;\n    while (end < line.length && CodeMirror.isWordChar(line.charAt(end))) ++end;\n    return {from: Pos(pos.line, start), to: Pos(pos.line, end), word: line.slice(start, end)};\n  }\n\n  cmds.selectNextOccurrence = function(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    var fullWord = cm.state.sublimeFindFullWord == cm.doc.sel;\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      cm.setSelection(word.from, word.to);\n      fullWord = true;\n    } else {\n      var text = cm.getRange(from, to);\n      var query = fullWord ? new RegExp(\"\\\\b\" + text + \"\\\\b\") : text;\n      var cur = cm.getSearchCursor(query, to);\n      var found = cur.findNext();\n      if (!found) {\n        cur = cm.getSearchCursor(query, Pos(cm.firstLine(), 0));\n        found = cur.findNext();\n      }\n      if (!found || isSelectedRange(cm.listSelections(), cur.from(), cur.to()))\n        return CodeMirror.Pass\n      cm.addSelection(cur.from(), cur.to());\n    }\n    if (fullWord)\n      cm.state.sublimeFindFullWord = cm.doc.sel;\n  };\n\n  function addCursorToSelection(cm, dir) {\n    var ranges = cm.listSelections(), newRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      var newAnchor = cm.findPosV(\n          range.anchor, dir, \"line\", range.anchor.goalColumn);\n      var newHead = cm.findPosV(\n          range.head, dir, \"line\", range.head.goalColumn);\n      newAnchor.goalColumn = range.anchor.goalColumn != null ?\n          range.anchor.goalColumn : cm.cursorCoords(range.anchor, \"div\").left;\n      newHead.goalColumn = range.head.goalColumn != null ?\n          range.head.goalColumn : cm.cursorCoords(range.head, \"div\").left;\n      var newRange = {anchor: newAnchor, head: newHead};\n      newRanges.push(range);\n      newRanges.push(newRange);\n    }\n    cm.setSelections(newRanges);\n  }\n  cmds.addCursorToPrevLine = function(cm) { addCursorToSelection(cm, -1); };\n  cmds.addCursorToNextLine = function(cm) { addCursorToSelection(cm, 1); };\n\n  function isSelectedRange(ranges, from, to) {\n    for (var i = 0; i < ranges.length; i++)\n      if (ranges[i].from() == from && ranges[i].to() == to) return true\n    return false\n  }\n\n  var mirror = \"(){}[]\";\n  function selectBetweenBrackets(cm) {\n    var ranges = cm.listSelections(), newRanges = []\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], pos = range.head, opening = cm.scanForBracket(pos, -1);\n      if (!opening) return false;\n      for (;;) {\n        var closing = cm.scanForBracket(pos, 1);\n        if (!closing) return false;\n        if (closing.ch == mirror.charAt(mirror.indexOf(opening.ch) + 1)) {\n          var startPos = Pos(opening.pos.line, opening.pos.ch + 1);\n          if (CodeMirror.cmpPos(startPos, range.from()) == 0 &&\n              CodeMirror.cmpPos(closing.pos, range.to()) == 0) {\n            opening = cm.scanForBracket(opening.pos, -1);\n            if (!opening) return false;\n          } else {\n            newRanges.push({anchor: startPos, head: closing.pos});\n            break;\n          }\n        }\n        pos = Pos(closing.pos.line, closing.pos.ch + 1);\n      }\n    }\n    cm.setSelections(newRanges);\n    return true;\n  }\n\n  cmds.selectScope = function(cm) {\n    selectBetweenBrackets(cm) || cm.execCommand(\"selectAll\");\n  };\n  cmds.selectBetweenBrackets = function(cm) {\n    if (!selectBetweenBrackets(cm)) return CodeMirror.Pass;\n  };\n\n  cmds.goToBracket = function(cm) {\n    cm.extendSelectionsBy(function(range) {\n      var next = cm.scanForBracket(range.head, 1);\n      if (next && CodeMirror.cmpPos(next.pos, range.head) != 0) return next.pos;\n      var prev = cm.scanForBracket(range.head, -1);\n      return prev && Pos(prev.pos.line, prev.pos.ch + 1) || range.head;\n    });\n  };\n\n  cmds.swapLineUp = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.firstLine() - 1, newSels = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from().line - 1, to = range.to().line;\n      newSels.push({anchor: Pos(range.anchor.line - 1, range.anchor.ch),\n                    head: Pos(range.head.line - 1, range.head.ch)});\n      if (range.to().ch == 0 && !range.empty()) --to;\n      if (from > at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = 0; i < linesToMove.length; i += 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        if (to > cm.lastLine())\n          cm.replaceRange(\"\\n\" + line, Pos(cm.lastLine()), null, \"+swapLine\");\n        else\n          cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.setSelections(newSels);\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.swapLineDown = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.lastLine() + 1;\n    for (var i = ranges.length - 1; i >= 0; i--) {\n      var range = ranges[i], from = range.to().line + 1, to = range.from().line;\n      if (range.to().ch == 0 && !range.empty()) from--;\n      if (from < at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = linesToMove.length - 2; i >= 0; i -= 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        if (from == cm.lastLine())\n          cm.replaceRange(\"\", Pos(from - 1), Pos(from), \"+swapLine\");\n        else\n          cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.toggleCommentIndented = function(cm) {\n    cm.toggleComment({ indent: true });\n  }\n\n  cmds.joinLines = function(cm) {\n    var ranges = cm.listSelections(), joined = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from();\n      var start = from.line, end = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == end)\n        end = ranges[++i].to().line;\n      joined.push({start: start, end: end, anchor: !range.empty() && from});\n    }\n    cm.operation(function() {\n      var offset = 0, ranges = [];\n      for (var i = 0; i < joined.length; i++) {\n        var obj = joined[i];\n        var anchor = obj.anchor && Pos(obj.anchor.line - offset, obj.anchor.ch), head;\n        for (var line = obj.start; line <= obj.end; line++) {\n          var actual = line - offset;\n          if (line == obj.end) head = Pos(actual, cm.getLine(actual).length + 1);\n          if (actual < cm.lastLine()) {\n            cm.replaceRange(\" \", Pos(actual), Pos(actual + 1, /^\\s*/.exec(cm.getLine(actual + 1))[0].length));\n            ++offset;\n          }\n        }\n        ranges.push({anchor: anchor || head, head: head});\n      }\n      cm.setSelections(ranges, 0);\n    });\n  };\n\n  cmds.duplicateLine = function(cm) {\n    cm.operation(function() {\n      var rangeCount = cm.listSelections().length;\n      for (var i = 0; i < rangeCount; i++) {\n        var range = cm.listSelections()[i];\n        if (range.empty())\n          cm.replaceRange(cm.getLine(range.head.line) + \"\\n\", Pos(range.head.line, 0));\n        else\n          cm.replaceRange(cm.getRange(range.from(), range.to()), range.from());\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n\n  function sortLines(cm, caseSensitive) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), toSort = [], selected;\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      if (range.empty()) continue;\n      var from = range.from().line, to = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == to)\n        to = ranges[++i].to().line;\n      if (!ranges[i].to().ch) to--;\n      toSort.push(from, to);\n    }\n    if (toSort.length) selected = true;\n    else toSort.push(cm.firstLine(), cm.lastLine());\n\n    cm.operation(function() {\n      var ranges = [];\n      for (var i = 0; i < toSort.length; i += 2) {\n        var from = toSort[i], to = toSort[i + 1];\n        var start = Pos(from, 0), end = Pos(to);\n        var lines = cm.getRange(start, end, false);\n        if (caseSensitive)\n          lines.sort();\n        else\n          lines.sort(function(a, b) {\n            var au = a.toUpperCase(), bu = b.toUpperCase();\n            if (au != bu) { a = au; b = bu; }\n            return a < b ? -1 : a == b ? 0 : 1;\n          });\n        cm.replaceRange(lines, start, end);\n        if (selected) ranges.push({anchor: start, head: Pos(to + 1, 0)});\n      }\n      if (selected) cm.setSelections(ranges, 0);\n    });\n  }\n\n  cmds.sortLines = function(cm) { sortLines(cm, true); };\n  cmds.sortLinesInsensitive = function(cm) { sortLines(cm, false); };\n\n  cmds.nextBookmark = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      var current = marks.shift();\n      var found = current.find();\n      if (found) {\n        marks.push(current);\n        return cm.setSelection(found.from, found.to);\n      }\n    }\n  };\n\n  cmds.prevBookmark = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      marks.unshift(marks.pop());\n      var found = marks[marks.length - 1].find();\n      if (!found)\n        marks.pop();\n      else\n        return cm.setSelection(found.from, found.to);\n    }\n  };\n\n  cmds.toggleBookmark = function(cm) {\n    var ranges = cm.listSelections();\n    var marks = cm.state.sublimeBookmarks || (cm.state.sublimeBookmarks = []);\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      var found = ranges[i].empty() ? cm.findMarksAt(from) : cm.findMarks(from, to);\n      for (var j = 0; j < found.length; j++) {\n        if (found[j].sublimeBookmark) {\n          found[j].clear();\n          for (var k = 0; k < marks.length; k++)\n            if (marks[k] == found[j])\n              marks.splice(k--, 1);\n          break;\n        }\n      }\n      if (j == found.length)\n        marks.push(cm.markText(from, to, {sublimeBookmark: true, clearWhenEmpty: false}));\n    }\n  };\n\n  cmds.clearBookmarks = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) for (var i = 0; i < marks.length; i++) marks[i].clear();\n    marks.length = 0;\n  };\n\n  cmds.selectBookmarks = function(cm) {\n    var marks = cm.state.sublimeBookmarks, ranges = [];\n    if (marks) for (var i = 0; i < marks.length; i++) {\n      var found = marks[i].find();\n      if (!found)\n        marks.splice(i--, 0);\n      else\n        ranges.push({anchor: found.from, head: found.to});\n    }\n    if (ranges.length)\n      cm.setSelections(ranges, 0);\n  };\n\n  function modifyWordOrSelection(cm, mod) {\n    cm.operation(function() {\n      var ranges = cm.listSelections(), indices = [], replacements = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n        if (range.empty()) { indices.push(i); replacements.push(\"\"); }\n        else replacements.push(mod(cm.getRange(range.from(), range.to())));\n      }\n      cm.replaceSelections(replacements, \"around\", \"case\");\n      for (var i = indices.length - 1, at; i >= 0; i--) {\n        var range = ranges[indices[i]];\n        if (at && CodeMirror.cmpPos(range.head, at) > 0) continue;\n        var word = wordAt(cm, range.head);\n        at = word.from;\n        cm.replaceRange(mod(word.word), word.from, word.to);\n      }\n    });\n  }\n\n  cmds.smartBackspace = function(cm) {\n    if (cm.somethingSelected()) return CodeMirror.Pass;\n\n    cm.operation(function() {\n      var cursors = cm.listSelections();\n      var indentUnit = cm.getOption(\"indentUnit\");\n\n      for (var i = cursors.length - 1; i >= 0; i--) {\n        var cursor = cursors[i].head;\n        var toStartOfLine = cm.getRange({line: cursor.line, ch: 0}, cursor);\n        var column = CodeMirror.countColumn(toStartOfLine, null, cm.getOption(\"tabSize\"));\n\n        // Delete by one character by default\n        var deletePos = cm.findPosH(cursor, -1, \"char\", false);\n\n        if (toStartOfLine && !/\\S/.test(toStartOfLine) && column % indentUnit == 0) {\n          var prevIndent = new Pos(cursor.line,\n            CodeMirror.findColumn(toStartOfLine, column - indentUnit, indentUnit));\n\n          // Smart delete only if we found a valid prevIndent location\n          if (prevIndent.ch != cursor.ch) deletePos = prevIndent;\n        }\n\n        cm.replaceRange(\"\", deletePos, cursor, \"+delete\");\n      }\n    });\n  };\n\n  cmds.delLineRight = function(cm) {\n    cm.operation(function() {\n      var ranges = cm.listSelections();\n      for (var i = ranges.length - 1; i >= 0; i--)\n        cm.replaceRange(\"\", ranges[i].anchor, Pos(ranges[i].to().line), \"+delete\");\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.upcaseAtCursor = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toUpperCase(); });\n  };\n  cmds.downcaseAtCursor = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toLowerCase(); });\n  };\n\n  cmds.setSublimeMark = function(cm) {\n    if (cm.state.sublimeMark) cm.state.sublimeMark.clear();\n    cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n  };\n  cmds.selectToSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) cm.setSelection(cm.getCursor(), found);\n  };\n  cmds.deleteToSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      var from = cm.getCursor(), to = found;\n      if (CodeMirror.cmpPos(from, to) > 0) { var tmp = to; to = from; from = tmp; }\n      cm.state.sublimeKilled = cm.getRange(from, to);\n      cm.replaceRange(\"\", from, to);\n    }\n  };\n  cmds.swapWithSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      cm.state.sublimeMark.clear();\n      cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n      cm.setCursor(found);\n    }\n  };\n  cmds.sublimeYank = function(cm) {\n    if (cm.state.sublimeKilled != null)\n      cm.replaceSelection(cm.state.sublimeKilled, null, \"paste\");\n  };\n\n  cmds.showInCenter = function(cm) {\n    var pos = cm.cursorCoords(null, \"local\");\n    cm.scrollTo(null, (pos.top + pos.bottom) / 2 - cm.getScrollInfo().clientHeight / 2);\n  };\n\n  function getTarget(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      from = word.from;\n      to = word.to;\n    }\n    return {from: from, to: to, query: cm.getRange(from, to), word: word};\n  }\n\n  function findAndGoTo(cm, forward) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var query = target.query;\n    var cur = cm.getSearchCursor(query, forward ? target.to : target.from);\n\n    if (forward ? cur.findNext() : cur.findPrevious()) {\n      cm.setSelection(cur.from(), cur.to());\n    } else {\n      cur = cm.getSearchCursor(query, forward ? Pos(cm.firstLine(), 0)\n                                              : cm.clipPos(Pos(cm.lastLine())));\n      if (forward ? cur.findNext() : cur.findPrevious())\n        cm.setSelection(cur.from(), cur.to());\n      else if (target.word)\n        cm.setSelection(target.from, target.to);\n    }\n  };\n  cmds.findUnder = function(cm) { findAndGoTo(cm, true); };\n  cmds.findUnderPrevious = function(cm) { findAndGoTo(cm,false); };\n  cmds.findAllUnder = function(cm) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var cur = cm.getSearchCursor(target.query);\n    var matches = [];\n    var primaryIndex = -1;\n    while (cur.findNext()) {\n      matches.push({anchor: cur.from(), head: cur.to()});\n      if (cur.from().line <= target.from.line && cur.from().ch <= target.from.ch)\n        primaryIndex++;\n    }\n    cm.setSelections(matches, primaryIndex);\n  };\n\n\n  var keyMap = CodeMirror.keyMap;\n  keyMap.macSublime = {\n    \"Cmd-Left\": \"goLineStartSmart\",\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-Left\": \"goSubwordLeft\",\n    \"Ctrl-Right\": \"goSubwordRight\",\n    \"Ctrl-Alt-Up\": \"scrollLineUp\",\n    \"Ctrl-Alt-Down\": \"scrollLineDown\",\n    \"Cmd-L\": \"selectLine\",\n    \"Shift-Cmd-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Cmd-Enter\": \"insertLineAfter\",\n    \"Shift-Cmd-Enter\": \"insertLineBefore\",\n    \"Cmd-D\": \"selectNextOccurrence\",\n    \"Shift-Cmd-Space\": \"selectScope\",\n    \"Shift-Cmd-M\": \"selectBetweenBrackets\",\n    \"Cmd-M\": \"goToBracket\",\n    \"Cmd-Ctrl-Up\": \"swapLineUp\",\n    \"Cmd-Ctrl-Down\": \"swapLineDown\",\n    \"Cmd-/\": \"toggleCommentIndented\",\n    \"Cmd-J\": \"joinLines\",\n    \"Shift-Cmd-D\": \"duplicateLine\",\n    \"F5\": \"sortLines\",\n    \"Cmd-F5\": \"sortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Cmd-F2\": \"toggleBookmark\",\n    \"Shift-Cmd-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Cmd-K Cmd-K\": \"delLineRight\",\n    \"Cmd-K Cmd-U\": \"upcaseAtCursor\",\n    \"Cmd-K Cmd-L\": \"downcaseAtCursor\",\n    \"Cmd-K Cmd-Space\": \"setSublimeMark\",\n    \"Cmd-K Cmd-A\": \"selectToSublimeMark\",\n    \"Cmd-K Cmd-W\": \"deleteToSublimeMark\",\n    \"Cmd-K Cmd-X\": \"swapWithSublimeMark\",\n    \"Cmd-K Cmd-Y\": \"sublimeYank\",\n    \"Cmd-K Cmd-C\": \"showInCenter\",\n    \"Cmd-K Cmd-G\": \"clearBookmarks\",\n    \"Cmd-K Cmd-Backspace\": \"delLineLeft\",\n    \"Cmd-K Cmd-0\": \"unfoldAll\",\n    \"Cmd-K Cmd-J\": \"unfoldAll\",\n    \"Ctrl-Shift-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Shift-Down\": \"addCursorToNextLine\",\n    \"Cmd-F3\": \"findUnder\",\n    \"Shift-Cmd-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Cmd-[\": \"fold\",\n    \"Shift-Cmd-]\": \"unfold\",\n    \"Cmd-I\": \"findIncremental\",\n    \"Shift-Cmd-I\": \"findIncrementalReverse\",\n    \"Cmd-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"macDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.macSublime);\n\n  keyMap.pcSublime = {\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-T\": \"transposeChars\",\n    \"Alt-Left\": \"goSubwordLeft\",\n    \"Alt-Right\": \"goSubwordRight\",\n    \"Ctrl-Up\": \"scrollLineUp\",\n    \"Ctrl-Down\": \"scrollLineDown\",\n    \"Ctrl-L\": \"selectLine\",\n    \"Shift-Ctrl-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Ctrl-Enter\": \"insertLineAfter\",\n    \"Shift-Ctrl-Enter\": \"insertLineBefore\",\n    \"Ctrl-D\": \"selectNextOccurrence\",\n    \"Shift-Ctrl-Space\": \"selectScope\",\n    \"Shift-Ctrl-M\": \"selectBetweenBrackets\",\n    \"Ctrl-M\": \"goToBracket\",\n    \"Shift-Ctrl-Up\": \"swapLineUp\",\n    \"Shift-Ctrl-Down\": \"swapLineDown\",\n    \"Ctrl-/\": \"toggleCommentIndented\",\n    \"Ctrl-J\": \"joinLines\",\n    \"Shift-Ctrl-D\": \"duplicateLine\",\n    \"F9\": \"sortLines\",\n    \"Ctrl-F9\": \"sortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Ctrl-F2\": \"toggleBookmark\",\n    \"Shift-Ctrl-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Ctrl-K Ctrl-K\": \"delLineRight\",\n    \"Ctrl-K Ctrl-U\": \"upcaseAtCursor\",\n    \"Ctrl-K Ctrl-L\": \"downcaseAtCursor\",\n    \"Ctrl-K Ctrl-Space\": \"setSublimeMark\",\n    \"Ctrl-K Ctrl-A\": \"selectToSublimeMark\",\n    \"Ctrl-K Ctrl-W\": \"deleteToSublimeMark\",\n    \"Ctrl-K Ctrl-X\": \"swapWithSublimeMark\",\n    \"Ctrl-K Ctrl-Y\": \"sublimeYank\",\n    \"Ctrl-K Ctrl-C\": \"showInCenter\",\n    \"Ctrl-K Ctrl-G\": \"clearBookmarks\",\n    \"Ctrl-K Ctrl-Backspace\": \"delLineLeft\",\n    \"Ctrl-K Ctrl-0\": \"unfoldAll\",\n    \"Ctrl-K Ctrl-J\": \"unfoldAll\",\n    \"Ctrl-Alt-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Alt-Down\": \"addCursorToNextLine\",\n    \"Ctrl-F3\": \"findUnder\",\n    \"Shift-Ctrl-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Ctrl-[\": \"fold\",\n    \"Shift-Ctrl-]\": \"unfold\",\n    \"Ctrl-I\": \"findIncremental\",\n    \"Shift-Ctrl-I\": \"findIncrementalReverse\",\n    \"Ctrl-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"pcDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.pcSublime);\n\n  var mac = keyMap.default == keyMap.macDefault;\n  keyMap.sublime = mac ? keyMap.macSublime : keyMap.pcSublime;\n});\n"]}