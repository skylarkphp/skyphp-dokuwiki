{"version":3,"sources":["mode/gfm/gfm.js"],"names":["define","CodeMirror","urlRE","defineMode","config","modeConfig","codeDepth","gfmOverlay","startState","code","codeBlock","ateSpace","copyState","s","token","stream","state","combineTokens","match","skipToEnd","sol","peek","next","before","pos","eatWhile","difference","eatSpace","gitHubSpice","string","slice","start","test","charAt","blankLine","markdownConfig","taskLists","strikethrough","emoji","attr","name","overlayMode","getMode","defineMIME"],"mappings":";;;;;;;AAGAA,QAAQ,mBAAoB,uBAAwB,4BAA6B,SAASC,GAC1F,aAEA,IAAIC,EAAQ,gnCAEZD,EAAWE,WAAW,MAAO,SAASC,EAAQC,GAC5C,IAAIC,EAAY,EAKhB,IAAIC,GACFC,WAAY,WACV,OACEC,MAAM,EACNC,WAAW,EACXC,UAAU,IAGdC,UAAW,SAASC,GAClB,OACEJ,KAAMI,EAAEJ,KACRC,UAAWG,EAAEH,UACbC,SAAUE,EAAEF,WAGhBG,MAAO,SAASC,EAAQC,GAItB,GAHAA,EAAMC,cAAgB,KAGlBD,EAAMN,UACR,OAAIK,EAAOG,MAAM,UACfF,EAAMN,WAAY,EACX,OAETK,EAAOI,YACA,MAKT,GAHIJ,EAAOK,QACTJ,EAAMP,MAAO,GAEXM,EAAOK,OAASL,EAAOG,MAAM,SAG/B,OAFAH,EAAOI,YACPH,EAAMN,WAAY,EACX,KAGT,GAAsB,MAAlBK,EAAOM,OAAgB,CACzBN,EAAOO,OACP,IAAIC,EAASR,EAAOS,IACpBT,EAAOU,SAAS,KAChB,IAAIC,EAAa,EAAIX,EAAOS,IAAMD,EASlC,OARKP,EAAMP,KAILiB,IAAepB,IACjBU,EAAMP,MAAO,IAJfH,EAAYoB,EACZV,EAAMP,MAAO,GAMR,KACF,GAAIO,EAAMP,KAEf,OADAM,EAAOO,OACA,KAGT,GAAIP,EAAOY,WAET,OADAX,EAAML,UAAW,EACV,KAET,IAAII,EAAOK,OAASJ,EAAML,YACxBK,EAAML,UAAW,GACc,IAA3BN,EAAWuB,aAAuB,CACpC,GAAGb,EAAOG,MAAM,gFAKd,OADAF,EAAMC,eAAgB,EACf,OACF,GAAIF,EAAOG,MAAM,wDAKtB,OADAF,EAAMC,eAAgB,EACf,OAIb,OAAIF,EAAOG,MAAMhB,IAC0C,MAAvDa,EAAOc,OAAOC,MAAMf,EAAOgB,MAAQ,EAAGhB,EAAOgB,SAC5B,GAAhBhB,EAAOgB,OAAc,KAAKC,KAAKjB,EAAOc,OAAOI,OAAOlB,EAAOgB,MAAQ,MAKtEf,EAAMC,eAAgB,EACf,SAETF,EAAOO,OACA,OAETY,UA9FF,SAAmBlB,GAEjB,OADAA,EAAMP,MAAO,EACN,OA+FL0B,GACFC,WAAW,EACXC,eAAe,EACfC,OAAO,GAET,IAAK,IAAIC,KAAQlC,EACf8B,EAAeI,GAAQlC,EAAWkC,GAGpC,OADAJ,EAAeK,KAAO,WACfvC,EAAWwC,YAAYxC,EAAWyC,QAAQtC,EAAQ+B,GAAiB5B,IAEzE,YAEDN,EAAW0C,WAAW,aAAc","file":"../../../mode/gfm/gfm.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\ndefine([\"../../CodeMirror\", \"../markdown/markdown\", \"../../addon/mode/overlay\"], function(CodeMirror) {\n\"use strict\";\n\nvar urlRE = /^((?:(?:aaas?|about|acap|adiumxtra|af[ps]|aim|apt|attachment|aw|beshare|bitcoin|bolo|callto|cap|chrome(?:-extension)?|cid|coap|com-eventbrite-attendee|content|crid|cvs|data|dav|dict|dlna-(?:playcontainer|playsingle)|dns|doi|dtn|dvb|ed2k|facetime|feed|file|finger|fish|ftp|geo|gg|git|gizmoproject|go|gopher|gtalk|h323|hcp|https?|iax|icap|icon|im|imap|info|ipn|ipp|irc[6s]?|iris(?:\\.beep|\\.lwz|\\.xpc|\\.xpcs)?|itms|jar|javascript|jms|keyparc|lastfm|ldaps?|magnet|mailto|maps|market|message|mid|mms|ms-help|msnim|msrps?|mtqp|mumble|mupdate|mvn|news|nfs|nih?|nntp|notes|oid|opaquelocktoken|palm|paparazzi|platform|pop|pres|proxy|psyc|query|res(?:ource)?|rmi|rsync|rtmp|rtsp|secondlife|service|session|sftp|sgn|shttp|sieve|sips?|skype|sm[bs]|snmp|soap\\.beeps?|soldat|spotify|ssh|steam|svn|tag|teamspeak|tel(?:net)?|tftp|things|thismessage|tip|tn3270|tv|udp|unreal|urn|ut2004|vemmi|ventrilo|view-source|webcal|wss?|wtai|wyciwyg|xcon(?:-userid)?|xfire|xmlrpc\\.beeps?|xmpp|xri|ymsgr|z39\\.50[rs]?):(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]|\\([^\\s()<>]*\\))+(?:\\([^\\s()<>]*\\)|[^\\s`*!()\\[\\]{};:'\".,<>?«»“”‘’]))/i\n\nCodeMirror.defineMode(\"gfm\", function(config, modeConfig) {\n  var codeDepth = 0;\n  function blankLine(state) {\n    state.code = false;\n    return null;\n  }\n  var gfmOverlay = {\n    startState: function() {\n      return {\n        code: false,\n        codeBlock: false,\n        ateSpace: false\n      };\n    },\n    copyState: function(s) {\n      return {\n        code: s.code,\n        codeBlock: s.codeBlock,\n        ateSpace: s.ateSpace\n      };\n    },\n    token: function(stream, state) {\n      state.combineTokens = null;\n\n      // Hack to prevent formatting override inside code blocks (block and inline)\n      if (state.codeBlock) {\n        if (stream.match(/^```+/)) {\n          state.codeBlock = false;\n          return null;\n        }\n        stream.skipToEnd();\n        return null;\n      }\n      if (stream.sol()) {\n        state.code = false;\n      }\n      if (stream.sol() && stream.match(/^```+/)) {\n        stream.skipToEnd();\n        state.codeBlock = true;\n        return null;\n      }\n      // If this block is changed, it may need to be updated in Markdown mode\n      if (stream.peek() === '`') {\n        stream.next();\n        var before = stream.pos;\n        stream.eatWhile('`');\n        var difference = 1 + stream.pos - before;\n        if (!state.code) {\n          codeDepth = difference;\n          state.code = true;\n        } else {\n          if (difference === codeDepth) { // Must be exact\n            state.code = false;\n          }\n        }\n        return null;\n      } else if (state.code) {\n        stream.next();\n        return null;\n      }\n      // Check if space. If so, links can be formatted later on\n      if (stream.eatSpace()) {\n        state.ateSpace = true;\n        return null;\n      }\n      if (stream.sol() || state.ateSpace) {\n        state.ateSpace = false;\n        if (modeConfig.gitHubSpice !== false) {\n          if(stream.match(/^(?:[a-zA-Z0-9\\-_]+\\/)?(?:[a-zA-Z0-9\\-_]+@)?(?=.{0,6}\\d)(?:[a-f0-9]{7,40}\\b)/)) {\n            // User/Project@SHA\n            // User@SHA\n            // SHA\n            state.combineTokens = true;\n            return \"link\";\n          } else if (stream.match(/^(?:[a-zA-Z0-9\\-_]+\\/)?(?:[a-zA-Z0-9\\-_]+)?#[0-9]+\\b/)) {\n            // User/Project#Num\n            // User#Num\n            // #Num\n            state.combineTokens = true;\n            return \"link\";\n          }\n        }\n      }\n      if (stream.match(urlRE) &&\n          stream.string.slice(stream.start - 2, stream.start) != \"](\" &&\n          (stream.start == 0 || /\\W/.test(stream.string.charAt(stream.start - 1)))) {\n        // URLs\n        // Taken from http://daringfireball.net/2010/07/improved_regex_for_matching_urls\n        // And then (issue #1160) simplified to make it not crash the Chrome Regexp engine\n        // And then limited url schemes to the CommonMark list, so foo:bar isn't matched as a URL\n        state.combineTokens = true;\n        return \"link\";\n      }\n      stream.next();\n      return null;\n    },\n    blankLine: blankLine\n  };\n\n  var markdownConfig = {\n    taskLists: true,\n    strikethrough: true,\n    emoji: true\n  };\n  for (var attr in modeConfig) {\n    markdownConfig[attr] = modeConfig[attr];\n  }\n  markdownConfig.name = \"markdown\";\n  return CodeMirror.overlayMode(CodeMirror.getMode(config, markdownConfig), gfmOverlay);\n\n}, \"markdown\");\n\n  CodeMirror.defineMIME(\"text/x-gfm\", \"gfm\");\n});\n"]}