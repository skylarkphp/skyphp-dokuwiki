{"version":3,"sources":["mode/javascript/test.js"],"names":["mode","CodeMirror","getMode","indentUnit","MT","name","test","Array","prototype","slice","call","arguments","ts_mode","TS","jsonld_mode","jsonld","LD"],"mappings":";;;;;;;CAGA,WACE,IAAIA,EAAOC,WAAWC,SAASC,WAAY,GAAI,cAC/C,SAASC,EAAGC,GAAQC,KAAKN,KAAKK,EAAML,EAAMO,MAAMC,UAAUC,MAAMC,KAAKC,UAAW,IAEhFP,EAAG,SACA,6LAEHA,EAAG,kBACA,2GAEHA,EAAG,gBACA,wDACA,kIACA,mEACA,SAEHA,EAAG,6BACD,iEACA,0BAEFA,EAAG,aACA,8BACA,gCACA,2BACA,uEACA,MACA,KAEHA,EAAG,QACA,wEACA,sEACA,+CACA,6CACA,+DACA,MACA,KAEHA,EAAG,6BACA,qGACA,wCACA,MAEHA,EAAG,yBACA,6EACA,wCACA,MAEHA,EAAG,qBACA,8BACA,6BACA,6CACA,KAEHA,EAAG,SACA,mCACA,+DACA,wFACA,KAEHA,EAAG,wBACA,0EAEHA,EAAG,iBACA,oDAEHA,EAAG,iBACA,yFAEHA,EAAG,QACA,iCACA,sFACA,KAEHA,EAAG,SACA,8EAEHA,EAAG,YACA,8FAEHA,EAAG,YACA,8CACA,0IACA,sCACA,KAEHA,EAAG,cACA,6CACA,+CACA,6DACA,0FACA,KAEHA,EAAG,iBACA,oCACA,uBACA,6BACA,sCACA,IACA,iBAEHA,EAAG,gBACA,iCACA,MACA,sDACA,mCACA,sDACA,sDACA,0FACA,QACA,sFACA,MACA,kFACA,KAEHA,EAAG,uBACA,+GAEHA,EAAG,iBACA,yGAEHA,EAAG,WACA,oGACA,gBACA,iIACA,iBAEHA,EAAG,SACA,2DACA,oEACA,KAEHA,EAAG,QACA,iKAEHA,EAAG,oBACA,+JAEHA,EAAG,mBACA,iDACA,uDACA,oBACA,uBAEHA,EAAG,YACA,4BACA,qBACA,2CACA,wBACA,iBACA,iBACA,8BACA,qBACA,+CACA,wBACA,qBACA,iBACA,KAEHA,EAAG,aACA,gEACA,+CACA,kCACA,0CACA,uBAEHA,EAAG,iBACA,iCACA,IACA,wBACA,KAEHA,EAAG,cACA,qBACA,kCACA,oCACA,oBACA,qBACA,oBACA,mBACA,mBAEHA,EAAG,gBACA,iCACA,oCACA,wBACA,MAEHA,EAAG,kBACA,qBACA,kCACA,kBACA,eAEHA,EAAG,0BACA,mCACA,gCACA,uBACA,KAEHA,EAAG,yCACA,mCACA,gCACA,uBACA,qBACA,KAEHA,EAAG,kBACA,qDACA,kBAEHA,EAAG,eACA,6BAEHA,EAAG,uBACA,wCACA,iBACA,gBACA,MACA,gBAEHA,EAAG,gBACA,oGACA,qCACA,KAEHA,EACE,sBACA,oGACA,qCACA,KAEFA,EAAG,aACA,6CACA,sGACA,qCACA,2BACA,MACA,KAEHA,EAAG,QACA,8FAEHA,EAAG,mBACA,6HAEHA,EAAG,eACA,4EAGHA,EAAG,wBACA,2HAEHA,EAAG,0BACA,yCACA,yGACA,yGACA,oHACA,MAEHA,EAAG,cACA,wHAEHA,EAAG,eACA,iCACA,oCACA,mCACA,sCACA,OAEHA,EAAG,iBACA,uEACA,wGAEHA,EAAG,SAAU,uGAEbA,EAAG,gBACA,6GAEHA,EAAG,gBACA,oCACA,uBACA,kCACA,KAEHA,EAAG,qBACA,gDACA,mCACA,mCACA,+DACA,gEACA,8DACA,qDAEHA,EAAG,aACA,mBACA,qBAEH,IAAIQ,EAAUX,WAAWC,SAASC,WAAY,GAAI,0BAClD,SAASU,EAAGR,GACVC,KAAKN,KAAKK,EAAMO,EAASL,MAAMC,UAAUC,MAAMC,KAAKC,UAAW,IAGjEE,EAAG,yBACA,iGAEHA,EAAG,wBACA,wFAEHA,EAAG,mBACA,8BACA,2DACA,sDACA,KAEHA,EAAG,2BACA,iGACA,2CACA,yFACA,0FACA,IACA,0IACA,mDACA,yFACA,0FACA,KAEHA,EAAG,8BACA,yEACA,yGACA,6BACA,uCACA,8HACA,+BACA,wCACA,0CACA,mHACA,OAEHA,EAAG,kCACA,iCACA,iDACA,iDACA,sBAEHA,EAAG,2BACA,8DACA,8CACA,mDACA,IACA,mLACA,kCACA,uCACA,KAEHA,EAAG,6BACA,gCACA,sDACA,kCACA,KAEHA,EAAG,2BACA,8DACA,wBACA,oCACA,KAEHA,EAAG,+BACA,yFACA,6CACA,kCACA,mCACA,MAEHA,EAAG,mCACA,kCACA,oCACA,wDACA,qEACA,MACA,8EACA,qEACA,MACA,KAEHA,EAAG,+BACA,kCACA,8IACA,mCAEHA,EAAG,iCACA,iCACA,yDACA,IACA,qJACA,yDACA,KAEHA,EAAG,kCACA,6OAEHA,EAAG,mBACA,6HACA,sBAEHA,EAAG,0BACA,mKAEHA,EAAG,YACA,8BACA,4DACA,4EACA,KAEHA,EAAG,aACA,0DAEHA,EAAG,2BACA,kFACA,qFAEHA,EAAG,aACA,iCACA,uHACA,4FACA,0DACA,MACA,KAEHA,EAAG,mBACA,sEAEHA,EAAG,YACA,mFACA,4DACA,gEACA,gBACA,KAEHA,EAAG,qBACA,8BACA,qJACA,wCACA,KAEHA,EAAG,iBACA,oEAEHA,EAAG,+BACA,kCACA,uDACA,gCACA,KAEH,IAAIC,EAAcb,WAAWC,SAC1BC,WAAY,IACZE,KAAM,aAAcU,QAAQ,IAE/B,SAASC,EAAGX,GACVC,KAAKN,KAAKK,EAAMS,EAAaP,MAAMC,UAAUC,MAAMC,KAAKC,UAAW,IAGrEK,EAAG,mBACD,IACA,yBACA,qDACA,8DACA,kCACA,4CACA,oDACA,SACA,iEACA,kEACA,OACA,0BACA,wEACA,iDACA,+BACA,+DACA,6EACA,QACA,SACA,KAEFA,EAAG,eACD,IACA,0CACA,sDACA,yDACA,sCACA,KAzeJ","file":"../../../mode/javascript/test.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function() {\n  var mode = CodeMirror.getMode({indentUnit: 2}, \"javascript\");\n  function MT(name) { test.mode(name, mode, Array.prototype.slice.call(arguments, 1)); }\n\n  MT(\"locals\",\n     \"[keyword function] [def foo]([def a], [def b]) { [keyword var] [def c] [operator =] [number 10]; [keyword return] [variable-2 a] [operator +] [variable-2 c] [operator +] [variable d]; }\");\n\n  MT(\"comma-and-binop\",\n     \"[keyword function](){ [keyword var] [def x] [operator =] [number 1] [operator +] [number 2], [def y]; }\");\n\n  MT(\"destructuring\",\n     \"([keyword function]([def a], [[[def b], [def c] ]]) {\",\n     \"  [keyword let] {[def d], [property foo]: [def c][operator =][number 10], [def x]} [operator =] [variable foo]([variable-2 a]);\",\n     \"  [[[variable-2 c], [variable y] ]] [operator =] [variable-2 c];\",\n     \"})();\");\n\n  MT(\"destructure_trailing_comma\",\n    \"[keyword let] {[def a], [def b],} [operator =] [variable foo];\",\n    \"[keyword let] [def c];\"); // Parser still in good state?\n\n  MT(\"class_body\",\n     \"[keyword class] [def Foo] {\",\n     \"  [property constructor]() {}\",\n     \"  [property sayName]() {\",\n     \"    [keyword return] [string-2 `foo${][variable foo][string-2 }oo`];\",\n     \"  }\",\n     \"}\");\n\n  MT(\"class\",\n     \"[keyword class] [def Point] [keyword extends] [variable SuperThing] {\",\n     \"  [keyword get] [property prop]() { [keyword return] [number 24]; }\",\n     \"  [property constructor]([def x], [def y]) {\",\n     \"    [keyword super]([string 'something']);\",\n     \"    [keyword this].[property x] [operator =] [variable-2 x];\",\n     \"  }\",\n     \"}\");\n\n  MT(\"anonymous_class_expression\",\n     \"[keyword const] [def Adder] [operator =] [keyword class] [keyword extends] [variable Arithmetic] {\",\n     \"  [property add]([def a], [def b]) {}\",\n     \"};\");\n\n  MT(\"named_class_expression\",\n     \"[keyword const] [def Subber] [operator =] [keyword class] [def Subtract] {\",\n     \"  [property sub]([def a], [def b]) {}\",\n     \"};\");\n\n  MT(\"class_async_method\",\n     \"[keyword class] [def Foo] {\",\n     \"  [property sayName1]() {}\",\n     \"  [keyword async] [property sayName2]() {}\",\n     \"}\");\n\n  MT(\"import\",\n     \"[keyword function] [def foo]() {\",\n     \"  [keyword import] [def $] [keyword from] [string 'jquery'];\",\n     \"  [keyword import] { [def encrypt], [def decrypt] } [keyword from] [string 'crypto'];\",\n     \"}\");\n\n  MT(\"import_trailing_comma\",\n     \"[keyword import] {[def foo], [def bar],} [keyword from] [string 'baz']\")\n\n  MT(\"import_dynamic\",\n     \"[keyword import]([string 'baz']).[property then]\")\n\n  MT(\"import_dynamic\",\n     \"[keyword const] [def t] [operator =] [keyword import]([string 'baz']).[property then]\")\n\n  MT(\"const\",\n     \"[keyword function] [def f]() {\",\n     \"  [keyword const] [[ [def a], [def b] ]] [operator =] [[ [number 1], [number 2] ]];\",\n     \"}\");\n\n  MT(\"for/of\",\n     \"[keyword for]([keyword let] [def of] [keyword of] [variable something]) {}\");\n\n  MT(\"for await\",\n     \"[keyword for] [keyword await]([keyword let] [def of] [keyword of] [variable something]) {}\");\n\n  MT(\"generator\",\n     \"[keyword function*] [def repeat]([def n]) {\",\n     \"  [keyword for]([keyword var] [def i] [operator =] [number 0]; [variable-2 i] [operator <] [variable-2 n]; [operator ++][variable-2 i])\",\n     \"    [keyword yield] [variable-2 i];\",\n     \"}\");\n\n  MT(\"let_scoping\",\n     \"[keyword function] [def scoped]([def n]) {\",\n     \"  { [keyword var] [def i]; } [variable-2 i];\",\n     \"  { [keyword let] [def j]; [variable-2 j]; } [variable j];\",\n     \"  [keyword if] ([atom true]) { [keyword const] [def k]; [variable-2 k]; } [variable k];\",\n     \"}\");\n\n  MT(\"switch_scoping\",\n     \"[keyword switch] ([variable x]) {\",\n     \"  [keyword default]:\",\n     \"    [keyword let] [def j];\",\n     \"    [keyword return] [variable-2 j]\",\n     \"}\",\n     \"[variable j];\")\n\n  MT(\"leaving_scope\",\n     \"[keyword function] [def a]() {\",\n     \"  {\",\n     \"    [keyword const] [def x] [operator =] [number 1]\",\n     \"    [keyword if] ([atom true]) {\",\n     \"      [keyword let] [def y] [operator =] [number 2]\",\n     \"      [keyword var] [def z] [operator =] [number 3]\",\n     \"      [variable console].[property log]([variable-2 x], [variable-2 y], [variable-2 z])\",\n     \"    }\",\n     \"    [variable console].[property log]([variable-2 x], [variable y], [variable-2 z])\",\n     \"  }\",\n     \"  [variable console].[property log]([variable x], [variable y], [variable-2 z])\",\n     \"}\")\n\n  MT(\"quotedStringAddition\",\n     \"[keyword let] [def f] [operator =] [variable a] [operator +] [string 'fatarrow'] [operator +] [variable c];\");\n\n  MT(\"quotedFatArrow\",\n     \"[keyword let] [def f] [operator =] [variable a] [operator +] [string '=>'] [operator +] [variable c];\");\n\n  MT(\"fatArrow\",\n     \"[variable array].[property filter]([def a] [operator =>] [variable-2 a] [operator +] [number 1]);\",\n     \"[variable a];\", // No longer in scope\n     \"[keyword let] [def f] [operator =] ([[ [def a], [def b] ]], [def c]) [operator =>] [variable-2 a] [operator +] [variable-2 c];\",\n     \"[variable c];\");\n\n  MT(\"spread\",\n     \"[keyword function] [def f]([def a], [meta ...][def b]) {\",\n     \"  [variable something]([variable-2 a], [meta ...][variable-2 b]);\",\n     \"}\");\n\n  MT(\"quasi\",\n     \"[variable re][string-2 `fofdlakj${][variable x] [operator +] ([variable re][string-2 `foo`]) [operator +] [number 1][string-2 }fdsa`] [operator +] [number 2]\");\n\n  MT(\"quasi_no_function\",\n     \"[variable x] [operator =] [string-2 `fofdlakj${][variable x] [operator +] [string-2 `foo`] [operator +] [number 1][string-2 }fdsa`] [operator +] [number 2]\");\n\n  MT(\"indent_statement\",\n     \"[keyword var] [def x] [operator =] [number 10]\",\n     \"[variable x] [operator +=] [variable y] [operator +]\",\n     \"  [atom Infinity]\",\n     \"[keyword debugger];\");\n\n  MT(\"indent_if\",\n     \"[keyword if] ([number 1])\",\n     \"  [keyword break];\",\n     \"[keyword else] [keyword if] ([number 2])\",\n     \"  [keyword continue];\",\n     \"[keyword else]\",\n     \"  [number 10];\",\n     \"[keyword if] ([number 1]) {\",\n     \"  [keyword break];\",\n     \"} [keyword else] [keyword if] ([number 2]) {\",\n     \"  [keyword continue];\",\n     \"} [keyword else] {\",\n     \"  [number 10];\",\n     \"}\");\n\n  MT(\"indent_for\",\n     \"[keyword for] ([keyword var] [def i] [operator =] [number 0];\",\n     \"     [variable i] [operator <] [number 100];\",\n     \"     [variable i][operator ++])\",\n     \"  [variable doSomething]([variable i]);\",\n     \"[keyword debugger];\");\n\n  MT(\"indent_c_style\",\n     \"[keyword function] [def foo]()\",\n     \"{\",\n     \"  [keyword debugger];\",\n     \"}\");\n\n  MT(\"indent_else\",\n     \"[keyword for] (;;)\",\n     \"  [keyword if] ([variable foo])\",\n     \"    [keyword if] ([variable bar])\",\n     \"      [number 1];\",\n     \"    [keyword else]\",\n     \"      [number 2];\",\n     \"  [keyword else]\",\n     \"    [number 3];\");\n\n  MT(\"indent_funarg\",\n     \"[variable foo]([number 10000],\",\n     \"    [keyword function]([def a]) {\",\n     \"  [keyword debugger];\",\n     \"};\");\n\n  MT(\"indent_below_if\",\n     \"[keyword for] (;;)\",\n     \"  [keyword if] ([variable foo])\",\n     \"    [number 1];\",\n     \"[number 2];\");\n\n  MT(\"indent_semicolonless_if\",\n     \"[keyword function] [def foo]() {\",\n     \"  [keyword if] ([variable x])\",\n     \"    [variable foo]()\",\n     \"}\")\n\n  MT(\"indent_semicolonless_if_with_statement\",\n     \"[keyword function] [def foo]() {\",\n     \"  [keyword if] ([variable x])\",\n     \"    [variable foo]()\",\n     \"  [variable bar]()\",\n     \"}\")\n\n  MT(\"multilinestring\",\n     \"[keyword var] [def x] [operator =] [string 'foo\\\\]\",\n     \"[string bar'];\");\n\n  MT(\"scary_regexp\",\n     \"[string-2 /foo[[/]]bar/];\");\n\n  MT(\"indent_strange_array\",\n     \"[keyword var] [def x] [operator =] [[\",\n     \"  [number 1],,\",\n     \"  [number 2],\",\n     \"]];\",\n     \"[number 10];\");\n\n  MT(\"param_default\",\n     \"[keyword function] [def foo]([def x] [operator =] [string-2 `foo${][number 10][string-2 }bar`]) {\",\n     \"  [keyword return] [variable-2 x];\",\n     \"}\");\n\n  MT(\n    \"param_destructuring\",\n    \"[keyword function] [def foo]([def x] [operator =] [string-2 `foo${][number 10][string-2 }bar`]) {\",\n    \"  [keyword return] [variable-2 x];\",\n    \"}\");\n\n  MT(\"new_target\",\n     \"[keyword function] [def F]([def target]) {\",\n     \"  [keyword if] ([variable-2 target] [operator &&] [keyword new].[keyword target].[property name]) {\",\n     \"    [keyword return] [keyword new]\",\n     \"      .[keyword target];\",\n     \"  }\",\n     \"}\");\n\n  MT(\"async\",\n     \"[keyword async] [keyword function] [def foo]([def args]) { [keyword return] [atom true]; }\");\n\n  MT(\"async_assignment\",\n     \"[keyword const] [def foo] [operator =] [keyword async] [keyword function] ([def args]) { [keyword return] [atom true]; };\");\n\n  MT(\"async_object\",\n     \"[keyword let] [def obj] [operator =] { [property async]: [atom false] };\");\n\n  // async be highlighet as keyword and foo as def, but it requires potentially expensive look-ahead. See #4173\n  MT(\"async_object_function\",\n     \"[keyword let] [def obj] [operator =] { [property async] [property foo]([def args]) { [keyword return] [atom true]; } };\");\n\n  MT(\"async_object_properties\",\n     \"[keyword let] [def obj] [operator =] {\",\n     \"  [property prop1]: [keyword async] [keyword function] ([def args]) { [keyword return] [atom true]; },\",\n     \"  [property prop2]: [keyword async] [keyword function] ([def args]) { [keyword return] [atom true]; },\",\n     \"  [property prop3]: [keyword async] [keyword function] [def prop3]([def args]) { [keyword return] [atom true]; },\",\n     \"};\");\n\n  MT(\"async_arrow\",\n     \"[keyword const] [def foo] [operator =] [keyword async] ([def args]) [operator =>] { [keyword return] [atom true]; };\");\n\n  MT(\"async_jquery\",\n     \"[variable $].[property ajax]({\",\n     \"  [property url]: [variable url],\",\n     \"  [property async]: [atom true],\",\n     \"  [property method]: [string 'GET']\",\n     \"});\");\n\n  MT(\"async_variable\",\n     \"[keyword const] [def async] [operator =] {[property a]: [number 1]};\",\n     \"[keyword const] [def foo] [operator =] [string-2 `bar ${][variable async].[property a][string-2 }`];\")\n\n  MT(\"bigint\", \"[number 1n] [operator +] [number 0x1afn] [operator +] [number 0o064n] [operator +] [number 0b100n];\")\n\n  MT(\"async_comment\",\n     \"[keyword async] [comment /**/] [keyword function] [def foo]([def args]) { [keyword return] [atom true]; }\");\n\n  MT(\"indent_switch\",\n     \"[keyword switch] ([variable x]) {\",\n     \"  [keyword default]:\",\n     \"    [keyword return] [number 2]\",\n     \"}\")\n\n  MT(\"regexp_corner_case\",\n     \"[operator +]{} [operator /] [atom undefined];\",\n     \"[[[meta ...][string-2 /\\\\//] ]];\",\n     \"[keyword void] [string-2 /\\\\//];\",\n     \"[keyword do] [string-2 /\\\\//]; [keyword while] ([number 0]);\",\n     \"[keyword if] ([number 0]) {} [keyword else] [string-2 /\\\\//];\",\n     \"[string-2 `${][variable async][operator ++][string-2 }//`];\",\n     \"[string-2 `${]{} [operator /] [string-2 /\\\\//}`];\")\n\n  MT(\"return_eol\",\n     \"[keyword return]\",\n     \"{} [string-2 /5/]\")\n\n  var ts_mode = CodeMirror.getMode({indentUnit: 2}, \"application/typescript\")\n  function TS(name) {\n    test.mode(name, ts_mode, Array.prototype.slice.call(arguments, 1))\n  }\n\n  TS(\"typescript_extend_type\",\n     \"[keyword class] [def Foo] [keyword extends] [type Some][operator <][type Type][operator >] {}\")\n\n  TS(\"typescript_arrow_type\",\n     \"[keyword let] [def x]: ([variable arg]: [type Type]) [operator =>] [type ReturnType]\")\n\n  TS(\"typescript_class\",\n     \"[keyword class] [def Foo] {\",\n     \"  [keyword public] [keyword static] [property main]() {}\",\n     \"  [keyword private] [property _foo]: [type string];\",\n     \"}\")\n\n  TS(\"typescript_literal_types\",\n     \"[keyword import] [keyword *] [keyword as] [def Sequelize] [keyword from] [string 'sequelize'];\",\n     \"[keyword interface] [def MyAttributes] {\",\n     \"  [property truthy]: [string 'true'] [operator |] [number 1] [operator |] [atom true];\",\n     \"  [property falsy]: [string 'false'] [operator |] [number 0] [operator |] [atom false];\",\n     \"}\",\n     \"[keyword interface] [def MyInstance] [keyword extends] [type Sequelize].[type Instance] [operator <] [type MyAttributes] [operator >] {\",\n     \"  [property rawAttributes]: [type MyAttributes];\",\n     \"  [property truthy]: [string 'true'] [operator |] [number 1] [operator |] [atom true];\",\n     \"  [property falsy]: [string 'false'] [operator |] [number 0] [operator |] [atom false];\",\n     \"}\")\n\n  TS(\"typescript_extend_operators\",\n     \"[keyword export] [keyword interface] [def UserModel] [keyword extends]\",\n     \"  [type Sequelize].[type Model] [operator <] [type UserInstance], [type UserAttributes] [operator >] {\",\n     \"    [property findById]: (\",\n     \"    [variable userId]: [type number]\",\n     \"    ) [operator =>] [type Promise] [operator <] [type Array] [operator <] { [property id], [property name] } [operator >>];\",\n     \"    [property updateById]: (\",\n     \"    [variable userId]: [type number],\",\n     \"    [variable isActive]: [type boolean]\",\n     \"    ) [operator =>] [type Promise] [operator <] [type AccountHolderNotificationPreferenceInstance] [operator >];\",\n     \"  }\")\n\n  TS(\"typescript_interface_with_const\",\n     \"[keyword const] [def hello]: {\",\n     \"  [property prop1][operator ?]: [type string];\",\n     \"  [property prop2][operator ?]: [type string];\",\n     \"} [operator =] {};\")\n\n  TS(\"typescript_double_extend\",\n     \"[keyword export] [keyword interface] [def UserAttributes] {\",\n     \"  [property id][operator ?]: [type number];\",\n     \"  [property createdAt][operator ?]: [type Date];\",\n     \"}\",\n     \"[keyword export] [keyword interface] [def UserInstance] [keyword extends] [type Sequelize].[type Instance][operator <][type UserAttributes][operator >], [type UserAttributes] {\",\n     \"  [property id]: [type number];\",\n     \"  [property createdAt]: [type Date];\",\n     \"}\");\n\n  TS(\"typescript_index_signature\",\n     \"[keyword interface] [def A] {\",\n     \"  [[ [variable prop]: [type string] ]]: [type any];\",\n     \"  [property prop1]: [type any];\",\n     \"}\");\n\n  TS(\"typescript_generic_class\",\n     \"[keyword class] [def Foo][operator <][type T][operator >] {\",\n     \"  [property bar]() {}\",\n     \"  [property foo](): [type Foo] {}\",\n     \"}\")\n\n  TS(\"typescript_type_when_keyword\",\n     \"[keyword export] [keyword type] [type AB] [operator =] [type A] [operator |] [type B];\",\n     \"[keyword type] [type Flags] [operator =] {\",\n     \"  [property p1]: [type string];\",\n     \"  [property p2]: [type boolean];\",\n     \"};\")\n\n  TS(\"typescript_type_when_not_keyword\",\n     \"[keyword class] [def HasType] {\",\n     \"  [property type]: [type string];\",\n     \"  [property constructor]([def type]: [type string]) {\",\n     \"    [keyword this].[property type] [operator =] [variable-2 type];\",\n     \"  }\",\n     \"  [property setType]({ [def type] }: { [property type]: [type string]; }) {\",\n     \"    [keyword this].[property type] [operator =] [variable-2 type];\",\n     \"  }\",\n     \"}\")\n\n  TS(\"typescript_function_generics\",\n     \"[keyword function] [def a]() {}\",\n     \"[keyword function] [def b][operator <][type IA] [keyword extends] [type object], [type IB] [keyword extends] [type object][operator >]() {}\",\n     \"[keyword function] [def c]() {}\")\n\n  TS(\"typescript_complex_return_type\",\n     \"[keyword function] [def A]() {\",\n     \"  [keyword return] [keyword this].[property property];\",\n     \"}\",\n     \"[keyword function] [def B](): [type Promise][operator <]{ [[ [variable key]: [type string] ]]: [type any] } [operator |] [atom null][operator >] {\",\n     \"  [keyword return] [keyword this].[property property];\",\n     \"}\")\n\n  TS(\"typescript_complex_type_casting\",\n     \"[keyword const] [def giftpay] [operator =] [variable config].[property get]([string 'giftpay']) [keyword as] { [[ [variable platformUuid]: [type string] ]]: { [property version]: [type number]; [property apiCode]: [type string]; } };\")\n\n  TS(\"typescript_keyof\",\n     \"[keyword function] [def x][operator <][type T] [keyword extends] [keyword keyof] [type X][operator >]([def a]: [type T]) {\",\n     \"  [keyword return]\")\n\n  TS(\"typescript_new_typeargs\",\n     \"[keyword let] [def x] [operator =] [keyword new] [variable Map][operator <][type string], [type Date][operator >]([string-2 `foo${][variable bar][string-2 }`])\")\n\n  TS(\"modifiers\",\n     \"[keyword class] [def Foo] {\",\n     \"  [keyword public] [keyword abstract] [property bar]() {}\",\n     \"  [property constructor]([keyword readonly] [keyword private] [def x]) {}\",\n     \"}\")\n\n  TS(\"arrow prop\",\n     \"({[property a]: [def p] [operator =>] [variable-2 p]})\")\n\n  TS(\"generic in function call\",\n     \"[keyword this].[property a][operator <][type Type][operator >]([variable foo]);\",\n     \"[keyword this].[property a][operator <][variable Type][operator >][variable foo];\")\n\n  TS(\"type guard\",\n     \"[keyword class] [def Appler] {\",\n     \"  [keyword static] [property assertApple]([def fruit]: [type Fruit]): [variable-2 fruit] [keyword is] [type Apple] {\",\n     \"    [keyword if] ([operator !]([variable-2 fruit] [keyword instanceof] [variable Apple]))\",\n     \"      [keyword throw] [keyword new] [variable Error]();\",\n     \"  }\",\n     \"}\")\n\n  TS(\"type as variable\",\n     \"[variable type] [operator =] [variable x] [keyword as] [type Bar];\");\n\n  TS(\"enum body\",\n     \"[keyword export] [keyword const] [keyword enum] [def CodeInspectionResultType] {\",\n     \"  [def ERROR] [operator =] [string 'problem_type_error'],\",\n     \"  [def WARNING] [operator =] [string 'problem_type_warning'],\",\n     \"  [def META],\",\n     \"}\")\n\n  TS(\"parenthesized type\",\n     \"[keyword class] [def Foo] {\",\n     \"  [property x] [operator =] [keyword new] [variable A][operator <][type B], [type string][operator |](() [operator =>] [type void])[operator >]();\",\n     \"  [keyword private] [property bar]();\",\n     \"}\")\n\n  TS(\"abstract class\",\n     \"[keyword export] [keyword abstract] [keyword class] [def Foo] {}\")\n\n  TS(\"interface without semicolons\",\n     \"[keyword interface] [def Foo] {\",\n     \"  [property greet]([def x]: [type int]): [type blah]\",\n     \"  [property bar]: [type void]\",\n     \"}\")\n\n  var jsonld_mode = CodeMirror.getMode(\n    {indentUnit: 2},\n    {name: \"javascript\", jsonld: true}\n  );\n  function LD(name) {\n    test.mode(name, jsonld_mode, Array.prototype.slice.call(arguments, 1));\n  }\n\n  LD(\"json_ld_keywords\",\n    '{',\n    '  [meta \"@context\"]: {',\n    '    [meta \"@base\"]: [string \"http://example.com\"],',\n    '    [meta \"@vocab\"]: [string \"http://xmlns.com/foaf/0.1/\"],',\n    '    [property \"likesFlavor\"]: {',\n    '      [meta \"@container\"]: [meta \"@list\"]',\n    '      [meta \"@reverse\"]: [string \"@beFavoriteOf\"]',\n    '    },',\n    '    [property \"nick\"]: { [meta \"@container\"]: [meta \"@set\"] },',\n    '    [property \"nick\"]: { [meta \"@container\"]: [meta \"@index\"] }',\n    '  },',\n    '  [meta \"@graph\"]: [[ {',\n    '    [meta \"@id\"]: [string \"http://dbpedia.org/resource/John_Lennon\"],',\n    '    [property \"name\"]: [string \"John Lennon\"],',\n    '    [property \"modified\"]: {',\n    '      [meta \"@value\"]: [string \"2010-05-29T14:17:39+02:00\"],',\n    '      [meta \"@type\"]: [string \"http://www.w3.org/2001/XMLSchema#dateTime\"]',\n    '    }',\n    '  } ]]',\n    '}');\n\n  LD(\"json_ld_fake\",\n    '{',\n    '  [property \"@fake\"]: [string \"@fake\"],',\n    '  [property \"@contextual\"]: [string \"@identifier\"],',\n    '  [property \"user@domain.com\"]: [string \"@graphical\"],',\n    '  [property \"@ID\"]: [string \"@@ID\"]',\n    '}');\n})();\n"]}