{"version":3,"sources":["mode/powershell/test.js"],"names":["mode","CodeMirror","getMode","indentUnit","MT","name","test","Array","prototype","slice","call","arguments","forEach","arr","f","i","length","number","punctuation","replace"],"mappings":";;;;;;;CAGA,WACE,IAAIA,EAAOC,WAAWC,SAASC,WAAY,GAAI,cAC/C,SAASC,EAAGC,GAAQC,KAAKN,KAAKK,EAAML,EAAMO,MAAMC,UAAUC,MAAMC,KAAKC,UAAW,IAEhF,SAASC,EAAQC,EAAKC,GAAK,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAAKD,EAAED,EAAIE,GAAIA,GAE1EX,EAAG,UAAW,2BACdA,EAAG,oBAAqB,yBACtB,gBACF,0BAEAQ,GACE,IAAK,OACL,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,MAAO,QAAS,QAC/D,QAAS,WAAY,KAAM,OAAQ,KAAM,QACzC,QAAS,OAAQ,QAAS,SAAU,KAAM,QAC1C,MAAO,WAAY,QAAS,UAC3B,SAASK,GACVb,EAAG,UAAYa,EAAQ,WAAaA,EAAS,OAG/Cb,EAAG,0BAA2B,kBAC9BA,EAAG,0BAA2B,mBAC9BA,EAAG,oBAAqB,mBACxBA,EAAG,oBAAqB,mBACxBA,EAAG,2BAA4B,oBAC/BA,EAAG,kBAAmB,2CACtBA,EAAG,yBAA0B,+CAC7BA,EAAG,oBAAqB,gGACxBA,EAAG,2BAA4B,0HAE/BA,EAAG,iBAAkB,cACnB,eACF,eACAA,EAAG,wBAAyB,cAC1B,mBACF,eACAA,EAAG,0BAA2B,cAC5B,wCACF,eACAA,EAAG,+BAAgC,cACjC,kEACF,eACAA,EAAG,gCAAiC,cAClC,mBACF,eAEAA,EAAG,QAAS,0EACZA,EAAG,OAAQ,6EAEXA,EAAG,WAAY,sBACfA,EAAG,kBAAoB,6BACvBA,EAAG,kBAAoB,6BACvBA,EAAG,iBAAoB,mBACvBA,EAAG,mBAAoB,oCACvBA,EAAG,2BAA4B,gBAE/BA,EAAG,WAAY,gBACfA,EAAG,iBAAkB,0BACrBA,EAAG,gBAAiB,qBAEpBQ,GACE,IAAK,IAAK,KAAM,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9C,SAASM,GACVd,EAAG,eAAiBc,EAAYC,QAAQ,UAAU,IAAK,gBAAkBD,EAAc,OAGzFd,EAAG,UAAW,gBAEdA,EAAG,eAAgB,2BArErB","file":"../../../mode/powershell/test.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function() {\n  var mode = CodeMirror.getMode({indentUnit: 2}, \"powershell\");\n  function MT(name) { test.mode(name, mode, Array.prototype.slice.call(arguments, 1)); }\n\n  function forEach(arr, f) { for (var i = 0; i < arr.length; i++) f(arr[i], i) }\n\n  MT('comment', '[number 1][comment # A]');\n  MT('comment_multiline', '[number 1][comment <#]',\n    '[comment ABC]',\n  '[comment #>][number 2]');\n\n  forEach([\n    '0', '1234',\n    '12kb', '12mb', '12Gb', '12Tb', '12PB', '12L', '12D', '12lkb', '12dtb',\n    '1.234', '1.234e56', '1.', '1.e2', '.2', '.2e34',\n    '1.2MB', '1.kb', '.1dTB', '1.e1gb', '.2', '.2e34',\n    '0x1', '0xabcdef', '0x3tb', '0xelmb'\n  ], function(number) {\n    MT(\"number_\" + number, \"[number \" + number + \"]\");\n  });\n\n  MT('string_literal_escaping', \"[string 'a''']\");\n  MT('string_literal_variable', \"[string 'a $x']\");\n  MT('string_escaping_1', '[string \"a `\"\"]');\n  MT('string_escaping_2', '[string \"a \"\"\"]');\n  MT('string_variable_escaping', '[string \"a `$x\"]');\n  MT('string_variable', '[string \"a ][variable-2 $x][string  b\"]');\n  MT('string_variable_spaces', '[string \"a ][variable-2 ${x y}][string  b\"]');\n  MT('string_expression', '[string \"a ][punctuation $(][variable-2 $x][operator +][number 3][punctuation )][string  b\"]');\n  MT('string_expression_nested', '[string \"A][punctuation $(][string \"a][punctuation $(][string \"w\"][punctuation )][string b\"][punctuation )][string B\"]');\n\n  MT('string_heredoc', '[string @\"]',\n    '[string abc]',\n  '[string \"@]');\n  MT('string_heredoc_quotes', '[string @\"]',\n    '[string abc \"\\']',\n  '[string \"@]');\n  MT('string_heredoc_variable', '[string @\"]',\n    '[string a ][variable-2 $x][string  b]',\n  '[string \"@]');\n  MT('string_heredoc_nested_string', '[string @\"]',\n    '[string a][punctuation $(][string \"w\"][punctuation )][string b]',\n  '[string \"@]');\n  MT('string_heredoc_literal_quotes', \"[string @']\",\n    '[string abc \"\\']',\n  \"[string '@]\");\n\n  MT('array', \"[punctuation @(][string 'a'][punctuation ,][string 'b'][punctuation )]\");\n  MT('hash', \"[punctuation @{][string 'key'][operator :][string 'value'][punctuation }]\");\n\n  MT('variable', \"[variable-2 $test]\");\n  MT('variable_global',  \"[variable-2 $global:test]\");\n  MT('variable_spaces',  \"[variable-2 ${test test}]\");\n  MT('operator_splat',   \"[variable-2 @x]\");\n  MT('variable_builtin', \"[builtin $ErrorActionPreference]\");\n  MT('variable_builtin_symbols', \"[builtin $$]\");\n\n  MT('operator', \"[operator +]\");\n  MT('operator_unary', \"[operator +][number 3]\");\n  MT('operator_long', \"[operator -match]\");\n\n  forEach([\n    '(', ')', '[[', ']]', '{', '}', ',', '`', ';', '.'\n  ], function(punctuation) {\n    MT(\"punctuation_\" + punctuation.replace(/^[\\[\\]]/,''), \"[punctuation \" + punctuation + \"]\");\n  });\n\n  MT('keyword', \"[keyword if]\");\n\n  MT('call_builtin', \"[builtin Get-ChildItem]\");\n})();\n"]}