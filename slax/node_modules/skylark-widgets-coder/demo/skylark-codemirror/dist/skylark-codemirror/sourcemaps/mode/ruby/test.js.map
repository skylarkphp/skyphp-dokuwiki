{"version":3,"sources":["mode/ruby/test.js"],"names":["mode","CodeMirror","getMode","indentUnit","MT","name","test","Array","prototype","slice","call","arguments"],"mappings":";;;;;;;CAGA,WACE,IAAIA,EAAOC,WAAWC,SAASC,WAAY,GAAI,QAC/C,SAASC,EAAGC,GAAQC,KAAKN,KAAKK,EAAML,EAAMO,MAAMC,UAAUC,MAAMC,KAAKC,UAAW,IAEhFP,EAAG,wBACA,+CAEHA,EAAG,mCACA,0CAEHA,EAAG,iBACA,gLAEHA,EAAG,mBACA,wBACA,8CACA,mBACA,iBACA,iBAlBL","file":"../../../mode/ruby/test.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function() {\n  var mode = CodeMirror.getMode({indentUnit: 2}, \"ruby\");\n  function MT(name) { test.mode(name, mode, Array.prototype.slice.call(arguments, 1)); }\n\n  MT(\"divide_equal_operator\",\n     \"[variable bar] [operator /=] [variable foo]\");\n\n  MT(\"divide_equal_operator_no_spacing\",\n     \"[variable foo][operator /=][number 42]\");\n\n  MT(\"complex_regexp\",\n     \"[keyword if] [variable cr] [operator =~] [string-2 /(?: \\\\( #{][tag RE_NOT][string-2 }\\\\( | #{][tag RE_NOT_PAR_OR][string-2 }* #{][tag RE_OPA_OR][string-2 } )/][variable x]\")\n\n  MT(\"indented_heredoc\",\n     \"[keyword def] [def x]\",\n     \"  [variable y] [operator =] [string <<-FOO]\",\n     \"[string     bar]\",\n     \"[string   FOO]\",\n     \"[keyword end]\")\n})();\n"]}