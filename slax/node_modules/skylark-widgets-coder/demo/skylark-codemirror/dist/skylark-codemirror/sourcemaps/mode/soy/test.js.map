{"version":3,"sources":["mode/soy/test.js"],"names":["mode","CodeMirror","getMode","indentUnit","MT","name","test","Array","prototype","slice","call","arguments"],"mappings":";;;;;;;CAGA,WACE,IAAIA,EAAOC,WAAWC,SAASC,WAAY,GAAI,OAC/C,SAASC,EAAGC,GAAOC,KAAKN,KAAKK,EAAML,EAAMO,MAAMC,UAAUC,MAAMC,KAAKC,UAAW,IAG/EP,EAAG,gBACA,yEACA,yDACA,mDAEHA,EAAG,WACA,6CACA,6DACA,2CACA,sDACA,4CACA,wBACA,IAEHA,EAAG,gBACA,mEACA,6JAIHA,EAAG,iBACA,wDAEHA,EAAG,gCACA,oHAGHA,EAAG,iBACA,0DACA,0DACA,yDACA,yDACA,yDACA,yDACA,yDACA,0DACA,0DACA,yDACA,yDACA,gEACA,8EAEHA,EAAG,iBACA,sCACA,uCACA,kCACA,iCACA,oCACA,qCACA,sCACA,uCACA,qCACA,yCACA,yCACA,sCACA,6CAEHA,EAAG,kBACA,iIAIC,uDACA,kEAEJA,EAAG,gBACA,sCAEHA,EAAG,mBACA,0CACA,wDACA,0CACA,wBACA,GACA,0CACA,gDACA,wBACA,IAEHA,EAAG,mBACA,yDACA,QACA,kBACA,IAEHA,EAAG,2BACA,4CACA,+DACA,qDACA,UACA,oBACA,wBACA,IAEHA,EAAG,sBACA,gDACA,6CACA,8DACA,+DACA,iFACA,IAEHA,EAAG,qBACA,wDACA,iFACA,4CACA,uBACA,gDACA,2CAEHA,EAAG,8BACA,iFACA,cACA,sBACA,YACA,uBACA,IAEHA,EAAG,mBACA,6EACA,4CACA,mDACA,2FACA,2DACA,2BACA,wBACA,6CACA,wBACA,IAEHA,EAAG,mDACA,yEACA,kDACA,qEACA,IAEHA,EAAG,gCACA,4CACA,6DACA,qDACA,UACA,oBACA,wBACA,IAEHA,EAAG,uBACA,wDACA,IAEHA,EAAG,mBACA,mEAEHA,EAAG,2BACA,iBACA,mBA/JL","file":"../../../mode/soy/test.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function() {\n  var mode = CodeMirror.getMode({indentUnit: 2}, \"soy\");\n  function MT(name) {test.mode(name, mode, Array.prototype.slice.call(arguments, 1));}\n\n  // Test of small keywords and words containing them.\n  MT('keywords-test',\n     '[keyword {] [keyword as] worrying [keyword and] notorious [keyword as]',\n     '    the Fandor[operator -]alias assassin, [keyword or]',\n     '    Corcand cannot fit [keyword in] [keyword }]');\n\n  MT('let-test',\n     '[keyword {template] [def .name][keyword }]',\n     '  [keyword {let] [def $name]: [string \"world\"][keyword /}]',\n     '  [tag&bracket <][tag h1][tag&bracket >]',\n     '    Hello, [keyword {][variable-2 $name][keyword }]',\n     '  [tag&bracket </][tag h1][tag&bracket >]',\n     '[keyword {/template}]',\n     '');\n\n  MT('function-test',\n     '[keyword {] [callee&variable css]([string \"MyClass\"])[keyword }]',\n     '[tag&bracket <][tag input] [attribute value]=[string \"]' +\n     '[keyword {] [callee&variable index]([variable-2&error $list])[keyword }]' +\n        '[string \"][tag&bracket />]');\n\n  MT('namespace-test',\n     '[keyword {namespace] [variable namespace][keyword }]')\n\n  MT('namespace-with-attribute-test',\n     '[keyword {namespace] [variable my.namespace.templates] ' +\n         '[attribute requirecss]=[string \"my.namespace\"][keyword }]');\n\n  MT('operators-test',\n     '[keyword {] [atom 1] [operator ==] [atom 1] [keyword }]',\n     '[keyword {] [atom 1] [operator !=] [atom 2] [keyword }]',\n     '[keyword {] [atom 2] [operator +] [atom 2] [keyword }]',\n     '[keyword {] [atom 2] [operator -] [atom 2] [keyword }]',\n     '[keyword {] [atom 2] [operator *] [atom 2] [keyword }]',\n     '[keyword {] [atom 2] [operator /] [atom 2] [keyword }]',\n     '[keyword {] [atom 2] [operator %] [atom 2] [keyword }]',\n     '[keyword {] [atom 2] [operator <=] [atom 2] [keyword }]',\n     '[keyword {] [atom 2] [operator >=] [atom 2] [keyword }]',\n     '[keyword {] [atom 3] [operator >] [atom 2] [keyword }]',\n     '[keyword {] [atom 2] [operator >] [atom 3] [keyword }]',\n     '[keyword {] [atom null] [operator ?:] [string \"\"] [keyword }]',\n     '[keyword {] [variable-2&error $variable] [operator |] safeHtml [keyword }]')\n\n  MT('primitive-test',\n     '[keyword {] [atom true] [keyword }]',\n     '[keyword {] [atom false] [keyword }]',\n     '[keyword {] truethy [keyword }]',\n     '[keyword {] falsey [keyword }]',\n     '[keyword {] [atom 42] [keyword }]',\n     '[keyword {] [atom .42] [keyword }]',\n     '[keyword {] [atom 0.42] [keyword }]',\n     '[keyword {] [atom -0.42] [keyword }]',\n     '[keyword {] [atom -.2] [keyword }]',\n     '[keyword {] [atom 6.03e23] [keyword }]',\n     '[keyword {] [atom -0.03e0] [keyword }]',\n     '[keyword {] [atom 0x1F] [keyword }]',\n     '[keyword {] [atom 0x1F00BBEA] [keyword }]');\n\n  MT('param-type-test',\n     '[keyword {@param] [def a]: ' +\n         '[type list]<[[[type a]: [type int], ' +\n         '[type b]: [type map]<[type string], ' +\n         '[type bool]>]]>][keyword }]',\n      '[keyword {@param] [def unknown]: [type ?][keyword }]',\n      '[keyword {@param] [def list]: [type list]<[type ?]>[keyword }]');\n\n  MT('undefined-var',\n     '[keyword {][variable-2&error $var]');\n\n  MT('param-scope-test',\n     '[keyword {template] [def .a][keyword }]',\n     '  [keyword {@param] [def x]: [type string][keyword }]',\n     '  [keyword {][variable-2 $x][keyword }]',\n     '[keyword {/template}]',\n     '',\n     '[keyword {template] [def .b][keyword }]',\n     '  [keyword {][variable-2&error $x][keyword }]',\n     '[keyword {/template}]',\n     '');\n\n  MT('if-variable-test',\n     '[keyword {if] [variable-2&error $showThing][keyword }]',\n     '  Yo!',\n     '[keyword {/if}]',\n     '');\n\n  MT('defined-if-variable-test',\n     '[keyword {template] [def .foo][keyword }]',\n     '  [keyword {@param?] [def showThing]: [type bool][keyword }]',\n     '  [keyword {if] [variable-2 $showThing][keyword }]',\n     '    Yo!',\n     '  [keyword {/if}]',\n     '[keyword {/template}]',\n     '');\n\n  MT('template-calls-test',\n     '[keyword {call] [variable-2 .foo][keyword /}]',\n     '[keyword {call] [variable foo][keyword /}]',\n     '[keyword {call] [variable foo][keyword }] [keyword {/call}]',\n     '[keyword {call] [variable first1.second.third_3][keyword /}]',\n     '[keyword {call] [variable first1.second.third_3] [keyword }] [keyword {/call}]',\n     '');\n\n  MT('foreach-scope-test',\n     '[keyword {@param] [def bar]: [type string][keyword }]',\n     '[keyword {foreach] [def $foo] [keyword in] [variable-2&error $foos][keyword }]',\n     '  [keyword {][variable-2 $foo][keyword }]',\n     '[keyword {/foreach}]',\n     '[keyword {][variable-2&error $foo][keyword }]',\n     '[keyword {][variable-2 $bar][keyword }]');\n\n  MT('foreach-ifempty-indent-test',\n     '[keyword {foreach] [def $foo] [keyword in] [variable-2&error $foos][keyword }]',\n     '  something',\n     '[keyword {ifempty}]',\n     '  nothing',\n     '[keyword {/foreach}]',\n     '');\n\n  MT('nested-kind-test',\n     '[keyword {template] [def .foo] [attribute kind]=[string \"html\"][keyword }]',\n     '  [tag&bracket <][tag div][tag&bracket >]',\n     '    [keyword {call] [variable-2 .bar][keyword }]',\n     '      [keyword {param] [property propertyName] [attribute kind]=[string \"js\"][keyword }]',\n     '        [keyword var] [def bar] [operator =] [number 5];',\n     '      [keyword {/param}]',\n     '    [keyword {/call}]',\n     '  [tag&bracket </][tag div][tag&bracket >]',\n     '[keyword {/template}]',\n     '');\n\n  MT('tag-starting-with-function-call-is-not-a-keyword',\n     '[keyword {][callee&variable index]([variable-2&error $foo])[keyword }]',\n     '[keyword {css] [string \"some-class\"][keyword }]',\n     '[keyword {][callee&variable css]([string \"some-class\"])[keyword }]',\n     '');\n\n  MT('allow-missing-colon-in-@param',\n     '[keyword {template] [def .foo][keyword }]',\n     '  [keyword {@param] [def showThing] [type bool][keyword }]',\n     '  [keyword {if] [variable-2 $showThing][keyword }]',\n     '    Yo!',\n     '  [keyword {/if}]',\n     '[keyword {/template}]',\n     '');\n\n  MT('single-quote-strings',\n     '[keyword {][string \"foo\"] [string \\'bar\\'][keyword }]',\n     '');\n\n  MT('literal-comments',\n     '[keyword {literal}]/* comment */ // comment[keyword {/literal}]');\n\n  MT('highlight-command-at-eol',\n     '[keyword {msg]',\n     '    [keyword }]');\n})();\n"]}