{"version":3,"sources":["mode/xml/xml.js"],"names":["define","CodeMirror","htmlConfig","autoSelfClosers","area","base","br","col","command","embed","frame","hr","img","input","keygen","link","meta","param","source","track","wbr","menuitem","implicitlyClosed","dd","li","optgroup","option","p","rp","rt","tbody","td","tfoot","th","tr","contextGrabbers","dt","address","article","aside","blockquote","dir","div","dl","fieldset","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","menu","nav","ol","pre","section","table","ul","thead","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","defineMode","editorConf","config_","type","setStyle","indentUnit","config","defaults","htmlMode","prop","inText","stream","state","chain","parser","tokenize","ch","next","eat","match","inBlock","eatWhile","doctype","depth","inTag","quote","closure","baseState","tagName","tagStart","test","eol","isInAttribute","stringStartCol","column","style","terminator","popContext","context","prev","maybePopContext","nextTagName","parentTagName","hasOwnProperty","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","startOfLine","this","indent","indented","noIndent","attrValueState","attrContinuedState","isInText","startState","baseIndent","token","sol","indentation","eatSpace","textAfter","fullLine","Pass","length","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","defineMIME","mimeModes","name"],"mappings":"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","file":"../../../mode/xml/xml.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\ndefine([\"../../CodeMirror\"], function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName;\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n"]}