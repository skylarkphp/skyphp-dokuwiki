{"version":3,"sources":["primitives/display/operations.js"],"names":["define","a","b","c","d","e","f","g","h","i","j","k","l","nextOpId","startOperation","cm","curOp","viewChanged","startHeight","doc","height","forceUpdate","updateInput","typing","changeObjs","cursorActivityHandlers","cursorActivityCalled","selectionChanged","updateMaxLine","scrollLeft","scrollTop","scrollToPos","focus","id","pushOperation","endOperation","op","finishOperation","group","ops","length","endOperation_R1","updatedDisplay","mustUpdate","updateDisplayIfNeeded","update","endOperation_R2","endOperation_W2","endOperation_finish","endOperations","display","maybeClipScrollbars","findMaxLine","from","line","viewFrom","to","viewTo","maxLineChanged","options","lineWrapping","DisplayUpdate","top","ensure","updateHeightsInViewport","barMeasure","measureForScrollbars","adjustWidthTo","measureChar","maxLine","text","left","sizerWidth","scrollWidth","Math","max","scroller","clientWidth","sizer","offsetLeft","scrollGap","barWidth","maxScrollLeft","displayWidth","preparedSelection","input","prepareSelection","style","minWidth","setScrollLeft","min","takeFocus","activeElt","showSelection","updateScrollbars","setDocumentHeight","restartBlink","state","focused","reset","ensureFocus","postUpdateDisplay","wheelStartX","wheelStartY","setScrollTop","forceScroll","rect","scrollPosIntoView","clipPos","margin","maybeScrollWindow","hidden","maybeHiddenMarkers","unhidden","maybeUnhiddenMarkers","lines","signal","wrapper","offsetHeight","finish","runInOp","operation","apply","arguments","methodOp","this","docMethodOp"],"mappings":"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","file":"../../../primitives/display/operations.js","sourcesContent":["define([\n    '../line/pos',\n    '../line/spans',\n    '../measurement/position_measurement',\n    '../util/event',\n    '../util/dom',\n    '../util/operation_group',\n    './focus',\n    './scrollbars',\n    './selection',\n    './scrolling',\n    './update_display',\n    './update_lines'\n], function (a, b, c, d, e, f, g, h, i, j, k, l) {\n    'use strict';\n    let nextOpId = 0;\n    function startOperation(cm) {\n        cm.curOp = {\n            cm: cm,\n            viewChanged: false,\n            startHeight: cm.doc.height,\n            forceUpdate: false,\n            updateInput: 0,\n            typing: false,\n            changeObjs: null,\n            cursorActivityHandlers: null,\n            cursorActivityCalled: 0,\n            selectionChanged: false,\n            updateMaxLine: false,\n            scrollLeft: null,\n            scrollTop: null,\n            scrollToPos: null,\n            focus: false,\n            id: ++nextOpId\n        };\n        f.pushOperation(cm.curOp);\n    }\n    function endOperation(cm) {\n        let op = cm.curOp;\n        if (op)\n            f.finishOperation(op, group => {\n                for (let i = 0; i < group.ops.length; i++)\n                    group.ops[i].cm.curOp = null;\n                endOperations(group);\n            });\n    }\n    function endOperations(group) {\n        let ops = group.ops;\n        for (let i = 0; i < ops.length; i++)\n            endOperation_R1(ops[i]);\n        for (let i = 0; i < ops.length; i++)\n            endOperation_W1(ops[i]);\n        for (let i = 0; i < ops.length; i++)\n            endOperation_R2(ops[i]);\n        for (let i = 0; i < ops.length; i++)\n            endOperation_W2(ops[i]);\n        for (let i = 0; i < ops.length; i++)\n            endOperation_finish(ops[i]);\n    }\n    function endOperation_R1(op) {\n        let cm = op.cm, display = cm.display;\n        k.maybeClipScrollbars(cm);\n        if (op.updateMaxLine)\n            b.findMaxLine(cm);\n        op.mustUpdate = op.viewChanged || op.forceUpdate || op.scrollTop != null || op.scrollToPos && (op.scrollToPos.from.line < display.viewFrom || op.scrollToPos.to.line >= display.viewTo) || display.maxLineChanged && cm.options.lineWrapping;\n        op.update = op.mustUpdate && new k.DisplayUpdate(cm, op.mustUpdate && {\n            top: op.scrollTop,\n            ensure: op.scrollToPos\n        }, op.forceUpdate);\n    }\n    function endOperation_W1(op) {\n        op.updatedDisplay = op.mustUpdate && k.updateDisplayIfNeeded(op.cm, op.update);\n    }\n    function endOperation_R2(op) {\n        let cm = op.cm, display = cm.display;\n        if (op.updatedDisplay)\n            l.updateHeightsInViewport(cm);\n        op.barMeasure = h.measureForScrollbars(cm);\n        if (display.maxLineChanged && !cm.options.lineWrapping) {\n            op.adjustWidthTo = c.measureChar(cm, display.maxLine, display.maxLine.text.length).left + 3;\n            cm.display.sizerWidth = op.adjustWidthTo;\n            op.barMeasure.scrollWidth = Math.max(display.scroller.clientWidth, display.sizer.offsetLeft + op.adjustWidthTo + c.scrollGap(cm) + cm.display.barWidth);\n            op.maxScrollLeft = Math.max(0, display.sizer.offsetLeft + op.adjustWidthTo - c.displayWidth(cm));\n        }\n        if (op.updatedDisplay || op.selectionChanged)\n            op.preparedSelection = display.input.prepareSelection();\n    }\n    function endOperation_W2(op) {\n        let cm = op.cm;\n        if (op.adjustWidthTo != null) {\n            cm.display.sizer.style.minWidth = op.adjustWidthTo + 'px';\n            if (op.maxScrollLeft < cm.doc.scrollLeft)\n                j.setScrollLeft(cm, Math.min(cm.display.scroller.scrollLeft, op.maxScrollLeft), true);\n            cm.display.maxLineChanged = false;\n        }\n        let takeFocus = op.focus && op.focus == e.activeElt();\n        if (op.preparedSelection)\n            cm.display.input.showSelection(op.preparedSelection, takeFocus);\n        if (op.updatedDisplay || op.startHeight != cm.doc.height)\n            h.updateScrollbars(cm, op.barMeasure);\n        if (op.updatedDisplay)\n            k.setDocumentHeight(cm, op.barMeasure);\n        if (op.selectionChanged)\n            i.restartBlink(cm);\n        if (cm.state.focused && op.updateInput)\n            cm.display.input.reset(op.typing);\n        if (takeFocus)\n            g.ensureFocus(op.cm);\n    }\n    function endOperation_finish(op) {\n        let cm = op.cm, display = cm.display, doc = cm.doc;\n        if (op.updatedDisplay)\n            k.postUpdateDisplay(cm, op.update);\n        if (display.wheelStartX != null && (op.scrollTop != null || op.scrollLeft != null || op.scrollToPos))\n            display.wheelStartX = display.wheelStartY = null;\n        if (op.scrollTop != null)\n            j.setScrollTop(cm, op.scrollTop, op.forceScroll);\n        if (op.scrollLeft != null)\n            j.setScrollLeft(cm, op.scrollLeft, true, true);\n        if (op.scrollToPos) {\n            let rect = j.scrollPosIntoView(cm, a.clipPos(doc, op.scrollToPos.from), a.clipPos(doc, op.scrollToPos.to), op.scrollToPos.margin);\n            j.maybeScrollWindow(cm, rect);\n        }\n        let hidden = op.maybeHiddenMarkers, unhidden = op.maybeUnhiddenMarkers;\n        if (hidden)\n            for (let i = 0; i < hidden.length; ++i)\n                if (!hidden[i].lines.length)\n                    d.signal(hidden[i], 'hide');\n        if (unhidden)\n            for (let i = 0; i < unhidden.length; ++i)\n                if (unhidden[i].lines.length)\n                    d.signal(unhidden[i], 'unhide');\n        if (display.wrapper.offsetHeight)\n            doc.scrollTop = cm.display.scroller.scrollTop;\n        if (op.changeObjs)\n            d.signal(cm, 'changes', cm, op.changeObjs);\n        if (op.update)\n            op.update.finish();\n    }\n    function runInOp(cm, f) {\n        if (cm.curOp)\n            return f();\n        startOperation(cm);\n        try {\n            return f();\n        } finally {\n            endOperation(cm);\n        }\n    }\n    function operation(cm, f) {\n        return function () {\n            if (cm.curOp)\n                return f.apply(cm, arguments);\n            startOperation(cm);\n            try {\n                return f.apply(cm, arguments);\n            } finally {\n                endOperation(cm);\n            }\n        };\n    }\n    function methodOp(f) {\n        return function () {\n            if (this.curOp)\n                return f.apply(this, arguments);\n            startOperation(this);\n            try {\n                return f.apply(this, arguments);\n            } finally {\n                endOperation(this);\n            }\n        };\n    }\n    function docMethodOp(f) {\n        return function () {\n            let cm = this.cm;\n            if (!cm || cm.curOp)\n                return f.apply(this, arguments);\n            startOperation(cm);\n            try {\n                return f.apply(this, arguments);\n            } finally {\n                endOperation(cm);\n            }\n        };\n    }\n    return {\n        startOperation: startOperation,\n        endOperation: endOperation,\n        runInOp: runInOp,\n        operation: operation,\n        methodOp: methodOp,\n        docMethodOp: docMethodOp\n    };\n});"]}