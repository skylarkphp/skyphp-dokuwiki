{"version":3,"sources":["primitives/display/scroll_events.js"],"names":["define","a","b","c","d","wheelSamples","wheelPixelsPerUnit","wheelEventDelta","e","dx","wheelDeltaX","dy","wheelDeltaY","detail","axis","HORIZONTAL_AXIS","VERTICAL_AXIS","wheelDelta","x","y","ie","gecko","chrome","safari","wheelEventPixels","delta","onScrollWheel","cm","display","scroll","scroller","canScrollX","scrollWidth","clientWidth","canScrollY","scrollHeight","clientHeight","mac","webkit","outer","cur","target","view","parentNode","i","length","node","currentWheelTarget","presto","updateScrollTop","Math","max","scrollTop","setScrollLeft","scrollLeft","e_preventDefault","wheelStartX","pixels","top","doc","bot","wrapper","min","height","updateDisplaySimple","bottom","wheelStartY","wheelDX","wheelDY","setTimeout","movedX","movedY","sample"],"mappings":"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","file":"../../../primitives/display/scroll_events.js","sourcesContent":["define([\n    '../util/browser',\n    '../util/event',\n    './update_display',\n    './scrolling'\n], function (a, b, c, d) {\n    'use strict';\n    let wheelSamples = 0, wheelPixelsPerUnit = null;\n    if (a.ie)\n        wheelPixelsPerUnit = -0.53;\n    else if (a.gecko)\n        wheelPixelsPerUnit = 15;\n    else if (a.chrome)\n        wheelPixelsPerUnit = -0.7;\n    else if (a.safari)\n        wheelPixelsPerUnit = -1 / 3;\n    function wheelEventDelta(e) {\n        let dx = e.wheelDeltaX, dy = e.wheelDeltaY;\n        if (dx == null && e.detail && e.axis == e.HORIZONTAL_AXIS)\n            dx = e.detail;\n        if (dy == null && e.detail && e.axis == e.VERTICAL_AXIS)\n            dy = e.detail;\n        else if (dy == null)\n            dy = e.wheelDelta;\n        return {\n            x: dx,\n            y: dy\n        };\n    }\n    function wheelEventPixels(e) {\n        let delta = wheelEventDelta(e);\n        delta.x *= wheelPixelsPerUnit;\n        delta.y *= wheelPixelsPerUnit;\n        return delta;\n    }\n    function onScrollWheel(cm, e) {\n        let delta = wheelEventDelta(e), dx = delta.x, dy = delta.y;\n        let display = cm.display, scroll = display.scroller;\n        let canScrollX = scroll.scrollWidth > scroll.clientWidth;\n        let canScrollY = scroll.scrollHeight > scroll.clientHeight;\n        if (!(dx && canScrollX || dy && canScrollY))\n            return;\n        if (dy && a.mac && a.webkit) {\n            outer:\n                for (let cur = e.target, view = display.view; cur != scroll; cur = cur.parentNode) {\n                    for (let i = 0; i < view.length; i++) {\n                        if (view[i].node == cur) {\n                            cm.display.currentWheelTarget = cur;\n                            break outer;\n                        }\n                    }\n                }\n        }\n        if (dx && !a.gecko && !a.presto && wheelPixelsPerUnit != null) {\n            if (dy && canScrollY)\n                d.updateScrollTop(cm, Math.max(0, scroll.scrollTop + dy * wheelPixelsPerUnit));\n            d.setScrollLeft(cm, Math.max(0, scroll.scrollLeft + dx * wheelPixelsPerUnit));\n            if (!dy || dy && canScrollY)\n                b.e_preventDefault(e);\n            display.wheelStartX = null;\n            return;\n        }\n        if (dy && wheelPixelsPerUnit != null) {\n            let pixels = dy * wheelPixelsPerUnit;\n            let top = cm.doc.scrollTop, bot = top + display.wrapper.clientHeight;\n            if (pixels < 0)\n                top = Math.max(0, top + pixels - 50);\n            else\n                bot = Math.min(cm.doc.height, bot + pixels + 50);\n            c.updateDisplaySimple(cm, {\n                top: top,\n                bottom: bot\n            });\n        }\n        if (wheelSamples < 20) {\n            if (display.wheelStartX == null) {\n                display.wheelStartX = scroll.scrollLeft;\n                display.wheelStartY = scroll.scrollTop;\n                display.wheelDX = dx;\n                display.wheelDY = dy;\n                setTimeout(() => {\n                    if (display.wheelStartX == null)\n                        return;\n                    let movedX = scroll.scrollLeft - display.wheelStartX;\n                    let movedY = scroll.scrollTop - display.wheelStartY;\n                    let sample = movedY && display.wheelDY && movedY / display.wheelDY || movedX && display.wheelDX && movedX / display.wheelDX;\n                    display.wheelStartX = display.wheelStartY = null;\n                    if (!sample)\n                        return;\n                    wheelPixelsPerUnit = (wheelPixelsPerUnit * wheelSamples + sample) / (wheelSamples + 1);\n                    ++wheelSamples;\n                }, 200);\n            } else {\n                display.wheelDX += dx;\n                display.wheelDY += dy;\n            }\n        }\n    }\n    return {\n        wheelEventPixels: wheelEventPixels,\n        onScrollWheel: onScrollWheel\n    };\n});"]}