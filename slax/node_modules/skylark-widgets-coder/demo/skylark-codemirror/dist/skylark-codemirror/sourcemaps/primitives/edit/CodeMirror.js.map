{"version":3,"sources":["primitives/edit/CodeMirror.js"],"names":["define","m_display","focuses","gutters","line_numbers","operations","scrollbars","scroll_events","scrolling","line_pos","position_measurement","widgets","Doc","document_data","selection","selection_updates","browser","events","misc","drop_events","global_events","key_events","mouse_events","utils","m_options","CodeMirror","place","options","this","copyObj","defaults","setGuttersForLineNumbers","doc","value","mode","lineSeparator","direction","modeOption","input","inputStyles","inputStyle","display","Display","wrapper","updateGutters","themeChanged","lineWrapping","className","initScrollbars","state","keyMaps","overlays","modeGen","overwrite","delayingBlurEvent","focused","suppressEdits","pasteIncoming","cutIncoming","selectingText","draggingText","highlight","Delayed","keySeq","specialChars","autofocus","mobile","focus","ie","ie_version","setTimeout","reset","cm","d","on","scroller","operation","onMouseDown","e","signalDOMEvent","pos","posFromMouse","clickInGutter","eventInWidget","e_preventDefault","word","findWordAt","extendSelection","anchor","head","onContextMenu","touchFinished","prevTouch","end","finishTouch","activeTouch","Date","farAway","touch","other","left","dx","dy","top","touches","length","radiusX","radiusY","isMouseLikeTouchEvent","ensurePolled","clearTimeout","now","start","moved","prev","pageX","pageY","range","coordsChar","Range","Pos","line","clipPos","setSelection","clientHeight","updateScrollTop","scrollTop","setScrollLeft","scrollLeft","signal","onScrollWheel","dragFunctions","enter","e_stop","over","onDragOver","onDragStart","drop","onDrop","leave","clearDragCursor","inp","getField","onKeyUp","call","onKeyDown","onKeyPress","onFocus","onBlur","registerEventHandlers","ensureGlobalHandlers","startOperation","curOp","forceUpdate","attachDoc","hasFocus","bind","opt","optionHandlers","hasOwnProperty","Init","maybeUpdateLineNumberWidth","finishInit","i","initHooks","endOperation","webkit","getComputedStyle","lineDiv","textRendering","style","defineInitHook","f","push"],"mappings":";;;;;;;AAAAA,QACI,qBACA,mBACA,qBACA,0BACA,wBACA,wBACA,2BACA,uBACA,cACA,sCACA,yBACA,eACA,yBACA,qBACA,6BACA,kBACA,gBACA,eACA,gBACA,kBACA,eACA,iBACA,UACA,aACD,SAAUC,EAAWC,EAASC,EAASC,EAAcC,EAAYC,EAAYC,EAAeC,EAAWC,EAAUC,EAAsBC,EAASC,EAAKC,EAAeC,EAAWC,EAAmBC,EAASC,EAAQC,EAAMC,EAAaC,EAAeC,EAAYC,EAAcC,EAAOC,GACrR,aACA,SAASC,EAAWC,EAAOC,GACvB,KAAMC,gBAAgBH,GAClB,OAAO,IAAIA,EAAWC,EAAOC,GACjCC,KAAKD,QAAUA,EAAUA,EAAUT,EAAKW,QAAQF,MAChDT,EAAKW,QAAQL,EAAUM,SAAUH,GAAS,GAC1CxB,EAAQ4B,yBAAyBJ,GACjC,IAAIK,EAAML,EAAQM,MACA,iBAAPD,EACPA,EAAM,IAAIpB,EAAIoB,EAAKL,EAAQO,KAAM,KAAMP,EAAQQ,cAAeR,EAAQS,WACjET,EAAQO,OACbF,EAAIK,WAAaV,EAAQO,MAC7BN,KAAKI,IAAMA,EACX,IAAIM,EAAQ,IAAIb,EAAWc,YAAYZ,EAAQa,YAAYZ,MACvDa,EAAUb,KAAKa,QAAU,IAAIxC,EAAUyC,QAAQhB,EAAOM,EAAKM,GAC/DG,EAAQE,QAAQlB,WAAaG,KAC7BzB,EAAQyC,cAAchB,MACtBL,EAAMsB,aAAajB,MACfD,EAAQmB,eACRlB,KAAKa,QAAQE,QAAQI,WAAa,oBACtCzC,EAAW0C,eAAepB,MAC1BA,KAAKqB,OACDC,WACAC,YACAC,QAAS,EACTC,WAAW,EACXC,mBAAmB,EACnBC,SAAS,EACTC,eAAe,EACfC,eAAgB,EAChBC,aAAc,EACdC,eAAe,EACfC,cAAc,EACdC,UAAW,IAAI3C,EAAK4C,QACpBC,OAAQ,KACRC,aAAc,MAEdrC,EAAQsC,YAAcjD,EAAQkD,QAC9BzB,EAAQH,MAAM6B,QACdnD,EAAQoD,IAAMpD,EAAQqD,WAAa,IACnCC,WAAW,IAAM1C,KAAKa,QAAQH,MAAMiC,OAAM,GAAO,IA0BzD,SAA+BC,GAC3B,IAAIC,EAAID,EAAG/B,QACXxB,EAAOyD,GAAGD,EAAEE,SAAU,YAAatE,EAAWuE,UAAUJ,EAAIlD,EAAauD,cACrE7D,EAAQoD,IAAMpD,EAAQqD,WAAa,GACnCpD,EAAOyD,GAAGD,EAAEE,SAAU,WAAYtE,EAAWuE,UAAUJ,EAAIM,IACvD,GAAI7D,EAAO8D,eAAeP,EAAIM,GAC1B,OACJ,IAAIE,EAAMtE,EAAqBuE,aAAaT,EAAIM,GAChD,IAAKE,GAAO1D,EAAa4D,cAAcV,EAAIM,IAAMnE,EAAQwE,cAAcX,EAAG/B,QAASqC,GAC/E,OACJ7D,EAAOmE,iBAAiBN,GACxB,IAAIO,EAAOb,EAAGc,WAAWN,GACzBjE,EAAkBwE,gBAAgBf,EAAGxC,IAAKqD,EAAKG,OAAQH,EAAKI,SAGhExE,EAAOyD,GAAGD,EAAEE,SAAU,WAAYG,GAAK7D,EAAO8D,eAAeP,EAAIM,IAAM7D,EAAOmE,iBAAiBN,IACnG7D,EAAOyD,GAAGD,EAAEE,SAAU,cAAeG,GAAKxD,EAAaoE,cAAclB,EAAIM,IACzE,IAAIa,EAAeC,GAAcC,IAAK,GACtC,SAASC,IACDrB,EAAEsB,cACFJ,EAAgBrB,WAAW,IAAMG,EAAEsB,YAAc,KAAM,MACvDH,EAAYnB,EAAEsB,aACJF,KAAO,IAAIG,MAS7B,SAASC,EAAQC,EAAOC,GACpB,GAAkB,MAAdA,EAAMC,KACN,OAAO,EACX,IAAIC,EAAKF,EAAMC,KAAOF,EAAME,KAAME,EAAKH,EAAMI,IAAML,EAAMK,IACzD,OAAOF,EAAKA,EAAKC,EAAKA,EAAK,IAE/BrF,EAAOyD,GAAGD,EAAEE,SAAU,aAAcG,IAChC,IAAK7D,EAAO8D,eAAeP,EAAIM,KAbnC,SAA+BA,GAC3B,GAAwB,GAApBA,EAAE0B,QAAQC,OACV,OAAO,EACX,IAAIP,EAAQpB,EAAE0B,QAAQ,GACtB,OAAON,EAAMQ,SAAW,GAAKR,EAAMS,SAAW,EASRC,CAAsB9B,KAAOxD,EAAa4D,cAAcV,EAAIM,GAAI,CAClGL,EAAEnC,MAAMuE,eACRC,aAAanB,GACb,IAAIoB,GAAO,IAAIf,KACfvB,EAAEsB,aACEiB,MAAOD,EACPE,OAAO,EACPC,KAAMH,EAAMnB,EAAUC,KAAO,IAAMD,EAAY,MAE3B,GAApBd,EAAE0B,QAAQC,SACVhC,EAAEsB,YAAYK,KAAOtB,EAAE0B,QAAQ,GAAGW,MAClC1C,EAAEsB,YAAYQ,IAAMzB,EAAE0B,QAAQ,GAAGY,UAI7CnG,EAAOyD,GAAGD,EAAEE,SAAU,YAAa,KAC3BF,EAAEsB,cACFtB,EAAEsB,YAAYkB,OAAQ,KAE9BhG,EAAOyD,GAAGD,EAAEE,SAAU,WAAYG,IAC9B,IAAIoB,EAAQzB,EAAEsB,YACd,GAAIG,IAAUvF,EAAQwE,cAAcV,EAAGK,IAAoB,MAAdoB,EAAME,OAAiBF,EAAMe,OAAS,IAAIjB,KAASE,EAAMc,MAAQ,IAAK,CAC/G,IAAgDK,EAA5CrC,EAAMR,EAAG8C,WAAW7C,EAAEsB,YAAa,QAEnCsB,GADCnB,EAAMgB,MAAQjB,EAAQC,EAAOA,EAAMgB,MAC5B,IAAIpG,EAAUyG,MAAMvC,EAAKA,IAC3BkB,EAAMgB,KAAKA,MAAQjB,EAAQC,EAAOA,EAAMgB,KAAKA,MAC3C1C,EAAGc,WAAWN,GAEd,IAAIlE,EAAUyG,MAAM9G,EAAS+G,IAAIxC,EAAIyC,KAAM,GAAIhH,EAASiH,QAAQlD,EAAGxC,IAAKvB,EAAS+G,IAAIxC,EAAIyC,KAAO,EAAG,KAC/GjD,EAAGmD,aAAaN,EAAM7B,OAAQ6B,EAAM5B,MACpCjB,EAAGL,QACHlD,EAAOmE,iBAAiBN,GAE5BgB,MAEJ7E,EAAOyD,GAAGD,EAAEE,SAAU,cAAemB,GACrC7E,EAAOyD,GAAGD,EAAEE,SAAU,SAAU,KACxBF,EAAEE,SAASiD,eACXpH,EAAUqH,gBAAgBrD,EAAIC,EAAEE,SAASmD,WACzCtH,EAAUuH,cAAcvD,EAAIC,EAAEE,SAASqD,YAAY,GACnD/G,EAAOgH,OAAOzD,EAAI,SAAUA,MAGpCvD,EAAOyD,GAAGD,EAAEE,SAAU,aAAcG,GAAKvE,EAAc2H,cAAc1D,EAAIM,IACzE7D,EAAOyD,GAAGD,EAAEE,SAAU,iBAAkBG,GAAKvE,EAAc2H,cAAc1D,EAAIM,IAC7E7D,EAAOyD,GAAGD,EAAE9B,QAAS,SAAU,IAAM8B,EAAE9B,QAAQmF,UAAYrD,EAAE9B,QAAQqF,WAAa,GAClFvD,EAAE0D,eACEC,MAAOtD,IACE7D,EAAO8D,eAAeP,EAAIM,IAC3B7D,EAAOoH,OAAOvD,IAEtBwD,KAAMxD,IACG7D,EAAO8D,eAAeP,EAAIM,KAC3B3D,EAAYoH,WAAW/D,EAAIM,GAC3B7D,EAAOoH,OAAOvD,KAGtBkC,MAAOlC,GAAK3D,EAAYqH,YAAYhE,EAAIM,GACxC2D,KAAMpI,EAAWuE,UAAUJ,EAAIrD,EAAYuH,QAC3CC,MAAO7D,IACE7D,EAAO8D,eAAeP,EAAIM,IAC3B3D,EAAYyH,gBAAgBpE,KAIxC,IAAIqE,EAAMpE,EAAEnC,MAAMwG,WAClB7H,EAAOyD,GAAGmE,EAAK,QAAS/D,GAAKzD,EAAW0H,QAAQC,KAAKxE,EAAIM,IACzD7D,EAAOyD,GAAGmE,EAAK,UAAWxI,EAAWuE,UAAUJ,EAAInD,EAAW4H,YAC9DhI,EAAOyD,GAAGmE,EAAK,WAAYxI,EAAWuE,UAAUJ,EAAInD,EAAW6H,aAC/DjI,EAAOyD,GAAGmE,EAAK,QAAS/D,GAAK5E,EAAQiJ,QAAQ3E,EAAIM,IACjD7D,EAAOyD,GAAGmE,EAAK,OAAQ/D,GAAK5E,EAAQkJ,OAAO5E,EAAIM,IArI/CuE,CAAsBzH,MACtBR,EAAckI,uBACdjJ,EAAWkJ,eAAe3H,MAC1BA,KAAK4H,MAAMC,aAAc,EACzB5I,EAAc6I,UAAU9H,KAAMI,GAC1BL,EAAQsC,YAAcjD,EAAQkD,QAAUtC,KAAK+H,WAC7CrF,WAAWpD,EAAK0I,KAAK1J,EAAQiJ,QAASvH,MAAO,IAE7C1B,EAAQkJ,OAAOxH,MACnB,IAAK,IAAIiI,KAAOrI,EAAUsI,eAClBtI,EAAUsI,eAAeC,eAAeF,IACxCrI,EAAUsI,eAAeD,GAAKjI,KAAMD,EAAQkI,GAAMrI,EAAUwI,MACpE5J,EAAa6J,2BAA2BrI,MACpCD,EAAQuI,YACRvI,EAAQuI,WAAWtI,MACvB,IAAK,IAAIuI,EAAI,EAAGA,EAAIC,EAAU3D,SAAU0D,EACpCC,EAAUD,GAAGvI,MACjBvB,EAAWgK,aAAazI,MACpBZ,EAAQsJ,QAAU3I,EAAQmB,cAAmE,sBAAnDyH,iBAAiB9H,EAAQ+H,SAASC,gBAC5EhI,EAAQ+H,QAAQE,MAAMD,cAAgB,QAG9ChJ,EAAWK,SAAWN,EAAUM,SAChCL,EAAWqI,eAAiBtI,EAAUsI,eAgHtC,IAAIM,KAGJ,OAFA3I,EAAWkJ,eAAiBC,CAAAA,GAAKR,EAAUS,KAAKD,IAEzCnJ","file":"../../../primitives/edit/CodeMirror.js","sourcesContent":["define([\n    '../display/Display',\n    '../display/focus',\n    '../display/gutters',\n    '../display/line_numbers',\n    '../display/operations',\n    '../display/scrollbars',\n    '../display/scroll_events',\n    '../display/scrolling',\n    '../line/pos',\n    '../measurement/position_measurement',\n    '../measurement/widgets',\n    '../model/Doc',\n    '../model/document_data',\n    '../model/selection',\n    '../model/selection_updates',\n    '../util/browser',\n    '../util/event',\n    '../util/misc',\n    './drop_events',\n    './global_events',\n    './key_events',\n    './mouse_events',\n    './utils',\n    './options'\n], function (m_display, focuses, gutters, line_numbers, operations, scrollbars, scroll_events, scrolling, line_pos, position_measurement, widgets, Doc, document_data, selection, selection_updates, browser, events, misc, drop_events, global_events, key_events, mouse_events, utils, m_options) {\n    'use strict';\n    function CodeMirror(place, options) {\n        if (!(this instanceof CodeMirror))\n            return new CodeMirror(place, options);\n        this.options = options = options ? misc.copyObj(options) : {};\n        misc.copyObj(m_options.defaults, options, false);\n        gutters.setGuttersForLineNumbers(options);\n        let doc = options.value;\n        if (typeof doc == 'string')\n            doc = new Doc(doc, options.mode, null, options.lineSeparator, options.direction);\n        else if (options.mode)\n            doc.modeOption = options.mode;\n        this.doc = doc;\n        let input = new CodeMirror.inputStyles[options.inputStyle](this);\n        let display = this.display = new m_display.Display(place, doc, input);\n        display.wrapper.CodeMirror = this;\n        gutters.updateGutters(this);\n        utils.themeChanged(this);\n        if (options.lineWrapping)\n            this.display.wrapper.className += ' CodeMirror-wrap';\n        scrollbars.initScrollbars(this);\n        this.state = {\n            keyMaps: [],\n            overlays: [],\n            modeGen: 0,\n            overwrite: false,\n            delayingBlurEvent: false,\n            focused: false,\n            suppressEdits: false,\n            pasteIncoming: -1,\n            cutIncoming: -1,\n            selectingText: false,\n            draggingText: false,\n            highlight: new misc.Delayed(),\n            keySeq: null,\n            specialChars: null\n        };\n        if (options.autofocus && !browser.mobile)\n            display.input.focus();\n        if (browser.ie && browser.ie_version < 11)\n            setTimeout(() => this.display.input.reset(true), 20);\n        registerEventHandlers(this);\n        global_events.ensureGlobalHandlers();\n        operations.startOperation(this);\n        this.curOp.forceUpdate = true;\n        document_data.attachDoc(this, doc);\n        if (options.autofocus && !browser.mobile || this.hasFocus())\n            setTimeout(misc.bind(focuses.onFocus, this), 20);\n        else\n            focuses.onBlur(this);\n        for (let opt in m_options.optionHandlers)\n            if (m_options.optionHandlers.hasOwnProperty(opt))\n                m_options.optionHandlers[opt](this, options[opt], m_options.Init);\n        line_numbers.maybeUpdateLineNumberWidth(this);\n        if (options.finishInit)\n            options.finishInit(this);\n        for (let i = 0; i < initHooks.length; ++i)\n            initHooks[i](this);\n        operations.endOperation(this);\n        if (browser.webkit && options.lineWrapping && getComputedStyle(display.lineDiv).textRendering == 'optimizelegibility')\n            display.lineDiv.style.textRendering = 'auto';\n    }\n    \n    CodeMirror.defaults = m_options.defaults;\n    CodeMirror.optionHandlers = m_options.optionHandlers;\n\n    function registerEventHandlers(cm) {\n        let d = cm.display;\n        events.on(d.scroller, 'mousedown', operations.operation(cm, mouse_events.onMouseDown));\n        if (browser.ie && browser.ie_version < 11)\n            events.on(d.scroller, 'dblclick', operations.operation(cm, e => {\n                if (events.signalDOMEvent(cm, e))\n                    return;\n                let pos = position_measurement.posFromMouse(cm, e);\n                if (!pos || mouse_events.clickInGutter(cm, e) || widgets.eventInWidget(cm.display, e))\n                    return;\n                events.e_preventDefault(e);\n                let word = cm.findWordAt(pos);\n                selection_updates.extendSelection(cm.doc, word.anchor, word.head);\n            }));\n        else\n            events.on(d.scroller, 'dblclick', e => events.signalDOMEvent(cm, e) || events.e_preventDefault(e));\n        events.on(d.scroller, 'contextmenu', e => mouse_events.onContextMenu(cm, e));\n        let touchFinished, prevTouch = { end: 0 };\n        function finishTouch() {\n            if (d.activeTouch) {\n                touchFinished = setTimeout(() => d.activeTouch = null, 1000);\n                prevTouch = d.activeTouch;\n                prevTouch.end = +new Date();\n            }\n        }\n        function isMouseLikeTouchEvent(e) {\n            if (e.touches.length != 1)\n                return false;\n            let touch = e.touches[0];\n            return touch.radiusX <= 1 && touch.radiusY <= 1;\n        }\n        function farAway(touch, other) {\n            if (other.left == null)\n                return true;\n            let dx = other.left - touch.left, dy = other.top - touch.top;\n            return dx * dx + dy * dy > 20 * 20;\n        }\n        events.on(d.scroller, 'touchstart', e => {\n            if (!events.signalDOMEvent(cm, e) && !isMouseLikeTouchEvent(e) && !mouse_events.clickInGutter(cm, e)) {\n                d.input.ensurePolled();\n                clearTimeout(touchFinished);\n                let now = +new Date();\n                d.activeTouch = {\n                    start: now,\n                    moved: false,\n                    prev: now - prevTouch.end <= 300 ? prevTouch : null\n                };\n                if (e.touches.length == 1) {\n                    d.activeTouch.left = e.touches[0].pageX;\n                    d.activeTouch.top = e.touches[0].pageY;\n                }\n            }\n        });\n        events.on(d.scroller, 'touchmove', () => {\n            if (d.activeTouch)\n                d.activeTouch.moved = true;\n        });\n        events.on(d.scroller, 'touchend', e => {\n            let touch = d.activeTouch;\n            if (touch && !widgets.eventInWidget(d, e) && touch.left != null && !touch.moved && new Date() - touch.start < 300) {\n                let pos = cm.coordsChar(d.activeTouch, 'page'), range;\n                if (!touch.prev || farAway(touch, touch.prev))\n                    range = new selection.Range(pos, pos);\n                else if (!touch.prev.prev || farAway(touch, touch.prev.prev))\n                    range = cm.findWordAt(pos);\n                else\n                    range = new selection.Range(line_pos.Pos(pos.line, 0), line_pos.clipPos(cm.doc, line_pos.Pos(pos.line + 1, 0)));\n                cm.setSelection(range.anchor, range.head);\n                cm.focus();\n                events.e_preventDefault(e);\n            }\n            finishTouch();\n        });\n        events.on(d.scroller, 'touchcancel', finishTouch);\n        events.on(d.scroller, 'scroll', () => {\n            if (d.scroller.clientHeight) {\n                scrolling.updateScrollTop(cm, d.scroller.scrollTop);\n                scrolling.setScrollLeft(cm, d.scroller.scrollLeft, true);\n                events.signal(cm, 'scroll', cm);\n            }\n        });\n        events.on(d.scroller, 'mousewheel', e => scroll_events.onScrollWheel(cm, e));\n        events.on(d.scroller, 'DOMMouseScroll', e => scroll_events.onScrollWheel(cm, e));\n        events.on(d.wrapper, 'scroll', () => d.wrapper.scrollTop = d.wrapper.scrollLeft = 0);\n        d.dragFunctions = {\n            enter: e => {\n                if (!events.signalDOMEvent(cm, e))\n                    events.e_stop(e);\n            },\n            over: e => {\n                if (!events.signalDOMEvent(cm, e)) {\n                    drop_events.onDragOver(cm, e);\n                    events.e_stop(e);\n                }\n            },\n            start: e => drop_events.onDragStart(cm, e),\n            drop: operations.operation(cm, drop_events.onDrop),\n            leave: e => {\n                if (!events.signalDOMEvent(cm, e)) {\n                    drop_events.clearDragCursor(cm);\n                }\n            }\n        };\n        let inp = d.input.getField();\n        events.on(inp, 'keyup', e => key_events.onKeyUp.call(cm, e));\n        events.on(inp, 'keydown', operations.operation(cm, key_events.onKeyDown));\n        events.on(inp, 'keypress', operations.operation(cm, key_events.onKeyPress));\n        events.on(inp, 'focus', e => focuses.onFocus(cm, e));\n        events.on(inp, 'blur', e => focuses.onBlur(cm, e));\n    }\n    let initHooks = [];\n    CodeMirror.defineInitHook = f => initHooks.push(f);\n\n    return CodeMirror;\n});"]}