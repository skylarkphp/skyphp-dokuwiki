{"version":3,"sources":["primitives/edit/mouse_events.js"],"names":["define","focus","operations","update_lines","line_pos","utils_line","position_measurement","widgets","selection","selection_updates","browser","bidi","dom","events","n","o","p","q","r","DOUBLECLICK_DELAY","PastClick","[object Object]","time","pos","button","this","cmp","lastClick","lastDoubleClick","rangeForUnit","cm","unit","Range","findWordAt","Pos","line","clipPos","doc","result","from","to","gutterEvent","e","type","prevent","mX","mY","touches","clientX","clientY","Math","floor","display","gutters","getBoundingClientRect","right","e_preventDefault","lineBox","lineDiv","bottom","hasHandler","e_defaultPrevented","top","viewOffset","i","options","length","g","childNodes","lineAtHeight","gutter","signal","clickInGutter","onMouseDown","signalDOMEvent","activeTouch","input","supportsTouch","ensurePolled","shift","shiftKey","eventInWidget","webkit","scroller","draggable","setTimeout","posFromMouse","e_button","repeat","now","Date","compare","clickRepeat","window","state","selectingText","event","name","dispatchKey","addModifierNames","bound","commands","done","isReadOnly","suppressEdits","Pass","handleMappedButton","ie","bind","ensureFocus","curOp","activeElt","contained","behavior","option","getOption","value","rect","chromeOS","metaKey","altKey","extend","addNew","mac","ctrlKey","moveOnDrag","configureMouse","sel","dragDrop","dragAndDrop","contains","ranges","xRel","moved","dragEnd","operation","draggingText","off","wrapper","ownerDocument","mouseMove","dragStart","extendSelection","ie_version","body","e2","abs","copy","on","delayBlurEvent","leftButtonStartDrag","start","ourRange","ourIndex","startSel","primary","primIndex","range","extendRange","anchor","head","setSelection","normalizeSelection","concat","scroll","origin","empty","slice","replaceOneSelection","sel_mouse","Selection","lastPos","extendTo","tabSize","startCol","countColumn","getLine","text","ch","posCol","left","min","max","end","lastLine","leftPos","findColumn","push","scrollIntoView","oldRange","minPos","maxPos","anchorLine","sticky","order","getOrder","index","getBidiPartAt","part","leftSide","boundary","level","direction","headIndex","dir","usePart","bidiSimplify","editorSize","counter","Infinity","move","up","history","lastSelOrigin","buttons","curCount","cur","visible","visibleLines","outside","scrollTop","leftButtonSelect","leftButtonDown","e_target","captureRightClick","onContextMenu","contextMenuInGutter"],"mappings":"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","file":"../../../primitives/edit/mouse_events.js","sourcesContent":["define([\n    '../display/focus',\n    '../display/operations',\n    '../display/update_lines',\n    '../line/pos',\n    '../line/utils_line',\n    '../measurement/position_measurement',\n    '../measurement/widgets',\n    '../model/selection',\n    '../model/selection_updates',\n    '../util/browser',\n    '../util/bidi',\n    '../util/dom',\n    '../util/event',\n    '../util/feature_detection',\n    '../util/misc',\n    '../input/keymap',\n    './key_events',\n    './commands'\n], function (focus, operations, update_lines, line_pos, utils_line, position_measurement, widgets, selection, selection_updates, browser, bidi, dom, events, n, o, p, q, r) {\n    'use strict';\n    const DOUBLECLICK_DELAY = 400;\n    class PastClick {\n        constructor(time, pos, button) {\n            this.time = time;\n            this.pos = pos;\n            this.button = button;\n        }\n        compare(time, pos, button) {\n            return this.time + DOUBLECLICK_DELAY > time && line_pos.cmp(pos, this.pos) == 0 && button == this.button;\n        }\n    }\n    let lastClick, lastDoubleClick;\n    function clickRepeat(pos, button) {\n        let now = +new Date();\n        if (lastDoubleClick && lastDoubleClick.compare(now, pos, button)) {\n            lastClick = lastDoubleClick = null;\n            return 'triple';\n        } else if (lastClick && lastClick.compare(now, pos, button)) {\n            lastDoubleClick = new PastClick(now, pos, button);\n            lastClick = null;\n            return 'double';\n        } else {\n            lastClick = new PastClick(now, pos, button);\n            lastDoubleClick = null;\n            return 'single';\n        }\n    }\n    function onMouseDown(e) {\n        let cm = this, display = cm.display;\n        if (events.signalDOMEvent(cm, e) || display.activeTouch && display.input.supportsTouch())\n            return;\n        display.input.ensurePolled();\n        display.shift = e.shiftKey;\n        if (widgets.eventInWidget(display, e)) {\n            if (!browser.webkit) {\n                display.scroller.draggable = false;\n                setTimeout(() => display.scroller.draggable = true, 100);\n            }\n            return;\n        }\n        if (clickInGutter(cm, e))\n            return;\n        let pos = position_measurement.posFromMouse(cm, e), button = events.e_button(e), repeat = pos ? clickRepeat(pos, button) : 'single';\n        window.focus();\n        if (button == 1 && cm.state.selectingText)\n            cm.state.selectingText(e);\n        if (pos && handleMappedButton(cm, button, pos, repeat, e))\n            return;\n        if (button == 1) {\n            if (pos)\n                leftButtonDown(cm, pos, repeat, e);\n            else if (events.e_target(e) == display.scroller)\n                events.e_preventDefault(e);\n        } else if (button == 2) {\n            if (pos)\n                selection_updates.extendSelection(cm.doc, pos);\n            setTimeout(() => display.input.focus(), 20);\n        } else if (button == 3) {\n            if (browser.captureRightClick)\n                cm.display.input.onContextMenu(e);\n            else\n                focus.delayBlurEvent(cm);\n        }\n    }\n    function handleMappedButton(cm, button, pos, repeat, event) {\n        let name = 'Click';\n        if (repeat == 'double')\n            name = 'Double' + name;\n        else if (repeat == 'triple')\n            name = 'Triple' + name;\n        name = (button == 1 ? 'Left' : button == 2 ? 'Middle' : 'Right') + name;\n        return q.dispatchKey(cm, p.addModifierNames(name, event), event, bound => {\n            if (typeof bound == 'string')\n                bound = r.commands[bound];\n            if (!bound)\n                return false;\n            let done = false;\n            try {\n                if (cm.isReadOnly())\n                    cm.state.suppressEdits = true;\n                done = bound(cm, pos) != o.Pass;\n            } finally {\n                cm.state.suppressEdits = false;\n            }\n            return done;\n        });\n    }\n    function configureMouse(cm, repeat, event) {\n        let option = cm.getOption('configureMouse');\n        let value = option ? option(cm, repeat, event) : {};\n        if (value.unit == null) {\n            let rect = browser.chromeOS ? event.shiftKey && event.metaKey : event.altKey;\n            value.unit = rect ? 'rectangle' : repeat == 'single' ? 'char' : repeat == 'double' ? 'word' : 'line';\n        }\n        if (value.extend == null || cm.doc.extend)\n            value.extend = cm.doc.extend || event.shiftKey;\n        if (value.addNew == null)\n            value.addNew = browser.mac ? event.metaKey : event.ctrlKey;\n        if (value.moveOnDrag == null)\n            value.moveOnDrag = !(browser.mac ? event.altKey : event.ctrlKey);\n        return value;\n    }\n    function leftButtonDown(cm, pos, repeat, event) {\n        if (browser.ie)\n            setTimeout(o.bind(focus.ensureFocus, cm), 0);\n        else\n            cm.curOp.focus = dom.activeElt();\n        let behavior = configureMouse(cm, repeat, event);\n        let sel = cm.doc.sel, contained;\n        if (cm.options.dragDrop && n.dragAndDrop && !cm.isReadOnly() && repeat == 'single' && (contained = sel.contains(pos)) > -1 && (line_pos.cmp((contained = sel.ranges[contained]).from(), pos) < 0 || pos.xRel > 0) && (line_pos.cmp(contained.to(), pos) > 0 || pos.xRel < 0))\n            leftButtonStartDrag(cm, event, pos, behavior);\n        else\n            leftButtonSelect(cm, event, pos, behavior);\n    }\n    function leftButtonStartDrag(cm, event, pos, behavior) {\n        let display = cm.display, moved = false;\n        let dragEnd = operations.operation(cm, e => {\n            if (browser.webkit)\n                display.scroller.draggable = false;\n            cm.state.draggingText = false;\n            events.off(display.wrapper.ownerDocument, 'mouseup', dragEnd);\n            events.off(display.wrapper.ownerDocument, 'mousemove', mouseMove);\n            events.off(display.scroller, 'dragstart', dragStart);\n            events.off(display.scroller, 'drop', dragEnd);\n            if (!moved) {\n                events.e_preventDefault(e);\n                if (!behavior.addNew)\n                    selection_updates.extendSelection(cm.doc, pos, null, null, behavior.extend);\n                if (browser.webkit || browser.ie && browser.ie_version == 9)\n                    setTimeout(() => {\n                        display.wrapper.ownerDocument.body.focus();\n                        display.input.focus();\n                    }, 20);\n                else\n                    display.input.focus();\n            }\n        });\n        let mouseMove = function (e2) {\n            moved = moved || Math.abs(event.clientX - e2.clientX) + Math.abs(event.clientY - e2.clientY) >= 10;\n        };\n        let dragStart = () => moved = true;\n        if (browser.webkit)\n            display.scroller.draggable = true;\n        cm.state.draggingText = dragEnd;\n        dragEnd.copy = !behavior.moveOnDrag;\n        if (display.scroller.dragDrop)\n            display.scroller.dragDrop();\n        events.on(display.wrapper.ownerDocument, 'mouseup', dragEnd);\n        events.on(display.wrapper.ownerDocument, 'mousemove', mouseMove);\n        events.on(display.scroller, 'dragstart', dragStart);\n        events.on(display.scroller, 'drop', dragEnd);\n        focus.delayBlurEvent(cm);\n        setTimeout(() => display.input.focus(), 20);\n    }\n    function rangeForUnit(cm, pos, unit) {\n        if (unit == 'char')\n            return new selection.Range(pos, pos);\n        if (unit == 'word')\n            return cm.findWordAt(pos);\n        if (unit == 'line')\n            return new selection.Range(line_pos.Pos(pos.line, 0), line_pos.clipPos(cm.doc, line_pos.Pos(pos.line + 1, 0)));\n        let result = unit(cm, pos);\n        return new selection.Range(result.from, result.to);\n    }\n    function leftButtonSelect(cm, event, start, behavior) {\n        let display = cm.display, doc = cm.doc;\n        events.e_preventDefault(event);\n        let ourRange, ourIndex, startSel = doc.sel, ranges = startSel.ranges;\n        if (behavior.addNew && !behavior.extend) {\n            ourIndex = doc.sel.contains(start);\n            if (ourIndex > -1)\n                ourRange = ranges[ourIndex];\n            else\n                ourRange = new selection.Range(start, start);\n        } else {\n            ourRange = doc.sel.primary();\n            ourIndex = doc.sel.primIndex;\n        }\n        if (behavior.unit == 'rectangle') {\n            if (!behavior.addNew)\n                ourRange = new selection.Range(start, start);\n            start = position_measurement.posFromMouse(cm, event, true, true);\n            ourIndex = -1;\n        } else {\n            let range = rangeForUnit(cm, start, behavior.unit);\n            if (behavior.extend)\n                ourRange = selection_updates.extendRange(ourRange, range.anchor, range.head, behavior.extend);\n            else\n                ourRange = range;\n        }\n        if (!behavior.addNew) {\n            ourIndex = 0;\n            selection_updates.setSelection(doc, new selection.Selection([ourRange], 0), o.sel_mouse);\n            startSel = doc.sel;\n        } else if (ourIndex == -1) {\n            ourIndex = ranges.length;\n            selection_updates.setSelection(doc, selection.normalizeSelection(cm, ranges.concat([ourRange]), ourIndex), {\n                scroll: false,\n                origin: '*mouse'\n            });\n        } else if (ranges.length > 1 && ranges[ourIndex].empty() && behavior.unit == 'char' && !behavior.extend) {\n            selection_updates.setSelection(doc, selection.normalizeSelection(cm, ranges.slice(0, ourIndex).concat(ranges.slice(ourIndex + 1)), 0), {\n                scroll: false,\n                origin: '*mouse'\n            });\n            startSel = doc.sel;\n        } else {\n            selection_updates.replaceOneSelection(doc, ourIndex, ourRange, o.sel_mouse);\n        }\n        let lastPos = start;\n        function extendTo(pos) {\n            if (line_pos.cmp(lastPos, pos) == 0)\n                return;\n            lastPos = pos;\n            if (behavior.unit == 'rectangle') {\n                let ranges = [], tabSize = cm.options.tabSize;\n                let startCol = o.countColumn(utils_line.getLine(doc, start.line).text, start.ch, tabSize);\n                let posCol = o.countColumn(utils_line.getLine(doc, pos.line).text, pos.ch, tabSize);\n                let left = Math.min(startCol, posCol), right = Math.max(startCol, posCol);\n                for (let line = Math.min(start.line, pos.line), end = Math.min(cm.lastLine(), Math.max(start.line, pos.line)); line <= end; line++) {\n                    let text = utils_line.getLine(doc, line).text, leftPos = o.findColumn(text, left, tabSize);\n                    if (left == right)\n                        ranges.push(new selection.Range(line_pos.Pos(line, leftPos), line_pos.Pos(line, leftPos)));\n                    else if (text.length > leftPos)\n                        ranges.push(new selection.Range(line_pos.Pos(line, leftPos), line_pos.Pos(line, o.findColumn(text, right, tabSize))));\n                }\n                if (!ranges.length)\n                    ranges.push(new selection.Range(start, start));\n                selection_updates.setSelection(doc, selection.normalizeSelection(cm, startSel.ranges.slice(0, ourIndex).concat(ranges), ourIndex), {\n                    origin: '*mouse',\n                    scroll: false\n                });\n                cm.scrollIntoView(pos);\n            } else {\n                let oldRange = ourRange;\n                let range = rangeForUnit(cm, pos, behavior.unit);\n                let anchor = oldRange.anchor, head;\n                if (line_pos.cmp(range.anchor, anchor) > 0) {\n                    head = range.head;\n                    anchor = line_pos.minPos(oldRange.from(), range.anchor);\n                } else {\n                    head = range.anchor;\n                    anchor = line_pos.maxPos(oldRange.to(), range.head);\n                }\n                let ranges = startSel.ranges.slice(0);\n                ranges[ourIndex] = bidiSimplify(cm, new selection.Range(line_pos.clipPos(doc, anchor), head));\n                selection_updates.setSelection(doc, selection.normalizeSelection(cm, ranges, ourIndex), o.sel_mouse);\n            }\n        }\n        let editorSize = display.wrapper.getBoundingClientRect();\n        let counter = 0;\n        function extend(e) {\n            let curCount = ++counter;\n            let cur = position_measurement.posFromMouse(cm, e, true, behavior.unit == 'rectangle');\n            if (!cur)\n                return;\n            if (line_pos.cmp(cur, lastPos) != 0) {\n                cm.curOp.focus = dom.activeElt();\n                extendTo(cur);\n                let visible = update_lines.visibleLines(display, doc);\n                if (cur.line >= visible.to || cur.line < visible.from)\n                    setTimeout(operations.operation(cm, () => {\n                        if (counter == curCount)\n                            extend(e);\n                    }), 150);\n            } else {\n                let outside = e.clientY < editorSize.top ? -20 : e.clientY > editorSize.bottom ? 20 : 0;\n                if (outside)\n                    setTimeout(operations.operation(cm, () => {\n                        if (counter != curCount)\n                            return;\n                        display.scroller.scrollTop += outside;\n                        extend(e);\n                    }), 50);\n            }\n        }\n        function done(e) {\n            cm.state.selectingText = false;\n            counter = Infinity;\n            events.e_preventDefault(e);\n            display.input.focus();\n            events.off(display.wrapper.ownerDocument, 'mousemove', move);\n            events.off(display.wrapper.ownerDocument, 'mouseup', up);\n            doc.history.lastSelOrigin = null;\n        }\n        let move = operations.operation(cm, e => {\n            if (e.buttons === 0 || !events.e_button(e))\n                done(e);\n            else\n                extend(e);\n        });\n        let up = operations.operation(cm, done);\n        cm.state.selectingText = up;\n        events.on(display.wrapper.ownerDocument, 'mousemove', move);\n        events.on(display.wrapper.ownerDocument, 'mouseup', up);\n    }\n    function bidiSimplify(cm, range) {\n        let {anchor, head} = range, anchorLine = utils_line.getLine(cm.doc, anchor.line);\n        if (line_pos.cmp(anchor, head) == 0 && anchor.sticky == head.sticky)\n            return range;\n        let order = bidi.getOrder(anchorLine);\n        if (!order)\n            return range;\n        let index = bidi.getBidiPartAt(order, anchor.ch, anchor.sticky), part = order[index];\n        if (part.from != anchor.ch && part.to != anchor.ch)\n            return range;\n        let boundary = index + (part.from == anchor.ch == (part.level != 1) ? 0 : 1);\n        if (boundary == 0 || boundary == order.length)\n            return range;\n        let leftSide;\n        if (head.line != anchor.line) {\n            leftSide = (head.line - anchor.line) * (cm.doc.direction == 'ltr' ? 1 : -1) > 0;\n        } else {\n            let headIndex = bidi.getBidiPartAt(order, head.ch, head.sticky);\n            let dir = headIndex - index || (head.ch - anchor.ch) * (part.level == 1 ? -1 : 1);\n            if (headIndex == boundary - 1 || headIndex == boundary)\n                leftSide = dir < 0;\n            else\n                leftSide = dir > 0;\n        }\n        let usePart = order[boundary + (leftSide ? -1 : 0)];\n        let from = leftSide == (usePart.level == 1);\n        let ch = from ? usePart.from : usePart.to, sticky = from ? 'after' : 'before';\n        return anchor.ch == ch && anchor.sticky == sticky ? range : new selection.Range(new line_pos.Pos(anchor.line, ch, sticky), head);\n    }\n    function gutterEvent(cm, e, type, prevent) {\n        let mX, mY;\n        if (e.touches) {\n            mX = e.touches[0].clientX;\n            mY = e.touches[0].clientY;\n        } else {\n            try {\n                mX = e.clientX;\n                mY = e.clientY;\n            } catch (e) {\n                return false;\n            }\n        }\n        if (mX >= Math.floor(cm.display.gutters.getBoundingClientRect().right))\n            return false;\n        if (prevent)\n            events.e_preventDefault(e);\n        let display = cm.display;\n        let lineBox = display.lineDiv.getBoundingClientRect();\n        if (mY > lineBox.bottom || !events.hasHandler(cm, type))\n            return events.e_defaultPrevented(e);\n        mY -= lineBox.top - display.viewOffset;\n        for (let i = 0; i < cm.options.gutters.length; ++i) {\n            let g = display.gutters.childNodes[i];\n            if (g && g.getBoundingClientRect().right >= mX) {\n                let line = utils_line.lineAtHeight(cm.doc, mY);\n                let gutter = cm.options.gutters[i];\n                events.signal(cm, type, cm, line, gutter, e);\n                return events.e_defaultPrevented(e);\n            }\n        }\n    }\n    function clickInGutter(cm, e) {\n        return gutterEvent(cm, e, 'gutterClick', true);\n    }\n    function onContextMenu(cm, e) {\n        if (widgets.eventInWidget(cm.display, e) || contextMenuInGutter(cm, e))\n            return;\n        if (events.signalDOMEvent(cm, e, 'contextmenu'))\n            return;\n        if (!browser.captureRightClick)\n            cm.display.input.onContextMenu(e);\n    }\n    function contextMenuInGutter(cm, e) {\n        if (!events.hasHandler(cm, 'gutterContextMenu'))\n            return false;\n        return gutterEvent(cm, e, 'gutterContextMenu', false);\n    }\n    return {\n        onMouseDown: onMouseDown,\n        clickInGutter: clickInGutter,\n        onContextMenu: onContextMenu\n    };\n});"]}