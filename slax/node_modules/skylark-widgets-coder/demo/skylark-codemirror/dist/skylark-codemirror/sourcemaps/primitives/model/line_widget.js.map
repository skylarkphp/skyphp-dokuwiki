{"version":3,"sources":["primitives/model/line_widget.js"],"names":["define","a","b","c","d","e","f","g","h","i","LineWidget","[object Object]","doc","node","options","opt","hasOwnProperty","this","cm","ws","line","widgets","no","lineNo","length","splice","height","widgetHeight","updateLineHeight","Math","max","runInOp","adjustScrollWhenAboveVisible","regLineChange","signalLater","oldH","diff","lineIsHidden","curOp","forceUpdate","heightAtLine","scrollTop","addToScrollTop","eventMixin","addLineWidget","handle","widget","noHScroll","display","alignWidgets","changeLine","insertAt","push","min","aboveVisible"],"mappings":";;;;;;;AAAAA,QACI,wBACA,uBACA,2BACA,gBACA,qBACA,yBACA,YACA,gBACA,2BACD,SAAUC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,GACjC,mBACMC,EACFC,YAAYC,EAAKC,EAAMC,GACnB,GAAIA,EACA,IAAK,IAAIC,KAAOD,EACRA,EAAQE,eAAeD,KACvBE,KAAKF,GAAOD,EAAQC,IAChCE,KAAKL,IAAMA,EACXK,KAAKJ,KAAOA,EAEhBF,QACI,IAAIO,EAAKD,KAAKL,IAAIM,GAAIC,EAAKF,KAAKG,KAAKC,QAASD,EAAOH,KAAKG,KAAME,EAAKjB,EAAEkB,OAAOH,GAC9E,GAAU,MAANE,IAAeH,EACf,OACJ,IAAK,IAAIV,EAAI,EAAGA,EAAIU,EAAGK,SAAUf,EACzBU,EAAGV,IAAMQ,MACTE,EAAGM,OAAOhB,IAAK,GAClBU,EAAGK,SACJJ,EAAKC,QAAU,MACnB,IAAIK,EAASpB,EAAEqB,aAAaV,MAC5BZ,EAAEuB,iBAAiBR,EAAMS,KAAKC,IAAI,EAAGV,EAAKM,OAASA,IAC/CR,IACAjB,EAAE8B,QAAQb,EAAI,KACVc,EAA6Bd,EAAIE,GAAOM,GACxCvB,EAAE8B,cAAcf,EAAII,EAAI,YAE5Bb,EAAEyB,YAAYhB,EAAI,oBAAqBA,EAAID,KAAMK,IAGzDX,UACI,IAAIwB,EAAOlB,KAAKS,OAAQR,EAAKD,KAAKL,IAAIM,GAAIE,EAAOH,KAAKG,KACtDH,KAAKS,OAAS,KACd,IAAIU,EAAO9B,EAAEqB,aAAaV,MAAQkB,EAC7BC,IAEAhC,EAAEiC,aAAapB,KAAKL,IAAKQ,IAC1Bf,EAAEuB,iBAAiBR,EAAMA,EAAKM,OAASU,GACvClB,GACAjB,EAAE8B,QAAQb,EAAI,KACVA,EAAGoB,MAAMC,aAAc,EACvBP,EAA6Bd,EAAIE,EAAMgB,GACvC3B,EAAEyB,YAAYhB,EAAI,oBAAqBA,EAAID,KAAMZ,EAAEkB,OAAOH,QAM1E,SAASY,EAA6Bd,EAAIE,EAAMgB,GACxChC,EAAEoC,aAAapB,IAASF,EAAGoB,OAASpB,EAAGoB,MAAMG,WAAavB,EAAGN,IAAI6B,YACjEvC,EAAEwC,eAAexB,EAAIkB,GA2B7B,OA9BA5B,EAAEmC,WAAWjC,IA+BTA,WAAYA,EACZkC,cA3BJ,SAAuBhC,EAAKiC,EAAQhC,EAAMC,GACtC,IAAIgC,EAAS,IAAIpC,EAAWE,EAAKC,EAAMC,GACnCI,EAAKN,EAAIM,GAqBb,OApBIA,GAAM4B,EAAOC,YACb7B,EAAG8B,QAAQC,cAAe,GAC9B1C,EAAE2C,WAAWtC,EAAKiC,EAAQ,SAAUzB,IAChC,IAAIC,EAAUD,EAAKC,UAAYD,EAAKC,YAMpC,GALuB,MAAnByB,EAAOK,SACP9B,EAAQ+B,KAAKN,GAEbzB,EAAQI,OAAOI,KAAKwB,IAAIhC,EAAQG,OAAS,EAAGK,KAAKC,IAAI,EAAGgB,EAAOK,WAAY,EAAGL,GAClFA,EAAO1B,KAAOA,EACVF,IAAOd,EAAEiC,aAAazB,EAAKQ,GAAO,CAClC,IAAIkC,EAAelD,EAAEoC,aAAapB,GAAQR,EAAI6B,UAC9CpC,EAAEuB,iBAAiBR,EAAMA,EAAKM,OAASpB,EAAEqB,aAAamB,IAClDQ,GACApD,EAAEwC,eAAexB,EAAI4B,EAAOpB,QAChCR,EAAGoB,MAAMC,aAAc,EAE3B,OAAO,IAEPrB,GACAT,EAAEyB,YAAYhB,EAAI,kBAAmBA,EAAI4B,EAAyB,iBAAVD,EAAqBA,EAASxC,EAAEkB,OAAOsB,IAC5FC","file":"../../../primitives/model/line_widget.js","sourcesContent":["define([\n    '../display/operations',\n    '../display/scrolling',\n    '../display/view_tracking',\n    '../line/spans',\n    '../line/utils_line',\n    '../measurement/widgets',\n    './changes',\n    '../util/event',\n    '../util/operation_group'\n], function (a, b, c, d, e, f, g, h, i) {\n    'use strict';\n    class LineWidget {\n        constructor(doc, node, options) {\n            if (options)\n                for (let opt in options)\n                    if (options.hasOwnProperty(opt))\n                        this[opt] = options[opt];\n            this.doc = doc;\n            this.node = node;\n        }\n        clear() {\n            let cm = this.doc.cm, ws = this.line.widgets, line = this.line, no = e.lineNo(line);\n            if (no == null || !ws)\n                return;\n            for (let i = 0; i < ws.length; ++i)\n                if (ws[i] == this)\n                    ws.splice(i--, 1);\n            if (!ws.length)\n                line.widgets = null;\n            let height = f.widgetHeight(this);\n            e.updateLineHeight(line, Math.max(0, line.height - height));\n            if (cm) {\n                a.runInOp(cm, () => {\n                    adjustScrollWhenAboveVisible(cm, line, -height);\n                    c.regLineChange(cm, no, 'widget');\n                });\n                i.signalLater(cm, 'lineWidgetCleared', cm, this, no);\n            }\n        }\n        changed() {\n            let oldH = this.height, cm = this.doc.cm, line = this.line;\n            this.height = null;\n            let diff = f.widgetHeight(this) - oldH;\n            if (!diff)\n                return;\n            if (!d.lineIsHidden(this.doc, line))\n                e.updateLineHeight(line, line.height + diff);\n            if (cm) {\n                a.runInOp(cm, () => {\n                    cm.curOp.forceUpdate = true;\n                    adjustScrollWhenAboveVisible(cm, line, diff);\n                    i.signalLater(cm, 'lineWidgetChanged', cm, this, e.lineNo(line));\n                });\n            }\n        }\n    }\n    h.eventMixin(LineWidget);\n    function adjustScrollWhenAboveVisible(cm, line, diff) {\n        if (d.heightAtLine(line) < (cm.curOp && cm.curOp.scrollTop || cm.doc.scrollTop))\n            b.addToScrollTop(cm, diff);\n    }\n    function addLineWidget(doc, handle, node, options) {\n        let widget = new LineWidget(doc, node, options);\n        let cm = doc.cm;\n        if (cm && widget.noHScroll)\n            cm.display.alignWidgets = true;\n        g.changeLine(doc, handle, 'widget', line => {\n            let widgets = line.widgets || (line.widgets = []);\n            if (widget.insertAt == null)\n                widgets.push(widget);\n            else\n                widgets.splice(Math.min(widgets.length - 1, Math.max(0, widget.insertAt)), 0, widget);\n            widget.line = line;\n            if (cm && !d.lineIsHidden(doc, line)) {\n                let aboveVisible = d.heightAtLine(line) < doc.scrollTop;\n                e.updateLineHeight(line, line.height + f.widgetHeight(widget));\n                if (aboveVisible)\n                    b.addToScrollTop(cm, widget.height);\n                cm.curOp.forceUpdate = true;\n            }\n            return true;\n        });\n        if (cm)\n            i.signalLater(cm, 'lineWidgetAdded', cm, widget, typeof handle == 'number' ? handle : e.lineNo(handle));\n        return widget;\n    }\n    return {\n        LineWidget: LineWidget,\n        addLineWidget: addLineWidget\n    };\n});"]}