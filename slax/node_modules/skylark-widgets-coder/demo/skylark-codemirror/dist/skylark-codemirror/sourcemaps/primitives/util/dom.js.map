{"version":3,"sources":["primitives/util/dom.js"],"names":["define","a","classTest","cls","RegExp","range","removeChildren","e","count","childNodes","length","removeChild","firstChild","elt","tag","content","className","style","document","createElement","cssText","appendChild","createTextNode","i","createRange","node","start","end","endNode","r","setEnd","setStart","body","createTextRange","moveToElementText","parentNode","collapse","moveEnd","moveStart","selectInput","select","ios","selectionStart","selectionEnd","value","ie","_e","rmClass","current","match","exec","after","slice","index","removeChildrenAndAdd","parent","eltP","setAttribute","contains","child","nodeType","host","activeElt","activeElement","shadowRoot","addClass","test","joinClasses","b","as","split"],"mappings":"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","file":"../../../primitives/util/dom.js","sourcesContent":["define(['./browser'], function (a) {\n    'use strict';\n    function classTest(cls) {\n        return new RegExp('(^|\\\\s)' + cls + '(?:$|\\\\s)\\\\s*');\n    }\n    let rmClass = function (node, cls) {\n        let current = node.className;\n        let match = classTest(cls).exec(current);\n        if (match) {\n            let after = current.slice(match.index + match[0].length);\n            node.className = current.slice(0, match.index) + (after ? match[1] + after : '');\n        }\n    };\n    function removeChildren(e) {\n        for (let count = e.childNodes.length; count > 0; --count)\n            e.removeChild(e.firstChild);\n        return e;\n    }\n    function removeChildrenAndAdd(parent, e) {\n        return removeChildren(parent).appendChild(e);\n    }\n    function elt(tag, content, className, style) {\n        let e = document.createElement(tag);\n        if (className)\n            e.className = className;\n        if (style)\n            e.style.cssText = style;\n        if (typeof content == 'string')\n            e.appendChild(document.createTextNode(content));\n        else if (content)\n            for (let i = 0; i < content.length; ++i)\n                e.appendChild(content[i]);\n        return e;\n    }\n    function eltP(tag, content, className, style) {\n        let e = elt(tag, content, className, style);\n        e.setAttribute('role', 'presentation');\n        return e;\n    }\n    let range;\n    if (document.createRange)\n        range = function (node, start, end, endNode) {\n            let r = document.createRange();\n            r.setEnd(endNode || node, end);\n            r.setStart(node, start);\n            return r;\n        };\n    else\n        range = function (node, start, end) {\n            let r = document.body.createTextRange();\n            try {\n                r.moveToElementText(node.parentNode);\n            } catch (e) {\n                return r;\n            }\n            r.collapse(true);\n            r.moveEnd('character', end);\n            r.moveStart('character', start);\n            return r;\n        };\n    function contains(parent, child) {\n        if (child.nodeType == 3)\n            child = child.parentNode;\n        if (parent.contains)\n            return parent.contains(child);\n        do {\n            if (child.nodeType == 11)\n                child = child.host;\n            if (child == parent)\n                return true;\n        } while (child = child.parentNode);\n    }\n    function activeElt() {\n        let activeElement;\n        try {\n            activeElement = document.activeElement;\n        } catch (e) {\n            activeElement = document.body || null;\n        }\n        while (activeElement && activeElement.shadowRoot && activeElement.shadowRoot.activeElement)\n            activeElement = activeElement.shadowRoot.activeElement;\n        return activeElement;\n    }\n    function addClass(node, cls) {\n        let current = node.className;\n        if (!classTest(cls).test(current))\n            node.className += (current ? ' ' : '') + cls;\n    }\n    function joinClasses(a, b) {\n        let as = a.split(' ');\n        for (let i = 0; i < as.length; i++)\n            if (as[i] && !classTest(as[i]).test(b))\n                b += ' ' + as[i];\n        return b;\n    }\n    let selectInput = function (node) {\n        node.select();\n    };\n    if (a.ios)\n        selectInput = function (node) {\n            node.selectionStart = 0;\n            node.selectionEnd = node.value.length;\n        };\n    else if (a.ie)\n        selectInput = function (node) {\n            try {\n                node.select();\n            } catch (_e) {\n            }\n        };\n    return {\n        classTest: classTest,\n        rmClass: rmClass,\n        removeChildren: removeChildren,\n        removeChildrenAndAdd: removeChildrenAndAdd,\n        elt: elt,\n        eltP: eltP,\n        range: range,\n        contains: contains,\n        activeElt: activeElt,\n        addClass: addClass,\n        joinClasses: joinClasses,\n        selectInput: selectInput\n    };\n});"]}