{"version":3,"sources":["addons/general/play.js"],"names":["define","langx","Addon","util","Coder","AddonPlay","options","firstRun","[object Object]","super","_init","coder","this","cache","html","type","content","css","js","$button","document","createElement","className","innerHTML","$container","appendChild","addEventListener","run","bind","on","change","code","e","params","data","clone","forceRender","mixin","emit","categoryName","addonName","register"],"mappings":";;;;;;;AAAAA,QACI,sBACA,cACA,aACA,eACD,SAAUC,EAAMC,EAAMC,EAAKC,SACpBC,UAAmBH,EAGrBI,cACI,OACGC,UAAU,GAIjBC,QACIC,MAAMC,QAEN,IAAIC,EAAQC,KAAKD,MAIbE,MAEqB,IALXD,KAAKN,QAKPC,WACRM,GACIC,MACIC,KAAM,OACNC,QAAS,IAEbC,KACIF,KAAM,MACNC,QAAS,IAEbE,IACIH,KAAM,KACNC,QAAS,MAIrB,IAAIG,EAAUC,SAASC,cAAc,UACrCF,EAAQG,UAAY,iCACpBH,EAAQI,UAAY,MACpBZ,EAAMa,WAAWC,YAAYN,GAC7BA,EAAQO,iBAAiB,QAASd,KAAKe,IAAIC,KAAKhB,OAChDD,EAAMkB,GAAG,SAAUjB,KAAKkB,OAAOF,KAAKhB,MAxBrB,IAyBfA,KAAKC,MAAQA,EACbD,KAAKmB,QACLnB,KAAKD,MAAQA,EAEjBH,OAAOwB,GACH,IAAIC,EAASD,EAAEE,KACftB,KAAKmB,KAAKE,EAAOlB,MAAQd,EAAMkC,MAAMF,QACE,IAA5BrB,KAAKC,MAAMoB,EAAOlB,MAEzBH,KAAKC,MAAMoB,EAAOlB,MAAMqB,YAAc,KAEtCxB,KAAKC,MAAMoB,EAAOlB,MAAQd,EAAMkC,MAAMF,GAI9CzB,MACI,IAAK,IAAIO,KAAQH,KAAKmB,KAClBnB,KAAKC,MAAME,GAAQd,EAAMoC,OAAQD,aAAa,GAAOxB,KAAKmB,KAAKhB,IAC/DH,KAAKD,MAAM2B,KAAK,SAAU1B,KAAKC,MAAME,IAI7CwB,0BACI,MAAO,UAGXC,uBACI,MAAO,QAOf,OAFAnC,EAAUoC,SAASrC,GAEZC","file":"../../../addons/general/play.js","sourcesContent":["define([\n    'skylark-langx/langx',\n    \"../../Addon\",\n    '../../util',\n    \"../../Coder\"\n], function (langx,Addon,util,Coder) {\n    class AddonPlay  extends Addon{\n        //constructor(coder, options) \n\n        get options() {\n            return {\n               firstRun: true \n            }\n        }\n\n        _init() {\n            super._init();\n\n            var coder = this.coder,\n                options = this.options;\n            \n            var priority = 10;\n            var cache = {};\n            var code = {};\n            if (options.firstRun === false) {\n                cache = {\n                    html: {\n                        type: 'html',\n                        content: ''\n                    },\n                    css: {\n                        type: 'css',\n                        content: ''\n                    },\n                    js: {\n                        type: 'js',\n                        content: ''\n                    }\n                };\n            }\n            var $button = document.createElement('button');\n            $button.className = 'coder-button coder-button-play';\n            $button.innerHTML = 'Run';\n            coder.$container.appendChild($button);\n            $button.addEventListener('click', this.run.bind(this));\n            coder.on('change', this.change.bind(this), priority);\n            this.cache = cache;\n            this.code = code;\n            this.coder = coder;\n        }\n        change(e) {\n            var params = e.data;\n            this.code[params.type] = langx.clone(params);\n            if (typeof this.cache[params.type] !== 'undefined') {\n                //callback(null, this.cache[params.type]);\n                this.cache[params.type].forceRender = null;\n            } else {\n                this.cache[params.type] = langx.clone(params);\n                //callback(null, params);\n            }\n        }\n        run() {\n            for (let type in this.code) {\n                this.cache[type] = langx.mixin({ forceRender: true },this.code[type]);\n                this.coder.emit('change', this.cache[type]);\n            }\n        }\n\n        static get categoryName() {\n            return \"general\";\n        }\n\n        static get addonName(){\n            return \"play\";\n        }\n\n    };\n\n    AddonPlay.register(Coder);\n\n    return AddonPlay;\n});"]}