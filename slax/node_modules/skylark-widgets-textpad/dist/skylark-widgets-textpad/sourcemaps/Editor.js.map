{"version":3,"sources":["Editor.js"],"names":["define","langx","$","Widget","CodeMirror","EasyEditor","textpad","Preview","helper","Editor","inherit","options","addons","iframe","mode","markdown","autocomplete","height","maxsplitsize","codemirror","lineWrapping","dragDrop","autoCloseTags","matchTags","autoCloseBrackets","matchBrackets","indentUnit","indentWithTabs","tabSize","hintOptions","completionSingle","toolbar","lblPreview","lblCodeview","lblMarkedview","template","join","_init","$this","this","tpl","element","_elm","buttons","addButtons","fullscreen","title","label","bold","italic","strike","blockquote","link","image","listUl","listOl","replace","htmleditor","content","find","attr","css","on","preview","children","eq","code","before","appendTo","editor","fromTextArea","debounce","render","save","trigger","append","contentWindow","document","open","close","container","parent","previewer","plugin","window","fit","previewContainer","codeContent","codeScroll","codeHeight","ratio","scrollHeight","previewPosition","scrollTop","e","preventDefault","removeClass","filter","addClass","activetab","hasClass","setValue","toMd","refresh","is","data","showHint","hint","html","POS","getDoc","getCursor","innerMode","getMode","getTokenAt","state","name","cur","token","string","charAt","type","completeSingle","length","Object","keys","forEach","addon","init","debouncedRedraw","redraw","bind","addButton","button","extend","replaceInPreview","regexp","callback","results","value","getValue","offset","index","translateOffset","result","substring","split","line","ch","currentvalue","match","matches","arguments","from","indexOf","to","replaceRange","inRange","cursor","push","_buildtoolbar","bar","empty","width","readonly","getOption","getCursorMode","param","val","addShortcut","map","isArray","key","addKeyMap","addShortcutAction","action","shortcuts","insertImage","url","text","replaceSelection","insertAtCaret","getSelection","curLine","getLine","start","end","test","curWord","slice","setSelection","focus","replaceLine","pos","setCursor","_setPreviewFocus","previewr","win","range","select","doc","selection","createRange","def"],"mappings":"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","file":"../Editor.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-widgets-base/Widget\",\r\n    \"skylark-codemirror/CodeMirror\",\r\n    \"skylark-easyeditor/EasyEditor\",\r\n    \"./textpad\",\r\n    \"./Preview\",\r\n    \"./helper\"\r\n],function(langx, $, Widget,CodeMirror,EasyEditor,textpad,Preview,helper){\r\n    var Editor = Widget.inherit({\r\n        options: {\r\n            addons       : [],\r\n            iframe       : false,\r\n            mode         : 'split',\r\n            markdown     : false,\r\n            autocomplete : true,\r\n            height       : 500,\r\n            maxsplitsize : 1000,\r\n            codemirror   : { \r\n                            mode: 'htmlmixed', \r\n                            lineWrapping: true, \r\n                            dragDrop: false, \r\n                            autoCloseTags: true, \r\n                            matchTags: true, \r\n                            autoCloseBrackets: true, \r\n                            matchBrackets: true, \r\n                            indentUnit: 4, \r\n                            indentWithTabs: false, \r\n                            tabSize: 4, \r\n                            hintOptions: {\r\n                                completionSingle:\r\n                                false\r\n                            } \r\n                            },\r\n            toolbar      : [ \r\n                            'bold', \r\n                            'italic', \r\n                            'strike', \r\n                            'link', \r\n                            'image', \r\n                            'blockquote', \r\n                            'listUl', \r\n                            'listOl' \r\n                            ],\r\n            lblPreview   : 'Preview',\r\n            lblCodeview  : 'HTML',\r\n            lblMarkedview: 'Markdown',\r\n\r\n            template : [\r\n                '<div class=\"uk-htmleditor uk-clearfix\" data-mode=\"split\">',\r\n                    '<div class=\"uk-htmleditor-navbar\">',\r\n                        '<ul class=\"uk-htmleditor-navbar-nav uk-htmleditor-toolbar\"></ul>',\r\n                        '<div class=\"uk-htmleditor-navbar-flip\">',\r\n                            '<ul class=\"uk-htmleditor-navbar-nav\">',\r\n                                '<li class=\"uk-htmleditor-button-code\"><a>{:lblCodeview}</a></li>',\r\n                                '<li class=\"uk-htmleditor-button-preview\"><a>{:lblPreview}</a></li>',\r\n                                '<li><a data-htmleditor-button=\"fullscreen\"><i class=\"fa fa-expand\"></i></a></li>',\r\n                            '</ul>',\r\n                        '</div>',\r\n                    '</div>',\r\n                    '<div class=\"uk-htmleditor-content\">',\r\n                        '<div class=\"uk-htmleditor-code\"></div>',\r\n                        '<div class=\"uk-htmleditor-preview\"><div></div></div>',\r\n                    '</div>',\r\n                '</div>'\r\n            ].join('')\r\n\r\n        },\r\n\r\n\r\n        _init: function() {\r\n\r\n            var $this = this, \r\n                tpl = this.options.template;\r\n\r\n            this.element = $(this._elm); // TODO\r\n\r\n            this.options.iframe = true;\r\n            this.CodeMirror = this.options.CodeMirror || CodeMirror;\r\n            this.buttons    = {};\r\n\r\n\r\n            this.addButtons({\r\n                fullscreen: {\r\n                    title  : 'Fullscreen',\r\n                    label  : '<i class=\"fa fa-expand\"></i>'\r\n                },\r\n                bold : {\r\n                    title  : 'Bold',\r\n                    label  : '<i class=\"fa fa-bold\"></i>'\r\n                },\r\n                italic : {\r\n                    title  : 'Italic',\r\n                    label  : '<i class=\"fa fa-italic\"></i>'\r\n                },\r\n                strike : {\r\n                    title  : 'Strikethrough',\r\n                    label  : '<i class=\"fa fa-strikethrough\"></i>'\r\n                },\r\n                blockquote : {\r\n                    title  : 'Blockquote',\r\n                    label  : '<i class=\"fa fa-quote-right\"></i>'\r\n                },\r\n                link : {\r\n                    title  : 'Link',\r\n                    label  : '<i class=\"fa fa-link\"></i>'\r\n                },\r\n                image : {\r\n                    title  : 'Image',\r\n                    label  : '<i class=\"fa fa-image\"></i>'\r\n                },\r\n                listUl : {\r\n                    title  : 'Unordered List',\r\n                    label  : '<i class=\"fa fa-list-ul\"></i>'\r\n                },\r\n                listOl : {\r\n                    title  : 'Ordered List',\r\n                    label  : '<i class=\"fa fa-list-ol\"></i>'\r\n                }\r\n\r\n            });\r\n\r\n\r\n            tpl = tpl.replace(/\\{:lblPreview}/g, this.options.lblPreview);\r\n            tpl = tpl.replace(/\\{:lblCodeview}/g, this.options.lblCodeview);\r\n\r\n            this.htmleditor = $(tpl);\r\n            this.content    = this.htmleditor.find('.uk-htmleditor-content');\r\n            this.toolbar    = this.htmleditor.find('.uk-htmleditor-toolbar');\r\n            $(this.toolbar)\r\n                 .attr('unselectable', 'on')\r\n                 .css('user-select', 'none')\r\n                 .on('selectstart', false);\r\n            this.preview    = this.htmleditor.find('.uk-htmleditor-preview').children().eq(0);\r\n            this.code       = this.htmleditor.find('.uk-htmleditor-code');\r\n\r\n            this.element.before(this.htmleditor).appendTo(this.code);\r\n            this.editor = this.CodeMirror.fromTextArea(this.element[0], this.options.codemirror);\r\n            this.editor.htmleditor = this;\r\n            this.editor.on('change', helper.debounce(function() { $this.render(); }, 150));\r\n            this.editor.on('change', function() {\r\n                $this.editor.save();\r\n                $this.element.trigger('input');\r\n            });\r\n            this.code.find('.CodeMirror').css('height', this.options.height);\r\n\r\n            // iframe mode?\r\n            if (this.options.iframe) {\r\n\r\n                this.iframe = $('<iframe class=\"uk-htmleditor-iframe\" frameborder=\"0\" scrolling=\"auto\" height=\"100\" width=\"100%\"></iframe>');\r\n                this.preview.append(this.iframe);\r\n\r\n                // must open and close document object to start using it!\r\n                this.iframe[0].contentWindow.document.open();\r\n                this.iframe[0].contentWindow.document.close();\r\n\r\n                this.preview.container = $(this.iframe[0].contentWindow.document).find('body');\r\n\r\n                // append custom stylesheet\r\n                if (typeof(this.options.iframe) === 'string') {\r\n                    this.preview.container.parent().append('<link rel=\"stylesheet\" href=\"'+this.options.iframe+'\">');\r\n                }\r\n\r\n            } else {\r\n                this.preview.container = this.preview;\r\n            }\r\n            this.previewer   = this.preview.container.plugin(\"lark.codeeditor.preview\");\r\n\r\n            //$win.on('resize load', helper.debounce(function() { $this.fit(); }, 200));\r\n            $(window).on('resize load', helper.debounce(function() { $this.fit(); }, 200));\r\n\r\n            var previewContainer = this.iframe ? this.preview.container:$this.preview.parent(),\r\n                codeContent      = this.code.find('.CodeMirror-sizer'),\r\n                codeScroll       = this.code.find('.CodeMirror-scroll').on('scroll', helper.debounce(function() {\r\n\r\n                    if ($this.htmleditor.attr('data-mode') == 'tab') return;\r\n\r\n                    // calc position\r\n                    var codeHeight      = codeContent.height() - codeScroll.height(),\r\n                        previewHeight   = previewContainer[0].scrollHeight - ($this.iframe ? $this.iframe.height() : previewContainer.height()),\r\n                        ratio           = previewHeight / codeHeight,\r\n                        previewPosition = codeScroll.scrollTop() * ratio;\r\n\r\n                    // apply new scroll\r\n                    previewContainer.scrollTop(previewPosition);\r\n\r\n                }, 10));\r\n\r\n            this.htmleditor.on('click', '.uk-htmleditor-button-code, .uk-htmleditor-button-preview', function(e) {\r\n\r\n                e.preventDefault();\r\n\r\n                if ($this.htmleditor.attr('data-mode') == 'tab') {\r\n\r\n                    $this.htmleditor.find('.uk-htmleditor-button-code, .uk-htmleditor-button-preview').removeClass('uk-active').filter(this).addClass('uk-active');\r\n\r\n                    $this.activetab = $(this).hasClass('uk-htmleditor-button-code') ? 'code' : 'preview';\r\n\r\n                    if ($this.activetab == 'code') {\r\n                        //var visualEditor = $this.$preview.data('plugin_easyEditor');\r\n                        $this.editor.setValue($this.previewer.toMd());\r\n\r\n                    }\r\n                    $this.htmleditor.attr('data-active-tab', $this.activetab);\r\n                    $this.editor.refresh();\r\n                }\r\n            });\r\n\r\n            // toolbar actions\r\n            this.htmleditor.on('click', 'a[data-htmleditor-button]', function() {\r\n\r\n                if (!$this.code.is(':visible')) {\r\n                    //var editor = $this.$preview.data('plugin_easyEditor');\r\n                    $this.previewer[ $(this).data('htmleditor-button')]();\r\n                    return;\r\n                }\r\n\r\n                $this.trigger('action.' + $(this).data('htmleditor-button'), [$this.editor]);\r\n            });\r\n\r\n            this.preview.parent().css('height', this.code.height());\r\n\r\n            // autocomplete\r\n            if (this.options.autocomplete && this.CodeMirror.showHint && this.CodeMirror.hint && this.CodeMirror.hint.html) {\r\n\r\n                this.editor.on('inputRead', helper.debounce(function() {\r\n                    var doc = $this.editor.getDoc(), POS = doc.getCursor(), mode = $this.CodeMirror.innerMode($this.editor.getMode(), $this.editor.getTokenAt(POS).state).mode.name;\r\n\r\n                    if (mode == 'xml') { //html depends on xml\r\n\r\n                        var cur = $this.editor.getCursor(), token = $this.editor.getTokenAt(cur);\r\n\r\n                        if (token.string.charAt(0) == '<' || token.type == 'attribute') {\r\n                            $this.CodeMirror.showHint($this.editor, $this.CodeMirror.hint.html, { completeSingle: false });\r\n                        }\r\n                    }\r\n                }, 100));\r\n            }\r\n\r\n            this.addons = [];\r\n            (this.options.addons.length ? this.options.addons : Object.keys(addons)).forEach(function(addon) {\r\n\r\n                if (addons[addon].init) {\r\n                    addons[addon].init($this);\r\n                    $this.addons[addon] = true;\r\n                }\r\n\r\n            });\r\n\r\n\r\n            this.debouncedRedraw = helper.debounce(function () { $this.redraw(); }, 5);\r\n\r\n            //this.on('init.uk.component', function() {\r\n                $this.debouncedRedraw();\r\n            //});\r\n\r\n            this.element.attr('data-uk-check-display', 1).on('display.uk.check', function(e) {\r\n                if (this.htmleditor.is(\":visible\")) this.fit();\r\n            }.bind(this));\r\n\r\n            //editors.push(this);\r\n        },\r\n\r\n        addButton: function(name, button) {\r\n            this.buttons[name] = button;\r\n        },\r\n\r\n        addButtons: function(buttons) {\r\n            langx.extend(this.buttons, buttons);\r\n        },\r\n\r\n        replaceInPreview: function(regexp, callback) {\r\n\r\n            var editor = this.editor, results = [], value = editor.getValue(), offset = -1, index = 0;\r\n\r\n            this.currentvalue = this.currentvalue.replace(regexp, function() {\r\n\r\n                offset = value.indexOf(arguments[0], ++offset);\r\n\r\n                var match  = {\r\n                    matches: arguments,\r\n                    from   : translateOffset(offset),\r\n                    to     : translateOffset(offset + arguments[0].length),\r\n                    replace: function(value) {\r\n                        editor.replaceRange(value, match.from, match.to);\r\n                    },\r\n                    inRange: function(cursor) {\r\n\r\n                        if (cursor.line === match.from.line && cursor.line === match.to.line) {\r\n                            return cursor.ch >= match.from.ch && cursor.ch < match.to.ch;\r\n                        }\r\n\r\n                        return  (cursor.line === match.from.line && cursor.ch   >= match.from.ch) ||\r\n                                (cursor.line >   match.from.line && cursor.line <  match.to.line) ||\r\n                                (cursor.line === match.to.line   && cursor.ch   <  match.to.ch);\r\n                    }\r\n                };\r\n\r\n                var result = typeof(callback) === 'string' ? callback : callback(match, index);\r\n\r\n                if (!result && result !== '') {\r\n                    return arguments[0];\r\n                }\r\n\r\n                index++;\r\n\r\n                results.push(match);\r\n                return result;\r\n            });\r\n\r\n            function translateOffset(offset) {\r\n                var result = editor.getValue().substring(0, offset).split('\\n');\r\n                return { line: result.length - 1, ch: result[result.length - 1].length }\r\n            }\r\n\r\n            return results;\r\n        },\r\n\r\n        _buildtoolbar: function() {\r\n\r\n            if (!(this.options.toolbar && this.options.toolbar.length)) return;\r\n\r\n            var $this = this, bar = [];\r\n\r\n            this.toolbar.empty();\r\n\r\n            this.options.toolbar.forEach(function(button) {\r\n                if (!$this.buttons[button]) return;\r\n\r\n                var title = $this.buttons[button].title ? $this.buttons[button].title : button;\r\n\r\n                bar.push('<li><a data-htmleditor-button=\"'+button+'\" title=\"'+title+'\" data-uk-tooltip>'+$this.buttons[button].label+'</a></li>');\r\n            });\r\n\r\n            this.toolbar.html(bar.join('\\n'));\r\n        },\r\n\r\n        fit: function() {\r\n\r\n            var mode = this.options.mode;\r\n\r\n            if (mode == 'split' && this.htmleditor.width() < this.options.maxsplitsize) {\r\n                mode = 'tab';\r\n            }\r\n\r\n            if (mode == 'tab') {\r\n                if (!this.activetab) {\r\n                    this.activetab = 'code';\r\n                    this.htmleditor.attr('data-active-tab', this.activetab);\r\n                }\r\n\r\n                this.htmleditor.find('.uk-htmleditor-button-code, .uk-htmleditor-button-preview').removeClass('uk-active')\r\n                    .filter(this.activetab == 'code' ? '.uk-htmleditor-button-code' : '.uk-htmleditor-button-preview')\r\n                    .addClass('uk-active');\r\n            }\r\n\r\n            //var visualEditor = this.$preview.data('plugin_easyEditor');\r\n            this.previewer.readonly(mode == 'tab');\r\n\r\n            this.editor.refresh();\r\n            this.preview.parent().css('height', this.code.height());\r\n\r\n            this.htmleditor.attr('data-mode', mode);\r\n        },\r\n\r\n        redraw: function() {\r\n            this._buildtoolbar();\r\n            this.render();\r\n            this.fit();\r\n        },\r\n\r\n        getMode: function() {\r\n            return this.editor.getOption('mode');\r\n        },\r\n\r\n        getCursorMode: function() {\r\n            var param = { mode: 'html'};\r\n            this.trigger('cursorMode', [param]);\r\n            return param.mode;\r\n        },\r\n\r\n        render: function() {\r\n\r\n            this.currentvalue = this.editor.getValue();\r\n\r\n            // empty code\r\n            if (!this.currentvalue) {\r\n\r\n                this.element.val('');\r\n                this.preview.container.html('');\r\n\r\n                return;\r\n            }\r\n\r\n            this.trigger('render', [this]);\r\n            this.trigger('renderLate', [this]);\r\n\r\n            this.preview.container.html(this.currentvalue);\r\n        },\r\n\r\n        addShortcut: function(name, callback) {\r\n            var map = {};\r\n            if (!langx.isArray(name)) {\r\n                name = [name];\r\n            }\r\n\r\n            name.forEach(function(key) {\r\n                map[key] = callback;\r\n            });\r\n\r\n            this.editor.addKeyMap(map);\r\n\r\n            return map;\r\n        },\r\n\r\n        addShortcutAction: function(action, shortcuts) {\r\n            var editor = this;\r\n            this.addShortcut(shortcuts, function() {\r\n                editor.element.trigger('action.' + action, [editor.editor]);\r\n            });\r\n        },\r\n\r\n        insertImage : function(url,text) {\r\n            if (!this.code.is(':visible')) {\r\n                //var editor = this.$preview.data('plugin_easyEditor');\r\n                var html = \"<img src=\\\"\"+url+\"\\\" alt=\\\"\"+text+\"\\\">\";\r\n                this.previewer.insertAtCaret($(html)[0]);\r\n                return;\r\n            }\r\n            var text = '\\n![' + text + '](' + url + ')\\n';\r\n            this.replaceSelection(text);\r\n        },\r\n        \r\n        replaceSelection: function(replace) {\r\n\r\n            var text = this.editor.getSelection();\r\n\r\n            if (!text.length) {\r\n\r\n                var cur     = this.editor.getCursor(),\r\n                    curLine = this.editor.getLine(cur.line),\r\n                    start   = cur.ch,\r\n                    end     = start;\r\n\r\n                while (end < curLine.length && /[\\w$]+/.test(curLine.charAt(end))) ++end;\r\n                while (start && /[\\w$]+/.test(curLine.charAt(start - 1))) --start;\r\n\r\n                var curWord = start != end && curLine.slice(start, end);\r\n\r\n                if (curWord) {\r\n                    this.editor.setSelection({ line: cur.line, ch: start}, { line: cur.line, ch: end });\r\n                    text = curWord;\r\n                }\r\n            }\r\n\r\n            var html = replace.replace('$1', text);\r\n\r\n            this.editor.replaceSelection(html, 'end');\r\n            this.editor.focus();\r\n        },\r\n\r\n        replaceLine: function(replace) {\r\n            var pos  = this.editor.getDoc().getCursor(),\r\n                text = this.editor.getLine(pos.line),\r\n                html = replace.replace('$1', text);\r\n\r\n            this.editor.replaceRange(html , { line: pos.line, ch: 0 }, { line: pos.line, ch: text.length });\r\n            this.editor.setCursor({ line: pos.line, ch: html.length });\r\n            this.editor.focus();\r\n        },\r\n\r\n        save: function() {\r\n            this.editor.save();\r\n        },\r\n        _setPreviewFocus : function(){\r\n            //var editor = this.$preview.data('plugin_easyEditor')\r\n            this.previewr.win.focus();\r\n            var range = this.range;\r\n            if (!range) {\r\n                if(editor.doc.selection)\r\n                {\r\n                    range = editor.doc.selection.createRange();\r\n                }\r\n\r\n            } else {\r\n                range.select();\r\n                range = this.range = null;\r\n\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var addons = {};\r\n\r\n    Editor.addon = function(name,def) {\r\n       addons[name] = def;\r\n\r\n    }\r\n\r\n\r\n    return textpad.Editor = Editor;\r\n\r\n\r\n});\r\n\r\n"]}