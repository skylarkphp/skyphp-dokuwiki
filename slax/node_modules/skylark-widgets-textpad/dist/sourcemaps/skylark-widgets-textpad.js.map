{"version":3,"sources":["skylark-widgets-textpad.js"],"names":["define","skylark","attach","langx","browser","datax","eventer","noder","geom","elmx","$","Widget","Preview","inherit","klassName","pluginName","options","className","css","onLoaded","theme","_init","this","elem","_elm","randomString","Math","random","toString","substring","doc","ownerDocument","win","defaultView","parentWindow","attachEvents","bootstrap","handleKeypress","handleResizeImage","utils","call","detachEvents","removeClass","removeAttr","unwrap","attr","addClass","wrap","$wrapperElem","parent","containerClass","get","closest","_this","keydown","e","keyCode","isSelectionInsideElement","addEventListener","preventDefault","text","clipboardData","getData","replace","execCommand","tagName","sel","containerNode","toUpperCase","getSelection","rangeCount","getRangeAt","commonAncestorContainer","selection","type","createRange","parentElement","nodeType","parentNode","on","event","stopPropagation","find","width","click","removeFormatting","arg","inFullArea","isSelectionOutsideOfEditor","selectedText","length","range","$parent","node","createElement","html","deleteContents","insertNode","contents","topMostParent","hasParentNode","each","parentsUntil","index","el","removeEmptyTags","removeBlockElementFromSelection","removeBr","removeBrNode","undefined","selectedHtml","cloneContents","temp","replaceWith","childNodes","wrapSelectionWithNodeName","name","blockElement","style","class","attribute","keepHtml","nodeName","isWrapped","isAlreadyWrapped","cloneRange","tag","addAttribute","selectionContainsHtml","clonedSelection","div","appendChild","innerHTML","textContent","localName","surroundContents","removeAllRanges","addRange","removeWrappedDuplicateTag","select","wrapSelectionWithList","tagname","listArray","split","filter","v","wrappedListHtml","map","item","trim","startContainer","result","prop","toLowerCase","hasClass","inArray","isArray","insertAtCaret","appendTo","elementContainsSelection","isActive","readonly","isOrContains","container","i","insertHtml","bindData","closeModal","clearTimeout","setTimeout","hide","getYoutubeVideoIdFromUrl","url","openModal","selector","val","$temp","remove","focus","bold","italic","strike","listOl","listUl","h2","h3","h4","x","alignleft","aligncenter","alignright","alignfull","blockquote","code","inserthorizontalrule","image","prompt","urlRegex","RegExp","test","link","indent","outdent","toMd","toMarkdown","textpad","helper","debounce","func","wait","immediate","timeout","context","args","arguments","callNow","apply","string","indexOf","substr","start","str2json","str","notevil","JSON","parse","_","$1","Function","CodeMirror","EasyEditor","Editor","addons","iframe","mode","markdown","autocomplete","height","maxsplitsize","codemirror","lineWrapping","dragDrop","autoCloseTags","matchTags","autoCloseBrackets","matchBrackets","indentUnit","indentWithTabs","tabSize","hintOptions","completionSingle","toolbar","lblPreview","lblCodeview","lblMarkedview","template","join","$this","tpl","element","buttons","addButtons","fullscreen","title","label","htmleditor","content","preview","children","eq","before","editor","fromTextArea","render","save","trigger","append","contentWindow","document","open","close","previewer","plugin","window","fit","previewContainer","codeContent","codeScroll","codeHeight","previewHeight","scrollHeight","ratio","previewPosition","scrollTop","activetab","setValue","refresh","is","data","showHint","hint","getDoc","POS","getCursor","innerMode","getMode","getTokenAt","state","cur","token","charAt","completeSingle","Object","keys","forEach","addon","init","debouncedRedraw","redraw","bind","addButton","button","extend","replaceInPreview","regexp","callback","results","value","getValue","offset","translateOffset","line","ch","currentvalue","match","matches","from","to","replaceRange","inRange","cursor","push","_buildtoolbar","bar","empty","getOption","getCursorMode","param","addShortcut","key","addKeyMap","addShortcutAction","action","shortcuts","insertImage","replaceSelection","curLine","getLine","end","curWord","slice","setSelection","replaceLine","pos","setCursor","_setPreviewFocus","previewr","def","main"],"mappings":"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","file":"../skylark-widgets-textpad.js","sourcesContent":["define('skylark-widgets-textpad/textpad',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"widgets.textpad\",{});\r\n});\ndefine('skylark-widgets-textpad/Preview',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-data\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-widgets-base/widget\"\r\n],function(langx,browser,datax,eventer,noder,geom,elmx,$,Widget){\r\n\r\n    'use strict';\r\n\r\n    var Preview = Widget.inherit({\r\n        klassName: \"Preview\",\r\n\r\n        pluginName : \"lark.codeeditor.preview\",\r\n\r\n        options : {\r\n            className : 'easyeditor',\r\n            css : null,\r\n            onLoaded : null,\r\n            theme : null\r\n        },\r\n\r\n        _init :   function ( ){\r\n            this.elem = this._elm;\r\n            this.className = this.options.className ;\r\n\r\n            this.css = this.options.css;\r\n            this.onLoaded = this.options.onLoaded;\r\n\r\n            this.randomString = \"Cls\"+Math.random().toString(36).substring(7);\r\n            this.theme = this.options.theme;\r\n\r\n            var doc = this.doc = this._elm.ownerDocument;\r\n            this.win = doc.defaultView || doc.parentWindow;\r\n\r\n            this.attachEvents();\r\n        },\r\n\r\n\r\n        attachEvents : function() {\r\n            this.bootstrap();\r\n            this.handleKeypress();\r\n            this.handleResizeImage();\r\n            this.utils();\r\n\r\n            if(this.onLoaded !== null) {\r\n                this.onLoaded.call(this);\r\n            }\r\n        },\r\n\r\n        // destory editor\r\n        detachEvents : function() {\r\n            var _this = this;\r\n\r\n            $(_this.elem).removeClass(_this.className).removeAttr('contenteditable').unwrap();\r\n        },\r\n\r\n        // Adding necessary classes and attributes in editor\r\n        bootstrap : function() {\r\n            var _this = this;\r\n            $(_this.elem).attr('contentEditable', true).addClass(_this.className).wrap('<div class=\"'+ _this.className +'-wrapper\"></div>');\r\n\r\n            this.$wrapperElem = $(_this.elem).parent();\r\n\r\n            if(_this.css !== null) {\r\n                $(_this.elem).css(_this.css);\r\n            }\r\n\r\n            this.containerClass = '.' + _this.className +'-wrapper';\r\n\r\n            if(typeof _this.elem === 'string') {\r\n                _this.elem = $(_this.elem).get(0);\r\n            }\r\n\r\n            if(_this.theme !== null) {\r\n                $(_this.elem).closest(_this.containerClass).addClass(_this.theme);\r\n            }\r\n        },\r\n\r\n\r\n        // enter and paste key handler\r\n        handleKeypress : function(){\r\n            var _this = this;\r\n\r\n            $(_this.elem).keydown(function(e) {\r\n                if(e.keyCode === 13 && _this.isSelectionInsideElement('li') === false) {\r\n     //               e.preventDefault();\r\n    //\r\n    //                if(e.shiftKey === true) {\r\n    //                    document.execCommand('insertHTML', false, '<br>');\r\n    //                }\r\n    //                else {\r\n    //                    document.execCommand('insertHTML', false, '<br><br>');\r\n    //                }\r\n    //\r\n    //                return false;\r\n                }\r\n            });\r\n\r\n            _this.elem.addEventListener('paste', function(e) {\r\n                e.preventDefault();\r\n                var text = e.clipboardData.getData('text/plain').replace(/\\n/ig, '<br>');\r\n                //document.execCommand('insertHTML', false, text);\r\n                _this.doc.execCommand('insertHTML', false, text);\r\n            });\r\n\r\n        },\r\n\r\n        isSelectionInsideElement : function(tagName) {\r\n            var sel, containerNode;\r\n            var win = this.win,\r\n                doc = this.doc;\r\n            tagName = tagName.toUpperCase();\r\n            if (win.getSelection) {\r\n                sel = win.getSelection();\r\n                if (sel.rangeCount > 0) {\r\n                    containerNode = sel.getRangeAt(0).commonAncestorContainer;\r\n                }\r\n            } else if ( (sel = doc.selection) && sel.type != \"Control\" ) {\r\n                containerNode = sel.createRange().parentElement();\r\n            }\r\n            while (containerNode) {\r\n                if (containerNode.nodeType == 1 && containerNode.tagName == tagName) {\r\n                    return true;\r\n                }\r\n                containerNode = containerNode.parentNode;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        // allowing resizing image\r\n        handleResizeImage : function(){\r\n            var _this = this;\r\n\r\n            $('html').on(_this.containerClass + ' figure', 'click', function(event) {\r\n                event.stopPropagation();\r\n                $(this).addClass('is-resizable');\r\n            });\r\n\r\n            $('html').on(_this.containerClass + ' figure.is-resizable', 'mousemove', function(event) {\r\n                $(this).find('img').css({ 'width' : $(this).width() + 'px' });\r\n            });\r\n\r\n            $(_this.doc).click(function() {\r\n                $(_this.elem).find('figure').removeClass('is-resizable');\r\n            });\r\n        },\r\n\r\n        // get selection\r\n        getSelection : function(){\r\n            if (this.win.getSelection) {\r\n                var selection = this.win.getSelection();\r\n\r\n                if (selection.rangeCount) {\r\n                    return selection;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        // remove formatting\r\n        removeFormatting : function(arg){\r\n            var _this = this;\r\n            var inFullArea = arg.inFullArea;\r\n\r\n            if(_this.isSelectionOutsideOfEditor() === true) {\r\n                return false;\r\n            }\r\n\r\n            if(inFullArea === false) {\r\n                var selection = _this.getSelection();\r\n                var selectedText = selection.toString();\r\n\r\n                if(selection && selectedText.length > 0) {\r\n\r\n                    var range = selection.getRangeAt(0);\r\n                    var $parent = $(range.commonAncestorContainer.parentNode);\r\n\r\n                    if($parent.attr('class') === _this.className || $parent.attr('class') === _this.className + '-wrapper') {\r\n                        var node = _this.doc.createElement('span');\r\n                        $(node).attr('data-value', 'temp').html(selectedText.replace(/\\n/ig, '<br>'));\r\n                        range.deleteContents();\r\n                        range.insertNode(node);\r\n\r\n                        $('[data-value=\"temp\"]').contents().unwrap();\r\n                    }\r\n                    else {\r\n\r\n                        var topMostParent;\r\n                        var hasParentNode = false;\r\n                        $.each($parent.parentsUntil(_this.elem), function(index, el) {\r\n                            topMostParent = el;\r\n                            hasParentNode = true;\r\n                        });\r\n\r\n                        if(hasParentNode === true) {\r\n                            $(topMostParent).html($(topMostParent).text().replace(/\\n/ig, '<br>')).contents().unwrap();\r\n                        }\r\n                        else {\r\n                            $parent.contents().unwrap();\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n            }\r\n            else {\r\n                $(_this.elem).html($(_this.elem).text().replace(/\\n/ig, '<br>'));\r\n            }\r\n\r\n            // _this.removeEmptyTags();\r\n        },\r\n\r\n        // removing empty tags\r\n        removeEmptyTags : function(){\r\n            var _this = this;\r\n            $(_this.elem).html( $(_this.elem).html().replace(/(<(?!\\/)[^>]+>)+(<\\/[^>]+>)+/, '') );\r\n        },\r\n\r\n        // remove block elemenet from selection\r\n        removeBlockElementFromSelection : function(selection, removeBr){\r\n            var _this = this;\r\n            var result;\r\n\r\n            removeBr = removeBr === undefined ? false : removeBr;\r\n            var removeBrNode = '';\r\n            if(removeBr === true) {\r\n                removeBrNode = ', br';\r\n            }\r\n\r\n            var range = selection.getRangeAt(0);\r\n            var selectedHtml = range.cloneContents();\r\n            var temp = _this.doc.createElement('temp');\r\n            $(temp).html(selectedHtml);\r\n            $(temp).find('h1, h2, h3, h4, h5, h6, p, div' + removeBrNode).each(function() { $(this).replaceWith(this.childNodes); });\r\n            result = $(temp).html();\r\n\r\n            return result;\r\n        },\r\n\r\n        // wrap selction with a tag\r\n        wrapSelectionWithNodeName : function(arg){\r\n            var _this = this;\r\n            if(_this.isSelectionOutsideOfEditor() === true) {\r\n                return false;\r\n            }\r\n\r\n            var node = {\r\n                name: 'span',\r\n                blockElement: false,\r\n                style: null,\r\n                class: null,\r\n                attribute: null,\r\n                keepHtml: false\r\n            };\r\n\r\n            if(typeof arg === 'string') {\r\n                node.name = arg;\r\n            }\r\n            else {\r\n                node.name = arg.nodeName || node.name;\r\n                node.blockElement = arg.blockElement || node.blockElement;\r\n                node.style = arg.style || node.style;\r\n                node.class = arg.class || node.class;\r\n                node.attribute = arg.attribute || node.attribute;\r\n                node.keepHtml = arg.keepHtml || node.keepHtml;\r\n            }\r\n\r\n            var selection = _this.getSelection();\r\n\r\n            if(selection && selection.toString().length > 0 && selection.rangeCount) {\r\n                // checking if already wrapped\r\n                var isWrapped = _this.isAlreadyWrapped(selection, node);\r\n\r\n                // wrap node\r\n                var range = selection.getRangeAt(0).cloneRange();\r\n                var tag = _this.doc.createElement(node.name);\r\n\r\n                    // adding necessary attribute to tag\r\n                    if(node.style !== null || node.class !== null || node.attribute !== null) {\r\n                        tag = _this.addAttribute(tag, node);\r\n                    }\r\n\r\n                // if selection contains html, surround contents has some problem with pre html tag and raw text selection\r\n                if(_this.selectionContainsHtml(range)) {\r\n                    range = selection.getRangeAt(0);\r\n\r\n                    if(node.keepHtml === true) {\r\n                        var clonedSelection = range.cloneContents();\r\n                        var div = _this.doc.createElement('div');\r\n                        div.appendChild(clonedSelection);\r\n                        $(tag).html(div.innerHTML);\r\n                    }\r\n                    else {\r\n                        tag.textContent = selection.toString();\r\n                    }\r\n\r\n                    range.deleteContents();\r\n                    range.insertNode(tag);\r\n\r\n                    if(range.commonAncestorContainer.localName === node.name) {\r\n                        $(range.commonAncestorContainer).contents().unwrap();\r\n                        _this.removeEmptyTags();\r\n                    }\r\n                }\r\n                else {\r\n                    range.surroundContents(tag);\r\n                    selection.removeAllRanges();\r\n                    selection.addRange(range);\r\n                }\r\n\r\n                if(isWrapped === true) {\r\n                    _this.removeWrappedDuplicateTag(tag);\r\n                }\r\n\r\n                _this.removeEmptyTags();\r\n                //selection.removeAllRanges();\r\n                selection.select();\r\n                range.select();\r\n            }\r\n        },\r\n\r\n        // wrap selection with unordered list\r\n        wrapSelectionWithList : function(tagname){\r\n            var _this = this;\r\n            tagname = tagname || 'ul';\r\n\r\n            // preventing outside selection\r\n            if(_this.isSelectionOutsideOfEditor() === true) {\r\n                return false;\r\n            }\r\n\r\n            // if text selected\r\n            var selection = _this.getSelection();\r\n            if(selection && selection.toString().length > 0 && selection.rangeCount) {\r\n                var selectedHtml = _this.removeBlockElementFromSelection(selection, true);\r\n                var listArray = selectedHtml.split('\\n').filter(function(v){return v!=='';});\r\n                var wrappedListHtml = $.map(listArray, function(item) {\r\n                    return '<li>' + $.trim(item) + '</li>';\r\n                });\r\n\r\n                var node = _this.doc.createElement(tagname);\r\n                $(node).html(wrappedListHtml);\r\n\r\n                var range = selection.getRangeAt(0);\r\n                range.deleteContents();\r\n                range.insertNode(node);\r\n\r\n                selection.removeAllRanges();\r\n            }\r\n\r\n        },\r\n\r\n        // if selection contains html tag, surround content fails if selection contains html\r\n        selectionContainsHtml : function(range){\r\n            var _this = this;\r\n            if(range.startContainer.parentNode.className === _this.className + '-wrapper') return false;\r\n            else return true;\r\n        },\r\n\r\n        // if already wrapped with same tag\r\n        isAlreadyWrapped : function(selection, node){\r\n            var _this = this;\r\n            var range = selection.getRangeAt(0);\r\n            var el = $(range.commonAncestorContainer);\r\n            var result = false;\r\n\r\n            if( el.parent().prop('tagName').toLowerCase() === node.name && el.parent().hasClass(_this.className) === false ) {\r\n                result = true;\r\n            }\r\n            else if(node.blockElement === true) {\r\n                $.each(el.parentsUntil(_this.elem), function(index, el) {\r\n                    var tag = el.tagName.toLowerCase();\r\n                    if( $.inArray(tag, ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']) !== -1 ) {\r\n                        result = true;\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                $.each(el.parentsUntil(_this.elem), function(index, el) {\r\n                    var tag = el.tagName.toLowerCase();\r\n                    if( tag === node.name ) {\r\n                        result = true;\r\n                    }\r\n                });\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        // remove wrap if already wrapped with same tag\r\n        removeWrappedDuplicateTag : function(tag){\r\n            var _this = this;\r\n            var tagName = tag.tagName;\r\n\r\n            $(tag).unwrap();\r\n\r\n            if($(tag).prop('tagName') === tagName && $(tag).parent().hasClass(_this.className) === false && $(tag).parent().hasClass(_this.className + '-wrapper')) {\r\n                $(tag).unwrap();\r\n            }\r\n        },\r\n\r\n        // adding attribute in tag\r\n        addAttribute : function(tag, node){\r\n            if(node.style !== null) {\r\n                $(tag).attr('style', node.style);\r\n            }\r\n\r\n            if(node.class !== null) {\r\n                $(tag).addClass(node.class);\r\n            }\r\n\r\n            if(node.attribute !== null) {\r\n                if($.isArray(node.attribute) === true) {\r\n                    $(tag).attr(node.attribute[0], node.attribute[1]);\r\n                }\r\n                else {\r\n                    $(tag).attr(node.attribute);\r\n                }\r\n            }\r\n\r\n            return tag;\r\n        },\r\n\r\n        // insert a node into cursor point in editor\r\n        insertAtCaret : function(node){\r\n            var _this = this;\r\n            if(_this.isSelectionOutsideOfEditor() === true) {\r\n                return false;\r\n            }\r\n\r\n            if(_this.getSelection()) {\r\n                var range = _this.getSelection().getRangeAt(0);\r\n                range.insertNode(node);\r\n            }\r\n            else {\r\n                $(node).appendTo(_this.elem);\r\n            }\r\n        },\r\n\r\n        // checking if selection outside of editor or not\r\n        isSelectionOutsideOfEditor : function(){\r\n            //return false;\r\n            return !this.elementContainsSelection(this.elem);\r\n        },\r\n\r\n        isActive : function(){\r\n            //return false;\r\n            return this.elementContainsSelection(this.elem);\r\n        },\r\n\r\n        readonly : function(readonly) {\r\n            if (readonly === undefined) {\r\n                return $(this.elem).attr('contentEditable');\r\n            } else {\r\n                $(this.elem).attr('contentEditable', readonly && true);\r\n                return this;\r\n            }\r\n        },\r\n\r\n        // node contains in containers or not\r\n        isOrContains : function(node, container) {\r\n            while (node) {\r\n                if (node === container) {\r\n                    return true;\r\n                }\r\n                node = node.parentNode;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        // selected text is inside container\r\n        elementContainsSelection : function(el) {\r\n            var _this = this;\r\n            var sel;\r\n            if (this.win.getSelection) {\r\n                sel = this.win.getSelection();\r\n                if (sel.rangeCount > 0) {\r\n                    for (var i = 0; i < sel.rangeCount; ++i) {\r\n                        if (!_this.isOrContains(sel.getRangeAt(i).commonAncestorContainer, el)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                }\r\n            } else if ( (sel = _this.doc.selection) && sel.type !== \"Control\") {\r\n                return _this.isOrContains(sel.createRange().parentElement(), el);\r\n            }\r\n            return false;\r\n        },\r\n\r\n        // insert html chunk into editor's temp tag\r\n        insertHtml : function(html){\r\n            var _this = this;\r\n            $(_this.elem).find('temp').html(html);\r\n        },\r\n\r\n        // utility of editor\r\n        utils : function(){\r\n            var _this = this;\r\n\r\n            $('html').on('.'+ _this.className +'-modal-close', 'click', function(event) {\r\n                event.preventDefault();\r\n                _this.closeModal('#' + $(this).closest('.'+ _this.className + '-modal').attr('id'));\r\n            });\r\n\r\n            if( $('.' + _this.randomString + '-bind').length > 0 ) {\r\n                var bindData;\r\n                $('html').on(_this.elem, 'click keyup', function() {\r\n                    var el = _this.elem;\r\n                    clearTimeout(bindData);\r\n                    bindData = setTimeout(function(){ $('.' + _this.randomString + '-bind').html( $(el).html() ); }, 250);\r\n                });\r\n            }\r\n\r\n            $(_this.doc).click(function(event) {\r\n                $('.' + _this.className).closest('.' + _this.className + '-wrapper').find('.' + _this.className + '-toolbar > ul > li > ul').hide();\r\n            });\r\n        },\r\n\r\n        // youtube video id from url\r\n        getYoutubeVideoIdFromUrl : function(url){\r\n            if(url.length === 0) return false;\r\n            var videoId = '';\r\n            url = url.replace(/(>|<)/gi,'').split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);\r\n            if(url[2] !== undefined) {\r\n                videoId = url[2].split(/[^0-9a-z_\\-]/i);\r\n                videoId = videoId[0];\r\n            }\r\n            else {\r\n                videoId = url;\r\n            }\r\n            return videoId;\r\n        },\r\n\r\n        // opening modal window\r\n        openModal : function(selector){\r\n            var temp = this.doc.createElement('temp');\r\n            temp.textContent = '.';\r\n            this.insertAtCaret(temp);\r\n\r\n            $(selector).removeClass('is-hidden');\r\n        },\r\n\r\n        // closing modal window\r\n        closeModal : function(selector){\r\n            var _this = this;\r\n\r\n            $(selector).addClass('is-hidden').find('input').val('');\r\n            $(selector).find('.' + _this.className + '-modal-content-body-loader').css('width', '0');\r\n            var $temp = $(this.elem).find('temp');\r\n\r\n            if($temp.html() === '.') {\r\n                $temp.remove();\r\n            }\r\n            else {\r\n                $temp.contents().unwrap();\r\n            }\r\n\r\n            $(this.elem).focus();\r\n        },\r\n\r\n        bold : function(){\r\n           this.doc.execCommand(\"Bold\");\r\n           //this.wrapSelectionWithNodeName({ nodeName: 'strong', keepHtml: true });\r\n        },\r\n\r\n        italic : function(){\r\n           this.doc.execCommand(\"Italic\");\r\n           //this.wrapSelectionWithNodeName({ nodeName: 'em', keepHtml: true });\r\n        },\r\n\r\n        strike : function(){\r\n           this.doc.execCommand(\"strikethrough\");\r\n           //this.wrapSelectionWithNodeName({ nodeName: 'strong', keepHtml: true });\r\n        },\r\n\r\n        listOl : function(){\r\n           this.doc.execCommand(\"insertorderedlist\");\r\n           //this.wrapSelectionWithNodeName({ nodeName: 'strong', keepHtml: true });\r\n        },\r\n\r\n        listUl : function(){\r\n           this.doc.execCommand(\"insertunorderedlist\");\r\n           //this.wrapSelectionWithNodeName({ nodeName: 'strong', keepHtml: true });\r\n        },\r\n\r\n        h2 : function(){\r\n           this.doc.execCommand(\"h2\");\r\n            //this.wrapSelectionWithNodeName({ nodeName: 'h2', blockElement: true });\r\n        },\r\n\r\n        h3 : function(){\r\n           this.doc.execCommand(\"h3\");\r\n            //this.wrapSelectionWithNodeName({ nodeName: 'h3', blockElement: true });\r\n        },\r\n\r\n        h4 : function(){\r\n           this.doc.execCommand(\"h4\");\r\n            //this.wrapSelectionWithNodeName({ nodeName: 'h4', blockElement: true });\r\n        },\r\n\r\n        x : function(){\r\n           this.doc.execCommand(\"h4\");\r\n        },\r\n\r\n        alignleft : function(){\r\n           this.doc.execCommand(\"justifyleft\");\r\n            //this.wrapSelectionWithNodeName({ nodeName: 'p', style: 'text-align: left', class: 'text-left', keepHtml: true });\r\n        },\r\n\r\n        aligncenter : function(){\r\n           this.doc.execCommand(\"justifycenter\");\r\n            //this.wrapSelectionWithNodeName({ nodeName: 'p', style: 'text-align: center', class: 'text-center', keepHtml: true });\r\n        },\r\n\r\n        alignright : function(){\r\n           this.doc.execCommand(\"justifyright\");\r\n            //this.wrapSelectionWithNodeName({ nodeName: 'p', style: 'text-align: right', class: 'text-right', keepHtml: true });\r\n        },\r\n\r\n        alignfull : function(){\r\n           this.doc.execCommand(\"justifyfull\");\r\n            //this.wrapSelectionWithNodeName({ nodeName: 'p', style: 'text-align: right', class: 'text-right', keepHtml: true });\r\n        },\r\n\r\n        blockquote : function(){\r\n           this.doc.execCommand(\"blockquote\");\r\n            //this.wrapSelectionWithNodeName({ nodeName: 'blockquote' });\r\n        },\r\n\r\n        code : function(){\r\n           this.doc.execCommand(\"p\");\r\n            //this.wrapSelectionWithNodeName({ nodeName: 'pre' });\r\n        },\r\n\r\n        inserthorizontalrule : function(){\r\n           this.doc.execCommand(\"inserthorizontalrule\");\r\n        },\r\n\r\n\r\n        image : function(){\r\n           var url = prompt('Insert Image URL','http://');\r\n           var urlRegex = new RegExp('^((http|https)://|(mailto:)|(//))[a-z0-9]', 'i');\r\n           if (url !== null && url !== '' && url !== 'http://' && urlRegex.test(url)) {\r\n               this.doc.execCommand(\"insertimage\", false, url);\r\n           }\r\n        },\r\n\r\n        link : function(){\r\n            var url = prompt('Insert URL','http://');\r\n            var urlRegex = new RegExp('^((http|https)://|(mailto:)|(//))[a-z0-9]', 'i');\r\n            if (url !== null && url !== '' && url !== 'http://' && urlRegex.test(url)) {\r\n               this.doc.execCommand(\"createlink\", false, url);\r\n            }\r\n            //this.wrapSelectionWithNodeName({ nodeName: 'a', attribute: ['href', prompt('Insert link', '')] });\r\n        },\r\n\r\n        indent : function(){\r\n           this.doc.execCommand(\"indent\");\r\n        },\r\n\r\n        outdent : function(){\r\n           this.doc.execCommand(\"outdent\");\r\n        },\r\n\r\n\r\n        toMd : function() {\r\n            return  toMarkdown(this.elem.innerHTML);\r\n        }\r\n    });\r\n\r\n    return Preview;\r\n});\r\n\ndefine('skylark-widgets-textpad/helper',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-query\",\r\n\t\"./textpad\"\r\n],function(langx,$,textpad) {\r\n    var helper = {\r\n        debounce : function(func, wait, immediate) {\r\n            var timeout;\r\n            return function() {\r\n                var context = this, args = arguments;\r\n                var later = function() {\r\n                    timeout = null;\r\n                    if (!immediate) func.apply(context, args);\r\n                };\r\n                var callNow = immediate && !timeout;\r\n                clearTimeout(timeout);\r\n                timeout = setTimeout(later, wait);\r\n                if (callNow) func.apply(context, args);\r\n            };\r\n        },\r\n        options : function(string) {\r\n\r\n            if (langx.type(string)!='string') return string;\r\n\r\n            if (string.indexOf(':') != -1 && string.trim().substr(-1) != '}') {\r\n                string = '{'+string+'}';\r\n            }\r\n\r\n            var start = (string ? string.indexOf(\"{\") : -1), options = {};\r\n\r\n            if (start != -1) {\r\n                try {\r\n                    options = helper.str2json(string.substr(start));\r\n                } catch (e) {}\r\n            }\r\n\r\n            return options;\r\n        },\r\n        str2json : function(str, notevil) {\r\n            try {\r\n                if (notevil) {\r\n                    return JSON.parse(str\r\n                        // wrap keys without quote with valid double quote\r\n                        .replace(/([\\$\\w]+)\\s*:/g, function(_, $1){return '\"'+$1+'\":';})\r\n                        // replacing single quote wrapped ones to double quote\r\n                        .replace(/'([^']+)'/g, function(_, $1){return '\"'+$1+'\"';})\r\n                    );\r\n                } else {\r\n                    return (new Function(\"\", \"var json = \" + str + \"; return JSON.parse(JSON.stringify(json));\"))();\r\n                }\r\n            } catch(e) { return false; }\r\n        }\r\n    };\r\n\r\n\r\n    return textpad.helper = helper;\r\n\r\n  \t\r\n });\ndefine('skylark-widgets-textpad/editor',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-widgets-base/widget\",\r\n    \"skylark-codemirror/CodeMirror\",\r\n    \"skylark-easyeditor/EasyEditor\",\r\n    \"./textpad\",\r\n    \"./Preview\",\r\n    \"./helper\"\r\n],function(langx, $, Widget,CodeMirror,EasyEditor,textpad,Preview,helper){\r\n    var Editor = Widget.inherit({\r\n        options: {\r\n            addons       : [],\r\n            iframe       : false,\r\n            mode         : 'split',\r\n            markdown     : false,\r\n            autocomplete : true,\r\n            height       : 500,\r\n            maxsplitsize : 1000,\r\n            codemirror   : { \r\n                            mode: 'htmlmixed', \r\n                            lineWrapping: true, \r\n                            dragDrop: false, \r\n                            autoCloseTags: true, \r\n                            matchTags: true, \r\n                            autoCloseBrackets: true, \r\n                            matchBrackets: true, \r\n                            indentUnit: 4, \r\n                            indentWithTabs: false, \r\n                            tabSize: 4, \r\n                            hintOptions: {\r\n                                completionSingle:\r\n                                false\r\n                            } \r\n                            },\r\n            toolbar      : [ \r\n                            'bold', \r\n                            'italic', \r\n                            'strike', \r\n                            'link', \r\n                            'image', \r\n                            'blockquote', \r\n                            'listUl', \r\n                            'listOl' \r\n                            ],\r\n            lblPreview   : 'Preview',\r\n            lblCodeview  : 'HTML',\r\n            lblMarkedview: 'Markdown',\r\n\r\n            template : [\r\n                '<div class=\"uk-htmleditor uk-clearfix\" data-mode=\"split\">',\r\n                    '<div class=\"uk-htmleditor-navbar\">',\r\n                        '<ul class=\"uk-htmleditor-navbar-nav uk-htmleditor-toolbar\"></ul>',\r\n                        '<div class=\"uk-htmleditor-navbar-flip\">',\r\n                            '<ul class=\"uk-htmleditor-navbar-nav\">',\r\n                                '<li class=\"uk-htmleditor-button-code\"><a>{:lblCodeview}</a></li>',\r\n                                '<li class=\"uk-htmleditor-button-preview\"><a>{:lblPreview}</a></li>',\r\n                                '<li><a data-htmleditor-button=\"fullscreen\"><i class=\"fa fa-expand\"></i></a></li>',\r\n                            '</ul>',\r\n                        '</div>',\r\n                    '</div>',\r\n                    '<div class=\"uk-htmleditor-content\">',\r\n                        '<div class=\"uk-htmleditor-code\"></div>',\r\n                        '<div class=\"uk-htmleditor-preview\"><div></div></div>',\r\n                    '</div>',\r\n                '</div>'\r\n            ].join('')\r\n\r\n        },\r\n\r\n\r\n        _init: function() {\r\n\r\n            var $this = this, \r\n                tpl = this.options.template;\r\n\r\n            this.element = $(this._elm); // TODO\r\n\r\n            this.options.iframe = true;\r\n            this.CodeMirror = this.options.CodeMirror || CodeMirror;\r\n            this.buttons    = {};\r\n\r\n\r\n            this.addButtons({\r\n                fullscreen: {\r\n                    title  : 'Fullscreen',\r\n                    label  : '<i class=\"fa fa-expand\"></i>'\r\n                },\r\n                bold : {\r\n                    title  : 'Bold',\r\n                    label  : '<i class=\"fa fa-bold\"></i>'\r\n                },\r\n                italic : {\r\n                    title  : 'Italic',\r\n                    label  : '<i class=\"fa fa-italic\"></i>'\r\n                },\r\n                strike : {\r\n                    title  : 'Strikethrough',\r\n                    label  : '<i class=\"fa fa-strikethrough\"></i>'\r\n                },\r\n                blockquote : {\r\n                    title  : 'Blockquote',\r\n                    label  : '<i class=\"fa fa-quote-right\"></i>'\r\n                },\r\n                link : {\r\n                    title  : 'Link',\r\n                    label  : '<i class=\"fa fa-link\"></i>'\r\n                },\r\n                image : {\r\n                    title  : 'Image',\r\n                    label  : '<i class=\"fa fa-image\"></i>'\r\n                },\r\n                listUl : {\r\n                    title  : 'Unordered List',\r\n                    label  : '<i class=\"fa fa-list-ul\"></i>'\r\n                },\r\n                listOl : {\r\n                    title  : 'Ordered List',\r\n                    label  : '<i class=\"fa fa-list-ol\"></i>'\r\n                }\r\n\r\n            });\r\n\r\n\r\n            tpl = tpl.replace(/\\{:lblPreview}/g, this.options.lblPreview);\r\n            tpl = tpl.replace(/\\{:lblCodeview}/g, this.options.lblCodeview);\r\n\r\n            this.htmleditor = $(tpl);\r\n            this.content    = this.htmleditor.find('.uk-htmleditor-content');\r\n            this.toolbar    = this.htmleditor.find('.uk-htmleditor-toolbar');\r\n            $(this.toolbar)\r\n                 .attr('unselectable', 'on')\r\n                 .css('user-select', 'none')\r\n                 .on('selectstart', false);\r\n            this.preview    = this.htmleditor.find('.uk-htmleditor-preview').children().eq(0);\r\n            this.code       = this.htmleditor.find('.uk-htmleditor-code');\r\n\r\n            this.element.before(this.htmleditor).appendTo(this.code);\r\n            this.editor = this.CodeMirror.fromTextArea(this.element[0], this.options.codemirror);\r\n            this.editor.htmleditor = this;\r\n            this.editor.on('change', helper.debounce(function() { $this.render(); }, 150));\r\n            this.editor.on('change', function() {\r\n                $this.editor.save();\r\n                $this.element.trigger('input');\r\n            });\r\n            this.code.find('.CodeMirror').css('height', this.options.height);\r\n\r\n            // iframe mode?\r\n            if (this.options.iframe) {\r\n\r\n                this.iframe = $('<iframe class=\"uk-htmleditor-iframe\" frameborder=\"0\" scrolling=\"auto\" height=\"100\" width=\"100%\"></iframe>');\r\n                this.preview.append(this.iframe);\r\n\r\n                // must open and close document object to start using it!\r\n                this.iframe[0].contentWindow.document.open();\r\n                this.iframe[0].contentWindow.document.close();\r\n\r\n                this.preview.container = $(this.iframe[0].contentWindow.document).find('body');\r\n\r\n                // append custom stylesheet\r\n                if (typeof(this.options.iframe) === 'string') {\r\n                    this.preview.container.parent().append('<link rel=\"stylesheet\" href=\"'+this.options.iframe+'\">');\r\n                }\r\n\r\n            } else {\r\n                this.preview.container = this.preview;\r\n            }\r\n            this.previewer   = this.preview.container.plugin(\"lark.codeeditor.preview\");\r\n\r\n            //$win.on('resize load', helper.debounce(function() { $this.fit(); }, 200));\r\n            $(window).on('resize load', helper.debounce(function() { $this.fit(); }, 200));\r\n\r\n            var previewContainer = this.iframe ? this.preview.container:$this.preview.parent(),\r\n                codeContent      = this.code.find('.CodeMirror-sizer'),\r\n                codeScroll       = this.code.find('.CodeMirror-scroll').on('scroll', helper.debounce(function() {\r\n\r\n                    if ($this.htmleditor.attr('data-mode') == 'tab') return;\r\n\r\n                    // calc position\r\n                    var codeHeight      = codeContent.height() - codeScroll.height(),\r\n                        previewHeight   = previewContainer[0].scrollHeight - ($this.iframe ? $this.iframe.height() : previewContainer.height()),\r\n                        ratio           = previewHeight / codeHeight,\r\n                        previewPosition = codeScroll.scrollTop() * ratio;\r\n\r\n                    // apply new scroll\r\n                    previewContainer.scrollTop(previewPosition);\r\n\r\n                }, 10));\r\n\r\n            this.htmleditor.on('click', '.uk-htmleditor-button-code, .uk-htmleditor-button-preview', function(e) {\r\n\r\n                e.preventDefault();\r\n\r\n                if ($this.htmleditor.attr('data-mode') == 'tab') {\r\n\r\n                    $this.htmleditor.find('.uk-htmleditor-button-code, .uk-htmleditor-button-preview').removeClass('uk-active').filter(this).addClass('uk-active');\r\n\r\n                    $this.activetab = $(this).hasClass('uk-htmleditor-button-code') ? 'code' : 'preview';\r\n\r\n                    if ($this.activetab == 'code') {\r\n                        //var visualEditor = $this.$preview.data('plugin_easyEditor');\r\n                        $this.editor.setValue($this.previewer.toMd());\r\n\r\n                    }\r\n                    $this.htmleditor.attr('data-active-tab', $this.activetab);\r\n                    $this.editor.refresh();\r\n                }\r\n            });\r\n\r\n            // toolbar actions\r\n            this.htmleditor.on('click', 'a[data-htmleditor-button]', function() {\r\n\r\n                if (!$this.code.is(':visible')) {\r\n                    //var editor = $this.$preview.data('plugin_easyEditor');\r\n                    $this.previewer[ $(this).data('htmleditor-button')]();\r\n                    return;\r\n                }\r\n\r\n                $this.trigger('action.' + $(this).data('htmleditor-button'), [$this.editor]);\r\n            });\r\n\r\n            this.preview.parent().css('height', this.code.height());\r\n\r\n            // autocomplete\r\n            if (this.options.autocomplete && this.CodeMirror.showHint && this.CodeMirror.hint && this.CodeMirror.hint.html) {\r\n\r\n                this.editor.on('inputRead', helper.debounce(function() {\r\n                    var doc = $this.editor.getDoc(), POS = doc.getCursor(), mode = $this.CodeMirror.innerMode($this.editor.getMode(), $this.editor.getTokenAt(POS).state).mode.name;\r\n\r\n                    if (mode == 'xml') { //html depends on xml\r\n\r\n                        var cur = $this.editor.getCursor(), token = $this.editor.getTokenAt(cur);\r\n\r\n                        if (token.string.charAt(0) == '<' || token.type == 'attribute') {\r\n                            $this.CodeMirror.showHint($this.editor, $this.CodeMirror.hint.html, { completeSingle: false });\r\n                        }\r\n                    }\r\n                }, 100));\r\n            }\r\n\r\n            this.addons = [];\r\n            (this.options.addons.length ? this.options.addons : Object.keys(addons)).forEach(function(addon) {\r\n\r\n                if (addons[addon].init) {\r\n                    addons[addon].init($this);\r\n                    $this.addons[addon] = true;\r\n                }\r\n\r\n            });\r\n\r\n\r\n            this.debouncedRedraw = helper.debounce(function () { $this.redraw(); }, 5);\r\n\r\n            //this.on('init.uk.component', function() {\r\n                $this.debouncedRedraw();\r\n            //});\r\n\r\n            this.element.attr('data-uk-check-display', 1).on('display.uk.check', function(e) {\r\n                if (this.htmleditor.is(\":visible\")) this.fit();\r\n            }.bind(this));\r\n\r\n            //editors.push(this);\r\n        },\r\n\r\n        addButton: function(name, button) {\r\n            this.buttons[name] = button;\r\n        },\r\n\r\n        addButtons: function(buttons) {\r\n            langx.extend(this.buttons, buttons);\r\n        },\r\n\r\n        replaceInPreview: function(regexp, callback) {\r\n\r\n            var editor = this.editor, results = [], value = editor.getValue(), offset = -1, index = 0;\r\n\r\n            this.currentvalue = this.currentvalue.replace(regexp, function() {\r\n\r\n                offset = value.indexOf(arguments[0], ++offset);\r\n\r\n                var match  = {\r\n                    matches: arguments,\r\n                    from   : translateOffset(offset),\r\n                    to     : translateOffset(offset + arguments[0].length),\r\n                    replace: function(value) {\r\n                        editor.replaceRange(value, match.from, match.to);\r\n                    },\r\n                    inRange: function(cursor) {\r\n\r\n                        if (cursor.line === match.from.line && cursor.line === match.to.line) {\r\n                            return cursor.ch >= match.from.ch && cursor.ch < match.to.ch;\r\n                        }\r\n\r\n                        return  (cursor.line === match.from.line && cursor.ch   >= match.from.ch) ||\r\n                                (cursor.line >   match.from.line && cursor.line <  match.to.line) ||\r\n                                (cursor.line === match.to.line   && cursor.ch   <  match.to.ch);\r\n                    }\r\n                };\r\n\r\n                var result = typeof(callback) === 'string' ? callback : callback(match, index);\r\n\r\n                if (!result && result !== '') {\r\n                    return arguments[0];\r\n                }\r\n\r\n                index++;\r\n\r\n                results.push(match);\r\n                return result;\r\n            });\r\n\r\n            function translateOffset(offset) {\r\n                var result = editor.getValue().substring(0, offset).split('\\n');\r\n                return { line: result.length - 1, ch: result[result.length - 1].length }\r\n            }\r\n\r\n            return results;\r\n        },\r\n\r\n        _buildtoolbar: function() {\r\n\r\n            if (!(this.options.toolbar && this.options.toolbar.length)) return;\r\n\r\n            var $this = this, bar = [];\r\n\r\n            this.toolbar.empty();\r\n\r\n            this.options.toolbar.forEach(function(button) {\r\n                if (!$this.buttons[button]) return;\r\n\r\n                var title = $this.buttons[button].title ? $this.buttons[button].title : button;\r\n\r\n                bar.push('<li><a data-htmleditor-button=\"'+button+'\" title=\"'+title+'\" data-uk-tooltip>'+$this.buttons[button].label+'</a></li>');\r\n            });\r\n\r\n            this.toolbar.html(bar.join('\\n'));\r\n        },\r\n\r\n        fit: function() {\r\n\r\n            var mode = this.options.mode;\r\n\r\n            if (mode == 'split' && this.htmleditor.width() < this.options.maxsplitsize) {\r\n                mode = 'tab';\r\n            }\r\n\r\n            if (mode == 'tab') {\r\n                if (!this.activetab) {\r\n                    this.activetab = 'code';\r\n                    this.htmleditor.attr('data-active-tab', this.activetab);\r\n                }\r\n\r\n                this.htmleditor.find('.uk-htmleditor-button-code, .uk-htmleditor-button-preview').removeClass('uk-active')\r\n                    .filter(this.activetab == 'code' ? '.uk-htmleditor-button-code' : '.uk-htmleditor-button-preview')\r\n                    .addClass('uk-active');\r\n            }\r\n\r\n            //var visualEditor = this.$preview.data('plugin_easyEditor');\r\n            this.previewer.readonly(mode == 'tab');\r\n\r\n            this.editor.refresh();\r\n            this.preview.parent().css('height', this.code.height());\r\n\r\n            this.htmleditor.attr('data-mode', mode);\r\n        },\r\n\r\n        redraw: function() {\r\n            this._buildtoolbar();\r\n            this.render();\r\n            this.fit();\r\n        },\r\n\r\n        getMode: function() {\r\n            return this.editor.getOption('mode');\r\n        },\r\n\r\n        getCursorMode: function() {\r\n            var param = { mode: 'html'};\r\n            this.trigger('cursorMode', [param]);\r\n            return param.mode;\r\n        },\r\n\r\n        render: function() {\r\n\r\n            this.currentvalue = this.editor.getValue();\r\n\r\n            // empty code\r\n            if (!this.currentvalue) {\r\n\r\n                this.element.val('');\r\n                this.preview.container.html('');\r\n\r\n                return;\r\n            }\r\n\r\n            this.trigger('render', [this]);\r\n            this.trigger('renderLate', [this]);\r\n\r\n            this.preview.container.html(this.currentvalue);\r\n        },\r\n\r\n        addShortcut: function(name, callback) {\r\n            var map = {};\r\n            if (!langx.isArray(name)) {\r\n                name = [name];\r\n            }\r\n\r\n            name.forEach(function(key) {\r\n                map[key] = callback;\r\n            });\r\n\r\n            this.editor.addKeyMap(map);\r\n\r\n            return map;\r\n        },\r\n\r\n        addShortcutAction: function(action, shortcuts) {\r\n            var editor = this;\r\n            this.addShortcut(shortcuts, function() {\r\n                editor.element.trigger('action.' + action, [editor.editor]);\r\n            });\r\n        },\r\n\r\n        insertImage : function(url,text) {\r\n            if (!this.code.is(':visible')) {\r\n                //var editor = this.$preview.data('plugin_easyEditor');\r\n                var html = \"<img src=\\\"\"+url+\"\\\" alt=\\\"\"+text+\"\\\">\";\r\n                this.previewer.insertAtCaret($(html)[0]);\r\n                return;\r\n            }\r\n            var text = '\\n![' + text + '](' + url + ')\\n';\r\n            this.replaceSelection(text);\r\n        },\r\n        \r\n        replaceSelection: function(replace) {\r\n\r\n            var text = this.editor.getSelection();\r\n\r\n            if (!text.length) {\r\n\r\n                var cur     = this.editor.getCursor(),\r\n                    curLine = this.editor.getLine(cur.line),\r\n                    start   = cur.ch,\r\n                    end     = start;\r\n\r\n                while (end < curLine.length && /[\\w$]+/.test(curLine.charAt(end))) ++end;\r\n                while (start && /[\\w$]+/.test(curLine.charAt(start - 1))) --start;\r\n\r\n                var curWord = start != end && curLine.slice(start, end);\r\n\r\n                if (curWord) {\r\n                    this.editor.setSelection({ line: cur.line, ch: start}, { line: cur.line, ch: end });\r\n                    text = curWord;\r\n                }\r\n            }\r\n\r\n            var html = replace.replace('$1', text);\r\n\r\n            this.editor.replaceSelection(html, 'end');\r\n            this.editor.focus();\r\n        },\r\n\r\n        replaceLine: function(replace) {\r\n            var pos  = this.editor.getDoc().getCursor(),\r\n                text = this.editor.getLine(pos.line),\r\n                html = replace.replace('$1', text);\r\n\r\n            this.editor.replaceRange(html , { line: pos.line, ch: 0 }, { line: pos.line, ch: text.length });\r\n            this.editor.setCursor({ line: pos.line, ch: html.length });\r\n            this.editor.focus();\r\n        },\r\n\r\n        save: function() {\r\n            this.editor.save();\r\n        },\r\n        _setPreviewFocus : function(){\r\n            //var editor = this.$preview.data('plugin_easyEditor')\r\n            this.previewr.win.focus();\r\n            var range = this.range;\r\n            if (!range) {\r\n                if(editor.doc.selection)\r\n                {\r\n                    range = editor.doc.selection.createRange();\r\n                }\r\n\r\n            } else {\r\n                range.select();\r\n                range = this.range = null;\r\n\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var addons = {};\r\n\r\n    Editor.addon = function(name,def) {\r\n       addons[name] = def;\r\n\r\n    }\r\n\r\n\r\n    return textpad.Editor = Editor;\r\n\r\n\r\n});\r\n\r\n\ndefine('skylark-widgets-textpad/main',[\r\n    \"./textpad\",\r\n    \"./editor\"\r\n], function(textpad) {\r\n    return textpad;\r\n});\ndefine('skylark-widgets-textpad', ['skylark-widgets-textpad/main'], function (main) { return main; });\n\n"]}