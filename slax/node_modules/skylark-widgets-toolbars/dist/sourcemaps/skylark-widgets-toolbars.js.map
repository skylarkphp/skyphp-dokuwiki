{"version":3,"sources":["skylark-widgets-toolbars.js"],"names":["define","skylark","attach","types","$","Widget","toolbars","ToolbarItem","inherit","options","template","menu","menuWrapper","menuItem","separator","_construct","opts","this","action","toolbar","prototype","call","_init","addToolItem","wrapper","_elm","el","find","attr","title","addClass","name","data","setIcon","icon","appendTo","renderMenu","_this","on","e","param","preventDefault","hasClass","toggleClass","siblings","removeClass","is","offset","left","outerWidth","css","right","trigger","command","btn","currentTarget","state","args","updates","undefined","_doActive","value","_doDisabled","iconClassOf","classes","icons","text","render","$menuBtnEl","$menuItemEl","k","len","ref","ref1","results","isArray","menuEl","length","data-param","push","params","execute","get","tooltip","htmlTag","disableTag","editable","_options","active","disabled","needFocus","shortcut","_Toolbar","Toolbar","klassName","pluginName","parent","_xtoolbar","instantiate","buttons","actions","i","toolItemCtor","addSeparator","item","findButton","button","list","addButton","main"],"mappings":"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","file":"../skylark-widgets-toolbars.js","sourcesContent":["define('skylark-widgets-toolbars/toolbars',[\r\n\t\"skylark-langx-ns\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"widgets.toolbars\",{});\r\n});\ndefine('skylark-widgets-toolbars/toolbar-item',[\r\n  \"skylark-langx-types\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-widgets-base/widget\",\r\n  \"./toolbars\"  \r\n],function(types, $, Widget,toolbars){ \r\n  var slice = [].slice;\r\n\r\n  var ToolbarItem = Widget.inherit( {\r\n\r\n    options : {\r\n      template: '<li><a tabindex=\"-1\" unselectable=\"on\" class=\"toolbar-item\" href=\"javascript:;\"><span></span></a></li>',\r\n\r\n      menu : {\r\n        menuWrapper: '<div class=\"toolbar-menu\"></div>',\r\n        menuItem: '<li><a tabindex=\"-1\" unselectable=\"on\" class=\"menu-item\" href=\"javascript:;\"><span></span></a></li>',\r\n        separator: '<li><span class=\"separator\"></span></li>'      \r\n      }\r\n\r\n    },\r\n\r\n    _construct : function(opts) {\r\n      this.action = opts.action;\r\n      this.toolbar = opts.toolbar;\r\n      //this.editor = opts.toolbar.editor;\r\n      Widget.prototype._construct.call(this,opts);\r\n    },\r\n\r\n    _init : function() {\r\n      var k, len, ref, tag;\r\n      //this.render();\r\n\r\n      //this.wrapper = $(this._tpl.item).appendTo(this.toolbar.list);\r\n      this.toolbar.addToolItem(this);\r\n      this.wrapper = $(this._elm);\r\n\r\n      this.el = this.wrapper.find('a.toolbar-item');\r\n      this.el.attr('title', this.title).addClass(\"toolbar-item-\" + this.name).data('button', this);\r\n      this.setIcon(this.icon);\r\n      if (this.menu) {\r\n          this.menuWrapper = $(this.options.menu.menuWrapper).appendTo(this.wrapper);\r\n          this.menuWrapper.addClass(\"toolbar-menu-\" + this.name);\r\n      \r\n          this.renderMenu();\r\n      }\r\n\r\n      var _this = this;\r\n      this.el.on('mousedown', function(e) {\r\n          var exceed, noFocus, param;\r\n          e.preventDefault();\r\n          //noFocus = _this.needFocus && !_this.editor.editable.inputManager.focused;\r\n          if (_this.el.hasClass('disabled')) {\r\n            return false;\r\n          }\r\n          //if (noFocus) {\r\n          //  _this.editor.focus();\r\n          //}\r\n          if (_this.menu) {\r\n            _this.wrapper.toggleClass('menu-on').siblings('li').removeClass('menu-on');\r\n            if (_this.wrapper.is('.menu-on')) {\r\n              //exceed = _this.menuWrapper.offset().left + _this.menuWrapper.outerWidth() + 5 - _this.editor.wrapper.offset().left - _this.editor.wrapper.outerWidth();\r\n              exceed = _this.menuWrapper.offset().left + _this.menuWrapper.outerWidth() + 5 - _this.toolbar.offset().left - _this.toolbar.outerWidth();\r\n              if (exceed > 0) {\r\n                _this.menuWrapper.css({\r\n                  'left': 'auto',\r\n                  'right': 0\r\n                });\r\n              }\r\n              _this.trigger('menuexpand');\r\n            }\r\n            return false;\r\n          }\r\n          param = _this.el.data('param');\r\n          _this.command(param);\r\n          return false;\r\n      });\r\n      this.wrapper.on('click', 'a.menu-item', function(e) {\r\n          var btn, noFocus, param;\r\n          e.preventDefault();\r\n          btn = $(e.currentTarget);\r\n          _this.wrapper.removeClass('menu-on');\r\n          ///noFocus = _this.needFocus && !_this.editor.editable.inputManager.focused;\r\n          if (btn.hasClass('disabled') || noFocus) {\r\n            return false;\r\n          }\r\n          _this.toolbar.removeClass('menu-on');\r\n          param = btn.data('param');\r\n          _this.command(param);\r\n          return false;\r\n      });\r\n      this.wrapper.on('mousedown', 'a.menu-item', function(e) {\r\n        return false;\r\n      });\r\n\r\n      this.action.state.on(\"changed\", function(e,args) {\r\n        var updates = args.data;\r\n        if (updates[\"active\"] !== undefined) {\r\n          _this._doActive(updates[\"active\"].value);\r\n        }\r\n\r\n        if (updates[\"disabled\"] !== undefined) {\r\n          _this._doDisabled(updates[\"disabled\"].value);\r\n        }\r\n\r\n      });\r\n    },\r\n\r\n    _doActive : function(value) {\r\n      return this.el.toggleClass('active', value);\r\n    },\r\n\r\n    _doDisabled : function(value) {\r\n      return this.el.toggleClass('disabled', value);\r\n    },\r\n\r\n    iconClassOf : function(icon) {\r\n      if (icon) {\r\n        //if (this.editor.options.classes.icons[icon]) {\r\n        //  return this.editor.options.classes.icons[icon];\r\n        if (this.toolbar.options.classes && this.toolbar.options.classes.icons && this.toolbar.options.classes.icons[icon]) {\r\n          return  this.toolbar.options.classes.icons[icon];\r\n        } else {\r\n          return \"wordpad-icon wordpad-icon-\" + icon;\r\n        }\r\n      } else {\r\n        return '';\r\n      }\r\n    },\r\n\r\n    setIcon : function(icon) {\r\n      return this.el.find('span').removeClass().addClass(this.iconClassOf(icon)).text(this.text);\r\n    },\r\n\r\n    render : function() {\r\n\r\n      //this.wrapper = $(this._tpl.item).appendTo(this.toolbar.list);\r\n      this.toolbar.addToolItem(this);\r\n      this.wrapper = $(this._elm);\r\n\r\n      this.el = this.wrapper.find('a.toolbar-item');\r\n      this.el.attr('title', this.title).addClass(\"toolbar-item-\" + this.name).data('button', this);\r\n      this.setIcon(this.icon);\r\n      if (!this.menu) {\r\n        return;\r\n      }\r\n      this.menuWrapper = $(this.options.menu.menuWrapper).appendTo(this.wrapper);\r\n      this.menuWrapper.addClass(\"toolbar-menu-\" + this.name);\r\n      return this.renderMenu();\r\n    },\r\n\r\n    renderMenu : function() {\r\n      var $menuBtnEl, $menuItemEl, k, len, menuItem, ref, ref1, results;\r\n      if (!types.isArray(this.menu)) {\r\n        return;\r\n      }\r\n      this.menuEl = $('<ul/>').appendTo(this.menuWrapper);\r\n      ref = this.menu;\r\n      results = [];\r\n      for (k = 0, len = ref.length; k < len; k++) {\r\n        menuItem = ref[k];\r\n        if (menuItem === '|') {\r\n          $(this.options.menu.separator).appendTo(this.menuEl);\r\n          continue;\r\n        }\r\n        $menuItemEl = $(this.options.menu.menuItem).appendTo(this.menuEl);\r\n        $menuBtnEl = $menuItemEl.find('a.menu-item').attr({\r\n          'title': (ref1 = menuItem.title) != null ? ref1 : menuItem.text,\r\n          'data-param': menuItem.param\r\n        }).addClass('menu-item-' + menuItem.name);\r\n        if (menuItem.icon) {\r\n          results.push($menuBtnEl.find('span').addClass(this.iconClassOf(menuItem.icon)));\r\n        } else {\r\n          results.push($menuBtnEl.find('span').text(menuItem.text));\r\n        }\r\n      }\r\n      return results;\r\n    },\r\n\r\n    command : function(params) {\r\n      this.action.execute(params);\r\n    },\r\n\r\n    \"name\" : {\r\n      get : function() {\r\n        return this.action.name;\r\n      }\r\n    },\r\n\r\n    \"icon\" : {\r\n      get : function() {\r\n        return this.action.icon;\r\n      }\r\n    },\r\n\r\n    \"title\" : {\r\n      get : function() {\r\n        //return this.action.tooltip || i18n.translate(this.action.name);\r\n        return this.action.tooltip ;\r\n      }\r\n    },\r\n\r\n    \"text\" : {\r\n      get : function() {\r\n        return this.action.text;\r\n      }\r\n    },\r\n\r\n    \"htmlTag\" : {\r\n      get : function() {\r\n        return this.action.htmlTag;\r\n      }\r\n    },\r\n\r\n    \"disableTag\" : {\r\n      get : function() {\r\n        return this.action.disableTag;\r\n      }\r\n    },\r\n\r\n    \"menu\" : {\r\n      get : function() {\r\n        return this.action.menu;\r\n      }\r\n    },\r\n\r\n    \"editable\" : {\r\n      get : function() {\r\n        return this._options.editable;\r\n      }\r\n    },\r\n\r\n    \"active\" : {\r\n      get : function() {\r\n        return this.action.active;\r\n      }\r\n    },\r\n\r\n    \"disabled\" : {\r\n      get : function() {\r\n        return this.action.disabled;\r\n      }\r\n    },\r\n\r\n    \"needFocus\" : {\r\n      get : function() {\r\n        return this.action.needFocus;\r\n      }\r\n    },\r\n\r\n\r\n    \"shortcut\" : {\r\n      get : function() {\r\n        return this.action.shortcut;\r\n      }\r\n    }\r\n\r\n\r\n  }); \r\n\r\n\r\n  return toolbars.ToolbarItem = ToolbarItem;\r\n});\r\n\ndefine('skylark-widgets-toolbars/toolbar',[\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins-panels/toolbar\",\r\n  \"skylark-widgets-base/widget\",\r\n  \"./toolbars\",\r\n  \"./toolbar-item\"\r\n],function($,_Toolbar, Widget,toolbars,ToolbarItem){ \r\n  var Toolbar = Widget.inherit({\r\n    klassName : \"Toolbar\",\r\n    pluginName : \"lark.wordpad.toolbar\",\r\n\r\n    options : {\r\n      template : \"<div class=\\\"domx-toolbar\\\"><ul></ul></div>\"\r\n    },\r\n\r\n    _construct : function(parent,opts) {\r\n      //this.editor =editor;\r\n      Widget.prototype._construct.call(this,parent,opts);\r\n\r\n    },\r\n\r\n    _init : function() {\r\n      this._xtoolbar = _Toolbar.instantiate(this._elm,this.options);\r\n      this.buttons = [];\r\n      //this.wrapper = $(this._tpl.wrapper).prependTo(this.editor.wrapper);\r\n      //this.wrapper = $(this._elm).prependTo(this.editor.wrapper);\r\n      \r\n      var actions = this.options.actions;\r\n      for (var i = 0; i < actions.length; i++) {\r\n        var action = actions[i];\r\n\r\n        if (action.name === '|') {\r\n          this._xtoolbar.addSeparator();\r\n          continue;\r\n        }\r\n\r\n        var toolItemCtor = action.toolItemCtor;\r\n\r\n        if (!toolItemCtor) {\r\n          toolItemCtor = ToolbarItem;\r\n        }\r\n\r\n        this.buttons.push(new toolItemCtor({\r\n          \"action\" : action,\r\n          \"toolbar\" : this\r\n        }));\r\n      }\r\n      //if (this.options.toolbarHidden) {\r\n       // return this.wrapper.hide();\r\n      //}\r\n    },\r\n\r\n    addToolItem : function(item) {\r\n      this._xtoolbar.addToolItem(item);\r\n    },\r\n\r\n    findButton : function(name) {\r\n      var button;\r\n      button = this._xtoolbar.list.find('.toolbar-item-' + name).data('button');\r\n      return button != null ? button : null;\r\n    }\r\n  });\r\n\r\n\r\n  Toolbar.addButton = function(btn) {\r\n    return this.buttons[btn.prototype.name] = btn;\r\n  };\r\n\r\n  Toolbar.buttons = {};\r\n\r\n  return toolbars.Toolbar = Toolbar;\r\n\r\n});\ndefine('skylark-widgets-toolbars/main',[\r\n\t\"./toolbars\",\r\n\t\"./toolbar\",\r\n\t\"./toolbar-item\"\r\n],function(toolbars){\r\n\treturn toolbars;\r\n});\ndefine('skylark-widgets-toolbars', ['skylark-widgets-toolbars/main'], function (main) { return main; });\n\n"]}