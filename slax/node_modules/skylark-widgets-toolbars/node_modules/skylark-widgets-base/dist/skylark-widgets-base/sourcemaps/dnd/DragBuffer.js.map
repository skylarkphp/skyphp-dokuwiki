{"version":3,"sources":["dnd/DragBuffer.js"],"names":["define","DragBuffer","buffer","push","obj","indexOf","pop","uuid","i","length","splice","get"],"mappings":";;;;;;;AAAAA,UACE,WACD,aAUA,IAAIC,GAOJC,UASAC,KAAkB,SAASC,IAEa,IAApCH,EAAWC,OAAOG,QAAQD,IAE5BH,EAAWC,OAAOC,KAAKC,IAUzBE,IAAiB,SAASC,GAEzB,IAAI,IAAIC,EAAI,EAAGA,EAAIP,EAAWC,OAAOO,OAAQD,IAE5C,GAAGP,EAAWC,OAAOM,GAAGD,OAASA,EACjC,CACC,IAAIH,EAAMH,EAAWC,OAAOM,GAE5B,OADAP,EAAWC,OAAOQ,OAAOF,EAAG,GACrBJ,EAIT,OAAO,MASRO,IAAiB,SAASJ,GAEzB,IAAI,IAAIC,EAAI,EAAGA,EAAIP,EAAWC,OAAOO,OAAQD,IAE5C,GAAGP,EAAWC,OAAOM,GAAGD,OAASA,EAEhC,OAAON,EAAWC,OAAOM,GAI3B,OAAO,OAGR,OAAOP","file":"../../dnd/DragBuffer.js","sourcesContent":["define([\n],function(){\t\n\t\"use strict\";\n\n\t/**\n\t * The drag buffer is a global object used to store and get object being dragged.\n\t *\n\t * Objects are stored in an array and are indetified with a UUID.\n\t *\n\t * @static\n\t * @class DragBuffer\n\t */\n\tvar DragBuffer = {};\n\n\t/**\n\t * Object drag buffer, stores objects being dragged.\n\t *\n\t * @attribute buffer\n\t */\n\tDragBuffer.buffer = [];\n\n\t/** \n\t * Push elemento to drag buffer.\n\t *\n\t * Checks if element dont exist on drag buffer before inserting.\n\t *\n\t * @method push\n\t */\n\tDragBuffer.push = function(obj)\n\t{\n\t\tif(DragBuffer.buffer.indexOf(obj) === -1)\n\t\t{\n\t\t\tDragBuffer.buffer.push(obj);\n\t\t}\n\t};\n\n\t/** \n\t * Get element from drag buffer using its identifier.\n\t *\n\t * @method pop\n\t * @return {Object} Object indentfied by uuid, if not found return null.\n\t */\n\tDragBuffer.pop = function(uuid)\n\t{\n\t\tfor(var i = 0; i < DragBuffer.buffer.length; i++)\n\t\t{\n\t\t\tif(DragBuffer.buffer[i].uuid === uuid)\n\t\t\t{\n\t\t\t\tvar obj = DragBuffer.buffer[i];\n\t\t\t\tDragBuffer.buffer.splice(i, 1);\n\t\t\t\treturn obj;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\t/** \n\t * Get element from drag buffer without removing it.\n\t *\n\t * @method get\n\t * @return {Object} Object indentfied by uuid, if not found return null.\n\t */\n\tDragBuffer.get = function(uuid)\n\t{\n\t\tfor(var i = 0; i < DragBuffer.buffer.length; i++)\n\t\t{\n\t\t\tif(DragBuffer.buffer[i].uuid === uuid)\n\t\t\t{\n\t\t\t\treturn DragBuffer.buffer[i];\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn null;\n\t};\n\n\treturn DragBuffer;\n});"]}