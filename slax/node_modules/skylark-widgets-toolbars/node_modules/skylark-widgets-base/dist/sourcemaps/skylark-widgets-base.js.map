{"version":3,"sources":["skylark-widgets-base.js"],"names":["define","skylark","attach","actions","dnd","locales","mixins","panels","skins","list","register","skin","name","push","get","getList","slice","types","objects","events","Vector2","browser","datax","eventer","noder","files","geom","elmx","$","fx","plugins","HashMap","base","SkinManager","NativeEvents","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","selectionchange","submit","reset","fullscreenchange","fullscreenerror","focus","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","progress","textInput","tap","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","Plugin","Widget","inherit","klassName","_construct","parent","elm","options","element","isHtmlNode","this","_parse","isString","tagName","overrided","_velm","_elm","_create","Object","defineProperty","value","state","visible","size","location","_mode","TOP_LEFT","_init","addonCategoryOptions","addons","widgetCtor","constructor","categoryName","i","length","addonOption","addonName","addonSetting","addonCtor","ctor","addon","setParent","isInDocument","_startup","optionsAttr","data","options1","eval","mixin","template","createElement","style","position","overflow","Error","self","widgetClass","addClass","on","e","args","_refresh","isNativeEvent","isArray","selector","callback","ctx","one","el_","prototype","call","off","listenTo","obj","event","nodeType","unlistenTo","updateLocation","mode","undefined","TOP_RIGHT","top","y","bottom","BOTTOM_LEFT","left","x","right","updateSize","width","height","setVisibility","updateVisibility","display","updates","mapping","attributs","properties","styles","setting","_addons","category","settings","clone","render","getEnclosing","getEnclosed","children","ArrayList","getSkin","show","hide","ex","enable","set","disable","hasClass","offset","pagePosition","outerWidth","marginSize","outerHeight","removeClass","toggleClass","aria","getEl","ariaTarget","_aria","setAttribute","attr","velm","ret","getAttr","setAttr","removeAttr","center","css","getStyle","setStyle","getData","setData","getParent","v","_parent","oldParent","mount","_setupChild","unmount","prop","getProp","setProp","throb","params","throbber","defaults","update","target","toElm","before","after","prepend","append","remove","preventDragEvents","ondrop","preventDefault","ondragover","setAltText","altText","document","alignItems","zIndex","border","borderRadius","color","Editor","theme","textColor","backgroundColor","barColor","borderColor","body","appendChild","text","createTextNode","destroyFunction","destroy","contains","removeChild","pointerEvents","onmousemove","clientX","clientY","onmouseout","setOnClick","onclick","removeAllChildren","firstChild","setMode","console","warn","updateInterface","updatePosition","attachTo","_attachTo","detach","BOTTOM_RIGHT","meta","apply","arguments","addStatePropMethod","pluginName","widgetName","CanvasPane","getContext","type","pixelRatio","getPixelRatio","ImagePane","borderStyle","objectFit","setImage","source","src","TextMixin","_buildText","span","fitContent","allowWordBreak","setVerticalAlignment","CENTER","setAlignment","setFont","fontFamily","fontWeight","fontStyle","whiteSpace","wordBreak","setText","setTextBorder","textShadow","setTextSize","fontSize","setTextColor","setOverflow","ELLIPSIS","textOverflow","align","justifyContent","textAlign","LEFT","RIGHT","TOP","BOTTOM","measure","offsetWidth","offsetHeight","setMargin","margin","clientWidth","clientHeight","CLIP","TextPane","SubmitForm","autocomplete","noValidate","action","addEventListener","Evented","ActionManager","addAction","fn","executeAction","removeAction","ActiionManager","Action","tooltip","icon","shortcut","_state","checked","disabled","execute","_execute","trigger","Panel","child","DualContainer","panelColor","_elmA","_elmB","resizeTab","cursor","resizeTabColor","tabPosition","tabPositionMax","tabPositionMin","tabSize","orientation","HORIZONTAL","resizing","movementX","VERTICAL","movementY","onmousedown","window","attachB","attachA","tabPositionAbs","log","elementA","elementB","DualPanel","divA","divB","createWidget","connect","onResize","manager","gui","setOnResize","RowsPanel","autoSize","fitElements","spacing","defaultTextWidth","rows","setAutoSize","add","addText","fit","Text","addDivision","division","nextRow","removeLastRow","row","pop","removeAll","j","sizeX","maxSizeY","DragBuffer","buffer","indexOf","uuid","splice","font","sepColor","boxColor","iconColor","buttonColor","buttonOverColor","buttonLightColor","audioTrack","audioScrubber","audioProgress","main"],"mappings":"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","file":"../skylark-widgets-base.js","sourcesContent":["define('skylark-widgets-base/base',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"widgets.base\",{\r\n\t\t\"actions\":{},\r\n\t\t\"dnd\" : {},\r\n\t\t\"locales\" : {},\r\n\t\t\"mixins\" : {},\r\n\t\t\"panels\" : {},\r\n\t\t\"skins\" : {}\r\n\t});\r\n});\ndefine('skylark-widgets-base/skins/SkinManager',[\r\n],function(){\t\r\n\t\"use strict\";\r\n\r\n\tfunction SkinManager(){}\r\n\r\n\tvar list = [],\r\n\t\tskins = [];\r\n\r\n\t//Add skin to list\r\n\tfunction register(skin, name) {\r\n\t\tlist.push(name);\r\n\t\tskins[name] = skin;\r\n\t}\r\n\r\n\t//Get a skin instance\r\n\tfunction get(name) {\r\n\t\tif (!name) {\r\n\t\t\tname = list[0];\r\n\t\t}\r\n\r\n\t\treturn skins[name];\r\n\t};\r\n\r\n\tfunction getList() {\r\n\t\treturn list.slice();\r\n\t}\r\n\r\n\treturn {\r\n\t\tregister,\r\n\t\tget,\r\n\t\tgetList\r\n\t};\r\n});\ndefine('skylark-widgets-base/Widget',[\r\n  \"skylark-langx-ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-events\",\r\n  \"skylark-langx-numerics/Vector2\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-data\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-files\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-fx\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"skylark-data-collection/HashMap\",\r\n  \"./base\",\r\n  \"./skins/SkinManager\"\r\n],function(skylark,types,objects,events,Vector2,browser,datax,eventer,noder,files,geom,elmx,$,fx, plugins,HashMap,base,SkinManager){\r\n\r\n     const NativeEvents = {\r\n            \"drag\": 2, // DragEvent\r\n            \"dragend\": 2, // DragEvent\r\n            \"dragenter\": 2, // DragEvent\r\n            \"dragexit\": 2, // DragEvent\r\n            \"dragleave\": 2, // DragEvent\r\n            \"dragover\": 2, // DragEvent\r\n            \"dragstart\": 2, // DragEvent\r\n            \"drop\": 2, // DragEvent\r\n\r\n            \"abort\": 3, // Event\r\n            \"change\": 3, // Event\r\n            ///\"error\": 3, // Event\r\n            \"selectionchange\": 3, // Event\r\n            \"submit\": 3, // Event\r\n            \"reset\": 3, // Event\r\n            'fullscreenchange':3,\r\n            'fullscreenerror':3,\r\n\r\n/*\r\n            'disablepictureinpicturechanged':3,\r\n            'ended':3,\r\n            'enterpictureinpicture':3,\r\n            'durationchange':3,\r\n            'leavepictureinpicture':3,\r\n            'loadstart' : 3,\r\n            'loadedmetadata':3,\r\n            'pause' : 3,\r\n            'play':3,\r\n            'posterchange':3,\r\n            'ratechange':3,\r\n            'seeking' : 3,\r\n            'sourceset':3,\r\n            'suspend':3,\r\n            'textdata':3,\r\n            'texttrackchange':3,\r\n            'timeupdate':3,\r\n            'volumechange':3,\r\n            'waiting' : 3,\r\n*/\r\n\r\n\r\n            \"focus\": 4, // FocusEvent\r\n            \"blur\": 4, // FocusEvent\r\n            \"focusin\": 4, // FocusEvent\r\n            \"focusout\": 4, // FocusEvent\r\n\r\n            \"keydown\": 5, // KeyboardEvent\r\n            \"keypress\": 5, // KeyboardEvent\r\n            \"keyup\": 5, // KeyboardEvent\r\n\r\n            \"message\": 6, // MessageEvent\r\n\r\n            \"click\": 7, // MouseEvent\r\n            \"contextmenu\": 7, // MouseEvent\r\n            \"dblclick\": 7, // MouseEvent\r\n            \"mousedown\": 7, // MouseEvent\r\n            \"mouseup\": 7, // MouseEvent\r\n            \"mousemove\": 7, // MouseEvent\r\n            \"mouseover\": 7, // MouseEvent\r\n            \"mouseout\": 7, // MouseEvent\r\n            \"mouseenter\": 7, // MouseEvent\r\n            \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n            \"progress\" : 11, //ProgressEvent\r\n\r\n            \"textInput\": 12, // TextEvent\r\n\r\n            \"tap\": 13,\r\n            \"touchstart\": 13, // TouchEvent\r\n            \"touchmove\": 13, // TouchEvent\r\n            \"touchend\": 13, // TouchEvent\r\n\r\n            \"load\": 14, // UIEvent\r\n            \"resize\": 14, // UIEvent\r\n            \"select\": 14, // UIEvent\r\n            \"scroll\": 14, // UIEvent\r\n            \"unload\": 14, // UIEvent,\r\n\r\n            \"wheel\": 15, // WheelEvent\r\n\r\n    };\r\n \r\n  const Plugin = plugins.Plugin;\r\n\r\n  var Widget = Plugin.inherit({\r\n    klassName: \"Widget\",\r\n\r\n    _construct : function(parent,elm,options) {\r\n        if (parent && !(parent instanceof Widget || parent.element)) {\r\n           options = elm;\r\n           elm = parent;\r\n           parent = null;\r\n        }\r\n        if (types.isHtmlNode(elm)) {\r\n          options = this._parse(elm,options);\r\n        } else {\r\n          options = elm;\r\n          elm = null;\r\n        }\r\n        if (types.isString(options)) {\r\n          options = {\r\n            tagName : options\r\n          };\r\n        }\r\n        this.overrided(elm,options);\r\n\r\n        if (!elm) {\r\n          this._velm = this._create();\r\n          this._elm = this._velm.elm();\r\n        } else {\r\n          this._velm = this.elmx(this._elm);\r\n        }\r\n        \r\n        Object.defineProperty(this,\"state\",{\r\n          value :this.options.state || new HashMap()\r\n        });\r\n\r\n        /** \r\n         * True if the element is visible.\r\n         *\r\n         * @attribute visible\r\n         * @type {Boolean}\r\n         */\r\n        this.visible = true;\r\n        \r\n\r\n        //this.element.style.position = \"absolute\";\r\n        //this.element.style.overflow = \"hidden\";\r\n\r\n        /**\r\n         * Size of this component in px.\r\n         *\r\n         * @attribute size\r\n         * @type {Vector2}\r\n         */\r\n        this.size = new Vector2(0, 0);\r\n        \r\n        /**\r\n         * Location of this component relatively to its parent in px.\r\n         *\r\n         * @attribute location\r\n         * @type {Vector2}\r\n         */\r\n        this.location = new Vector2(0, 0);\r\n\r\n        /**\r\n         * Locationing mode, indicates how to anchor the component.\r\n         *\r\n         * @attribute mode\r\n         * @type {Number}\r\n         */\r\n        this._mode = Widget.TOP_LEFT;\r\n     \r\n        //this.state = this.options.state || new Map();\r\n        this._init();\r\n\r\n        var addonCategoryOptions = this.options.addons;\r\n        if (addonCategoryOptions) {\r\n          var widgetCtor = this.constructor,\r\n              addons = widgetCtor.addons;\r\n          for (var categoryName in addonCategoryOptions) {\r\n              for (var i =0;i < addonCategoryOptions[categoryName].length; i++ ) {\r\n                var addonOption = addonCategoryOptions[categoryName][i];\r\n                if (types.isString(addonOption)) {\r\n                  var addonName = addonOption,\r\n                      addonSetting = addons[categoryName][addonName],\r\n                      addonCtor = addonSetting.ctor ? addonSetting.ctor : addonSetting;\r\n\r\n                  this.addon(addonCtor,addonSetting.options);\r\n\r\n                }\r\n\r\n              }\r\n          }\r\n        }\r\n\r\n        //if (this._elm.parentElement) {\r\n        //  // The widget is already in document\r\n        //  this._startup();\r\n        //}\r\n\r\n        if (parent) {\r\n          this.setParent(parent);\r\n        } else if (this._velm.isInDocument()) {\r\n          this._startup();\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * Parses widget options from attached element.\r\n     * This is a callback method called by constructor when attached element is specified.\r\n     * @method _parse\r\n     * @return {Object} options.\r\n     */\r\n    _parse : function(elm,options) {\r\n      var optionsAttr = datax.data(elm,\"options\");\r\n      if (optionsAttr) {\r\n         //var options1 = JSON.parse(\"{\" + optionsAttr + \"}\");\r\n         var options1 = eval(\"({\" + optionsAttr + \"})\");\r\n         options = objects.mixin(options1,options); \r\n      }\r\n      return options || {};\r\n    },\r\n\r\n    /**\r\n     * Create html element for this widget.\r\n     * This is a callback method called by constructor when attached element is not specified.\r\n     * @method _create\r\n     */\r\n    _create : function() {\r\n        var template = this.options.template;\r\n        if (template) {\r\n          return this.elmx(template);\r\n        } else {\r\n          var tagName = this.options.tagName;\r\n          if (tagName) {\r\n            return this.elmx(noder.createElement(tagName,{\r\n              style : {\r\n                position : \"absolute\",\r\n                overflow : \"hidden\"\r\n              }\r\n            }))\r\n          } else {\r\n            throw new Error(\"The template or tagName is not existed in options!\");\r\n          }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Init widget.\r\n     * This is a callback method called by constructor.\r\n     * @method _init\r\n     */\r\n    _init : function() {\r\n      var self = this;\r\n      if (this.widgetClass) {\r\n        this._velm.addClass(this.widgetClass);\r\n      }\r\n      this.state.on(\"changed\",function(e,args) {\r\n        self._refresh(args.data);\r\n      });\r\n    },\r\n\r\n\r\n    /**\r\n     * Startup widget.\r\n     * This is a callback method called when widget element is added into dom.\r\n     * @method _post\r\n     */\r\n    _startup : function() {\r\n\r\n    },\r\n\r\n\r\n    isNativeEvent : function(events) {\r\n        if (types.isString(events)) {\r\n            return !!NativeEvents[events];\r\n        } else if (types.isArray(events)) {\r\n            for (var i=0; i<events.length; i++) {\r\n                if (NativeEvents[events[i]]) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }            \r\n\r\n    },   \r\n\r\n    on : function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n        if (this.el_ && this.isNativeEvent(events)) {\r\n            eventer.on(this.el_,events,selector,data,callback,ctx,one);\r\n        } else {\r\n            Plugin.prototype.on.call(this,events, selector, data, callback, ctx,  one);\r\n        }\r\n    },   \r\n\r\n    off : function(events, callback) {\r\n        if (this.el_ && this.isNativeEvent(events)) {\r\n            eventer.off(this.el_,events,callback);\r\n        } else {\r\n            Plugin.prototype.off.call(this,events,callback);\r\n        }\r\n    },\r\n\r\n    listenTo : function(obj, event, callback, /*used internally*/ one) {\r\n        if (types.isString(obj) || types.isArray(obj)) {\r\n            one = callback;\r\n            callback = event;\r\n            event = obj;\r\n            if (this.el_ && this.isNativeEvent(event)) {\r\n                eventer.on(this.el_,event,callback,this,one);\r\n            } else {\r\n                this.on(event,callback,this,one);\r\n            }\r\n        } else {\r\n            if (obj.nodeType) {\r\n                eventer.on(obj,event,callback,this,one)\r\n            } else {\r\n                Plugin.prototype.listenTo.call(this,obj,event,callback,one)\r\n            }                \r\n        }\r\n    },\r\n\r\n    unlistenTo : function(obj, event, callback) {\r\n        if (types.isString(obj) || types.isArray(obj)) {\r\n            callback = event;\r\n            event = obj;\r\n            if (this.el_ && this.isNativeEvent(event)) {\r\n                eventer.off(this.el_,event,callback);\r\n            } else {\r\n                this.off(event,callback);                   \r\n            }\r\n        } else {\r\n            if (obj.nodeType) {\r\n                eventer.off(obj,event,callback)\r\n            } else {\r\n                Plugin.prototype.unlistenTo.call(this,obj,event,callback)\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Update the location of this widget.\r\n     * \r\n     * @method updateLocation\r\n     */\r\n    updateLocation : function(mode) {\r\n      if(mode !== undefined) {\r\n        this._mode = mode;\r\n      }\r\n\r\n      if(this._mode === Widget.TOP_LEFT || this._mode === Widget.TOP_RIGHT) {\r\n        this._elm.style.top = this.location.y + \"px\";\r\n      } else {\r\n        this._elm.style.bottom = this.location.y + \"px\";\r\n      }\r\n\r\n      if(this._mode === Widget.TOP_LEFT || this._mode === Widget.BOTTOM_LEFT) {\r\n        this._elm.style.left = this.location.x + \"px\";\r\n      } else {\r\n        this._elm.style.right = this.location.x + \"px\";\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Update the size of this widget.\r\n     * \r\n     * @method updateSize\r\n     */\r\n    updateSize : function(){\r\n      this._elm.style.width = this.size.x + \"px\";\r\n      this._elm.style.height = this.size.y + \"px\";\r\n    },\r\n\r\n\r\n    /**\r\n     * Update visibility of this element.\r\n     *\r\n     * @method setVisibility\r\n     */\r\n    setVisibility : function(visible)   {\r\n      this.visible = visible;\r\n      this.updateVisibility();\r\n    },\r\n\r\n\r\n    /**\r\n     * Update the visibility of this widget.\r\n     *\r\n     * @method updateVisibility\r\n     */\r\n    updateVisibility : function() {\r\n      this._elm.style.display = this.visible ? \"block\" : \"none\";\r\n    },\r\n\r\n\r\n    /**\r\n     * Refresh widget.\r\n     * This is a callback method called when widget state is changed.\r\n     * @method _refresh\r\n     */\r\n    _refresh : function(updates) {\r\n      /*\r\n      var _ = this._,\r\n          model = _.model,\r\n          dom = _.dom,\r\n          props = {\r\n\r\n          };\r\n      updates = updates || {};\r\n      for (var attrName in updates){\r\n          var v = updates[attrName].value;\r\n          if (v && v.toCss) {\r\n              v.toCss(props);\r\n              updates[attrName].processed = true;\r\n          }\r\n\r\n      };\r\n\r\n      this.css(props);\r\n\r\n      if (updates[\"disabled\"]) {\r\n          var v = updates[\"disabled\"].value;\r\n          dom.aria('disabled', v);\r\n          self.classes.toggle('disabled', v);\r\n      }\r\n      */\r\n    },                \r\n\r\n    mapping : {\r\n      \"events\" : {\r\n  //       'mousedown .title':  'edit',\r\n  //       'click .button':     'save',\r\n  //       'click .open':       function(e) { ... }            \r\n      },\r\n\r\n      \"attributs\" : {\r\n\r\n      },\r\n\r\n      \"properties\" : {\r\n\r\n      },\r\n\r\n      \"styles\" : {\r\n\r\n      }\r\n    },\r\n\r\n    addon : function(ctor,setting) {\r\n      var categoryName = ctor.categoryName,\r\n          addonName = ctor.addonName;\r\n\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n      category[addonName] = new ctor(this,setting);\r\n      return this;\r\n    },\r\n\r\n    addons : function(categoryName,settings) {\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n\r\n      if (settings == undefined) {\r\n        return objects.clone(category || null);\r\n      } else {\r\n        objects.mixin(category,settings);\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns a html element representing the widget.\r\n     *\r\n     * @method render\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    render: function() {\r\n      return this._elm;\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Returns a parent widget  enclosing this widgets, or null if not exist.\r\n     *\r\n     * @method getEnclosing\r\n     * @return {Widget} The enclosing parent widget, or null if not exist.\r\n     */\r\n    getEnclosing : function(selector) {\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Returns a widget collection with all enclosed child widgets.\r\n     *\r\n     * @method getEnclosed\r\n     * @return {List} Collection with all enclosed child widgets..\r\n     */\r\n    getEnclosed : function() {\r\n      var self = this;\r\n          children = new ArrayList();\r\n      return children;\r\n    },\r\n\r\n\r\n    getSkin : function() {\r\n      return SkinManager.get();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to true.\r\n     *\r\n     * @method show\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n\r\n    show : function() {\r\n      this._velm.show();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to false.\r\n     *\r\n     * @method hide\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    hide : function() {\r\n      this._velm.hide();\r\n    },\r\n\r\n    /**\r\n     * Focuses the current widget.\r\n     *\r\n     * @method focus\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    focus :function() {\r\n      try {\r\n        this._velm.focus();\r\n      } catch (ex) {\r\n        // Ignore IE error\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Blurs the current widget.\r\n     *\r\n     * @method blur\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    blur : function() {\r\n      this._velm.blur();\r\n\r\n      return this;\r\n    },\r\n\r\n    enable: function () {\r\n      this.state.set('disabled',false);\r\n      return this;\r\n    },\r\n\r\n    disable: function () {\r\n      this.state.set('disabled',true);\r\n      return this;\r\n    },\r\n\r\n\r\n    /** \r\n     * Add a CSS class to the base DOM element of this widget element.\r\n     * \r\n     * @method addClass\r\n     * @param {String} name Name of the class to be added.\r\n     */\r\n    addClass : function(name){\r\n      this._velm.addClass(name);\r\n      return this;\r\n    },\r\n\r\n    /** \r\n     * Determine whether this widget element is assigned the given class.\r\n     * \r\n     * @method hasClass\r\n     * @param {String} name Name of the class t.\r\n     */\r\n    hasClass : function(name){\r\n      return this._velm.hasClass(name);\r\n    },\r\n\r\n    offset : function() {\r\n        return this._velm.pagePosition();\r\n    },\r\n\r\n    outerWidth : function() {\r\n        return this._velm.marginSize().width;\r\n    },\r\n\r\n    outerHeight : function() {\r\n        return this._velm.marginSize().height;\r\n    },\r\n\r\n    /** \r\n     * Remove a CSS class from the base DOM element of this idget element.\r\n     * \r\n     * @method removeClass\r\n     * @param {String} name Name of the class to be removed.\r\n     */\r\n    removeClass: function(name) {\r\n      this._velm.removeClass(name);\r\n      return this;\r\n    },\r\n\r\n    /** \r\n     * Remove a CSS class from the base DOM element of this idget element.\r\n     * \r\n     * @method removeClass\r\n     * @param {String} name Name of the class to be removed.\r\n     */\r\n    toggleClass: function(name) {\r\n      this._velm.toggleClass(name);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the specified aria property.\r\n     *\r\n     * @method aria\r\n     * @param {String} name Name of the aria property to set.\r\n     * @param {String} value Value of the aria property.\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    aria : function(name, value) {\r\n      const self = this, elm = self.getEl(self.ariaTarget);\r\n\r\n      if (typeof value === 'undefined') {\r\n        return self._aria[name];\r\n      }\r\n\r\n      self._aria[name] = value;\r\n\r\n      if (self.state.get('rendered')) {\r\n        elm.setAttribute(name === 'role' ? name : 'aria-' + name, value);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    attr: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.attr(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    getAttr : function(name) {\r\n      return this._velm.attr(name);\r\n    },\r\n\r\n    setAttr : function(name,value) {\r\n      this._velm.attr(name,value);\r\n      return this;\r\n    },\r\n\r\n    removeAttr : function(name) {\r\n      this._velm.removeAttr(name);\r\n      return this;\r\n    },\r\n\r\n\r\n    /**\r\n     * Calculate the location of the container to make it centered.\r\n     *\r\n     * Calculated relatively to its parent size.\r\n     * \r\n     * @method center\r\n     */\r\n    center : function() {\r\n      this.location.set((this.parent.size.x - this.size.x) / 2, (this.parent.size.y - this.size.y) / 2);\r\n    },\r\n\r\n    css: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.css(name, value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    getStyle : function(name) {\r\n      return this._velm.css(name);\r\n    },\r\n\r\n    setStyle : function(name,value) {\r\n      this._velm.css(name,value);\r\n      return this;\r\n    },\r\n\r\n    data: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.data(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n\r\n    getData : function(name) {\r\n      return this._velm.data(name);\r\n    },\r\n\r\n    setData : function(name,value) {\r\n      this._velm.data(name,value);\r\n      return this;\r\n    },\r\n\r\n\r\n    parent : {\r\n      get : function() {\r\n        return this.getParent();\r\n      },\r\n      set : function(v) {\r\n        this.setParent(v);\r\n      }\r\n    },\r\n\r\n    getParent : function() {\r\n      return this._parent;\r\n    },\r\n\r\n    setParent : function(parent) {\r\n      var oldParent = this._parent;\r\n      this._parent = parent;\r\n      if (parent) {\r\n        this.mount(parent._elm || parent.element);\r\n        if (parent._setupChild) {\r\n          parent._setupChild(this);\r\n        }\r\n      } else if (oldParent) {\r\n        this.unmount();\r\n      }\r\n      return this;\r\n    },\r\n\r\n\r\n    prop: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.prop(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    getProp : function(name) {\r\n      return this._velm.prop(name);\r\n    },\r\n\r\n    setProp : function(name,value) {\r\n      this._velm.prop(name,value);\r\n      return this;\r\n    },\r\n\r\n    throb: function(params) {\r\n      if (this.options.throbber) {\r\n        params = objects.defaults(params,this.options.throbber);\r\n      }\r\n      return noder.throb(this._elm,params);\r\n    },\r\n\r\n    /*\r\n    emit : function(type,params) {\r\n      var e = events.createEvent(type,{\r\n        data : params\r\n      });\r\n      return events.Emitter.prototype.emit.call(this,e,params);\r\n    },\r\n    */\r\n\r\n    /**\r\n     * Update component appearance.\r\n     * \r\n     * Should be called after changing size or location.\r\n     *\r\n     * Uses the updateVisibility and if the element is visible calls the updateSize and updateLocation (in this order) methods to update the interface.\r\n     * \r\n     * @method update\r\n     */\r\n    update : function() {\r\n      this.updateVisibility();\r\n\r\n      if(this.visible) {\r\n        this.updateSize();\r\n        this.updateLocation();\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     *  mount the current widget element to dom document.\r\n     *\r\n     * @method mount\r\n     * @return {Widget} This Widget.\r\n     */\r\n    mount : function(target,position){\r\n        var toElm = target.element || target,\r\n            elm = this._elm;\r\n        if (!position || position==\"child\") {\r\n            noder.append(toElm,elm);\r\n        } else  if (position == \"before\") {\r\n            noder.before(toElm,elm);\r\n        } else if (position == \"after\") {\r\n            noder.after(toElm,elm);\r\n        } else if (position == \"prepend\") {\r\n            noder.prepend(toElm,elm);         \r\n        }\r\n        this._startup();\r\n    },\r\n\r\n    /**\r\n     *  unmount the current widget element from dom document.\r\n     *\r\n     * @method html\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    unmount : function() {\r\n      this._velm.remove();\r\n    },\r\n\r\n    preventDragEvents : function() {\r\n      this.element.ondrop = Widget.preventDefault;\r\n      this.element.ondragover = Widget.preventDefault;\r\n    },\r\n\r\n\r\n    element : {\r\n      get : function() {\r\n        return this._elm;\r\n      },\r\n\r\n      set : function(v) {\r\n        this._elm = v;\r\n      }\r\n    },\r\n\r\n    position : {\r\n      get : function() {\r\n        return this.location;\r\n      },\r\n\r\n      set : function(v) {\r\n        this.location = v;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Set alt text, that is displayed when the mouse is over the element. Returns the element created that is attached to the document body.\r\n     *\r\n     * @method setAltText\r\n     * @param {String} altText Alt text.\r\n     */\r\n    setAltText : function(altText)   {\r\n      var element = document.createElement(\"div\");\r\n      element.style.position = \"absolute\";\r\n      element.style.display = \"none\";\r\n      element.style.alignItems = \"center\";\r\n      element.style.zIndex = \"10000\";\r\n      element.style.border = \"3px solid\";\r\n      element.style.borderRadius = \"5px\";\r\n      element.style.color = Editor.theme.textColor;\r\n      element.style.backgroundColor = Editor.theme.barColor;\r\n      element.style.borderColor = Editor.theme.barColor;\r\n      element.style.height = \"fit-content\";\r\n      document.body.appendChild(element);\r\n\r\n      //Text\r\n      var text = document.createTextNode(altText);\r\n      element.appendChild(text);\r\n\r\n      //Destroy\r\n      var destroyFunction = this.destroy;\r\n      this.destroy = function()\r\n      { \r\n        destroyFunction.call(this);\r\n\r\n        if(document.body.contains(element))\r\n        {\r\n          document.body.removeChild(element);\r\n        }\r\n      };\r\n      \r\n      this._elm.style.pointerEvents = \"auto\"; \r\n\r\n      //Mouse mouse move event\r\n      this._elm.onmousemove = function(event) {\r\n        element.style.display = \"flex\";\r\n        element.style.left = (event.clientX + 8) + \"px\";\r\n        element.style.top = (event.clientY - 20) + \"px\";\r\n      };\r\n\r\n      //Mouse out event\r\n      this._elm.onmouseout = function()  {\r\n        element.style.display = \"none\";\r\n      };\r\n\r\n      return element;\r\n    },\r\n\r\n    /**\r\n     * Set method to be called on component click.\r\n     * \r\n     * @method setOnClick\r\n     * @param {Function} callback Function called when the component is clicked.\r\n     */\r\n    setOnClick : function(callback)  {\r\n      this._elm.onclick = callback;\r\n    },\r\n\r\n    /**\r\n     * Remove all DOM children from the element.\r\n     * \r\n     * @method removeAllChildren\r\n     */\r\n    removeAllChildren : function()   {\r\n      while(this._elm.firstChild) {\r\n        this._elm.removeChild(this._elm.firstChild);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Set positioning mode.\r\n     * \r\n     * @method setMode\r\n     * @param {Number} setMode\r\n     */\r\n    setMode : function(mode) {\r\n      this._mode = mode;\r\n      this._elm.style.bottom = null;\r\n      this._elm.style.right = null;\r\n      this._elm.style.left = null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Called to destroy a component.\r\n     *\r\n     * Destroy the element and removes it from its DOM parent.\r\n     * \r\n     * @method destroy\r\n     */\r\n    destroy : function()\r\n    {\r\n      if(this._parent)\r\n      {\r\n        if(this._parent.element)\r\n        {\r\n          if(this._parent.element.contains(this.element))\r\n          {\r\n            this._parent.element.removeChild(this.element);\r\n            this._parent = null;\r\n          }\r\n        }\r\n        else\r\n        {\r\n          console.warn(\"nunuStudio: Parent is not a Element.\", this);\r\n          if(this._parent.contains(this.element))\r\n          {\r\n            this._parent.removeChild(this.element);\r\n            this._parent = null;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  Widget.prototype.updateInterface = Widget.prototype.update;\r\n  Widget.prototype.updatePosition = Widget.prototype.updateLocation;\r\n  Widget.prototype.attachTo = Widget.prototype.setParent;\r\n  Widget.prototype._attachTo = Widget.prototype.mount;\r\n  Widget.prototype.detach = Widget.prototype.unmount;\r\n\r\n  /**\r\n   * Top-left locationing.\r\n   *\r\n   * @static\r\n   * @attribute TOP_LEFT\r\n   * @type {Number}\r\n   */\r\n  Widget.TOP_LEFT = 0;\r\n\r\n  /**\r\n   * Top-right locationing.\r\n   *\r\n   * @static\r\n   * @attribute TOP_RIGHT\r\n   * @type {Number}\r\n   */\r\n  Widget.TOP_RIGHT = 1;\r\n\r\n  /**\r\n   * Bottom-left locationing.\r\n   *\r\n   * @static\r\n   * @attribute BOTTOM_LEFT\r\n   * @type {Number}\r\n   */\r\n  Widget.BOTTOM_LEFT = 2;\r\n\r\n  /**\r\n   * Bottom-right locationing.\r\n   *\r\n   * @static\r\n   * @attribute BOTTOM_RIGHT\r\n   * @type {Number}\r\n   */\r\n  Widget.BOTTOM_RIGHT = 3;\r\n\r\n  Widget.inherit = function(meta) {\r\n    var ctor = plugins.Plugin.inherit.apply(this,arguments);\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (meta.pluginName) {\r\n      plugins.register(ctor,meta.pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  Widget.register = function(ctor,widgetName) {\r\n    var meta = ctor.prototype,\r\n        pluginName = widgetName || meta.pluginName;\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (pluginName) {\r\n      plugins.register(ctor,pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  Widget.preventDefault = function(event)\r\n  {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return base.Widget = Widget;\r\n});\r\n\ndefine('skylark-widgets-base/CanvasPane',[\r\n  \"./base\",\r\n  \"./Widget\"\r\n],function(\r\n\tbase,\r\n\tWidget\r\n){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * DOM canvas element.\r\n\t * \r\n\t * @class Canvas\r\n\t * @extends {Widget}\r\n\t * @param {Widget} parent Parent element.\r\n\t */\r\n\tvar CanvasPane = Widget.inherit({\r\n\t\t\"klassName\" : \"CanvasPane\",\r\n\r\n\t\t\"_construct\" : function (parent)\r\n\t\t{\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"canvas\");\r\n\r\n\t\t\tthis.preventDragEvents();\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Get a context from this canvas.\r\n\t\t * \r\n\t\t * @method getContext\r\n\t\t * @param {string} type Type of context to get \"2d\", \"webgl\", etc\r\n\t\t * @return {Object} Context obtained from the canvas.\r\n\t\t */\r\n\t\tgetContext : function(type)\r\n\t\t{\r\n\t\t\treturn this._elm.getContext(type);\r\n\t\t},\r\n\r\n\t\tupdateSize : function()\r\n\t\t{\r\n\t\t\tWidget.prototype.updateSize.call(this);\r\n\r\n\t\t\tvar pixelRatio = Editor.getPixelRatio();\r\n\t\t\t\r\n\t\t\tthis._elm.width = this.size.x * pixelRatio;\r\n\t\t\tthis._elm.height = this.size.y * pixelRatio;\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn base.CanvasPane = CanvasPane;\r\n});\ndefine('skylark-widgets-base/ImagePane',[\r\n  \"./base\",\r\n  \"./Widget\"\r\n],function(\r\n\tbase,\r\n\tWidget\r\n){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * DOM image element.\r\n\t * \r\n\t * @class ImagePane\r\n\t * @extends {Widget}\r\n\t * @param {Widget} parent Parent element.\r\n\t */\r\n\tvar ImagePane = Widget.inherit({\r\n\r\n\t\t_construct : function (parent) {\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"img\");\r\n\r\n\t\t\tthis._elm.style.borderStyle = \"none\";\r\n\t\t\tthis._elm.style.objectFit = \"contain\"; //cover | fill\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set image from URL.\r\n\t\t * \r\n\t\t * @method setImage\r\n\t\t * @param {String} source Image URL.\r\n\t\t */\r\n\t\tsetImage : function(source)\t{\r\n\t\t\tthis._elm.src = source;\r\n\t\t}\r\n\t});\r\n\r\n\treturn base.ImagePane = ImagePane;\r\n});\ndefine('skylark-widgets-base/mixins/TextMixin',[\r\n\t\"skylark-langx-numerics/Vector2\",\r\n\t\"../Widget\"\r\n],function(\r\n\tVector2,\r\n\tWidget\r\n){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Text element without background.\r\n\t * \r\n\t * @class Text\r\n\t * @extends {Widget}\r\n\t * @param {Widget} parent Parent widget.\r\n\t */\r\n\r\n\tvar TextMixin = {\r\n\t\t_buildText : function() {\r\n\t\t\tvar skin = this.getSkin();\r\n\r\n\t\t\t//this._elm.style.pointerEvents = \"none\";\r\n\t\t\t//this._elm.style.color = Editor.theme.textColor;\r\n\t\t\t//this._elm.style.color = skin.textColor;\r\n\t\t\t//this._elm.style.display = \"flex\";\r\n\r\n\t\t\t/** \r\n\t\t\t * Span DOM element used to represent the text.\r\n\t\t\t *\r\n\t\t\t * @attribute span\r\n\t\t\t * @type {DOM}\r\n\t\t \t */\r\n\t\t\tthis.span = document.createElement(\"span\");\r\n\t\t\tthis.span.style.overflow = \"hidden\";\r\n\t\t\tthis._elm.appendChild(this.span);\r\n\r\n\t\t\t//Text\r\n\t\t\tthis.text = document.createTextNode(\"\");\r\n\t\t\tthis.span.appendChild(this.text);\r\n\r\n\t\t\t/**\r\n\t\t\t * If set to true the text container will automatically fit the text size.\r\n\t\t\t *\r\n\t\t\t * @attribute fitContent\r\n\t\t\t * @type {Boolean}\r\n\t\t\t */\r\n\t\t\tthis.fitContent = false;\r\n\r\n\t\t\tthis.allowWordBreak(false);\r\n\t\t\tthis.setVerticalAlignment(TextMixin.CENTER);\r\n\t\t\tthis.setAlignment(TextMixin.CENTER);\t\t\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set font to use for the text.\r\n\t\t * \r\n\t\t * @method setFont\r\n\t\t * @param {String} fontFamily Font family.\r\n\t\t * @param {Number} fontWeight Font weigth, sets how thick or thin characters in text should be displayed.\r\n\t\t * @param {String} fontStyle Font style, specifies the font style for a text.\r\n\t\t */\r\n\t\tsetFont : function(fontFamily, fontWeight, fontStyle) {\r\n\t\t\tthis.span.style.fontFamily = fontFamily;\r\n\r\n\t\t\tif(fontWeight !== undefined) {\r\n\t\t\t\tthis.span.style.fontWeight = fontWeight;\r\n\t\t\t}\r\n\r\n\t\t\tif(fontStyle !== undefined) {\r\n\t\t\t\tthis.span.style.fontStyle = fontStyle;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Enable of disable word breaking.\r\n\t\t *\r\n\t\t * @method allowWordBreak\r\n\t\t * @param {Boolean} line If true words can be breaked.\r\n\t\t */\r\n\t\tallowWordBreak : function(value) {\r\n\t\t\tif(value === true) {\r\n\t\t\t\tthis.span.style.whiteSpace = \"normal\";\r\n\t\t\t\tthis.span.style.wordBreak = \"break-word\";\r\n\t\t\t} else \t{\r\n\t\t\t\tthis.span.style.whiteSpace = \"pre\";\r\n\t\t\t\tthis.span.style.wordBreak = \"normal\";\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set text.\r\n\t\t *\r\n\t\t * @method setText\r\n\t\t * @param {String} text Text. \r\n\t\t */\r\n\t\tsetText : function(text){\r\n\t\t\tthis.text.data = text;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set text border.\r\n\t\t *\r\n\t\t * @method setTextBorder\r\n\t\t * @param {Number} size Border size in pixels.\r\n\t\t * @param {String} color CSS Color. \r\n\t\t */\r\n\t\tsetTextBorder : function(size, color) {\r\n\t\t\tthis.span.style.textShadow = \"-\" + size + \"px 0 \" + color + \", 0 \" + size + \"px \" + color + \", \" + size + \"px 0 \" + color + \", 0 -\" + size + \"px \" + color;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set Text size, in pixels.\r\n\t\t * \r\n\t\t * @method setTextSize\r\n\t\t * @param {Number} size Size in pixel for this text element.\r\n\t\t */\r\n\t\tsetTextSize : function(size) {\r\n\t\t\tthis._elm.style.fontSize = size + \"px\";\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set text color.\r\n\t\t * \r\n\t\t * @method setTextColor\r\n\t\t * @param {String} color Color code.\r\n\t\t */\r\n\t\tsetTextColor : function(color) {\r\n\t\t\tthis.span.style.color = color;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set text overflow handling\r\n\t\t *\r\n\t\t * @method setOverflow\r\n\t\t * @param {Number} overflow\r\n\t\t */\r\n\t\tsetOverflow : function(overflow) {\r\n\t\t\tif(overflow === TextMixin.ELLIPSIS) {\r\n\t\t\t\tthis.span.style.whiteSpace = \"nowrap\";\r\n\t\t\t\tthis.span.style.textOverflow = \"ellipsis\";\r\n\t\t\t} else \t{\r\n\t\t\t\tthis.span.style.whiteSpace = \"pre\";\r\n\t\t\t\tthis.span.style.textOverflow = \"clip\";\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set text horizontal alignment.\r\n\t\t *  - TextMixin.CENTER\r\n\t\t *  - TextMixin.LEFT\r\n\t\t *  - TextMixin.RIGHT\r\n\t\t * \r\n\t\t * @method setAlignment\r\n\t\t * @param {Number} align Alingment mode.\r\n\t\t */\r\n\t\tsetAlignment : function(align) \t{\r\n\t\t\tif(align === TextMixin.CENTER) {\r\n\t\t\t\tthis._elm.style.justifyContent = \"center\";\r\n\t\t\t\tthis._elm.style.textAlign = \"center\";\r\n\t\t\t} else if(align === TextMixin.LEFT) {\r\n\t\t\t\tthis._elm.style.justifyContent = \"flex-start\";\r\n\t\t\t\tthis._elm.style.textAlign = \"left\";\r\n\t\t\t} else if(align === TextMixin.RIGHT) {\r\n\t\t\t\tthis._elm.style.justifyContent = \"flex-end\";\r\n\t\t\t\tthis._elm.style.textAlign = \"right\";\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set text vertical alignment.\r\n\t\t *  - TextMixin.CENTER\r\n\t\t *  - TextMixin.TOP\r\n\t\t *  - TextMixin.BOTTOM\r\n\t\t * \r\n\t\t * @method setVerticalAlignment\r\n\t\t * @param {Number} align Alingment mode.\r\n\t\t */\r\n\t\tsetVerticalAlignment : function(align) {\r\n\t\t\tif(align === TextMixin.CENTER) {\r\n\t\t\t\tthis._elm.style.alignItems = \"center\";\r\n\t\t\t} else if(align === TextMixin.TOP) {\r\n\t\t \t\tthis._elm.style.alignItems = \"flex-start\";\r\n\t\t\t} else if(align === TextMixin.BOTTOM) {\r\n\t\t\t\tthis._elm.style.alignItems = \"flex-end\";\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get size of the text inside of this component in px.\r\n\t\t * \r\n\t\t * @method measure\r\n\t\t * @return {Vector2} A vector with the size of the text. \r\n\t\t */\r\n\t\tmeasure : function() \t{\r\n\t\t \treturn new Vector2(this.span.offsetWidth, this.span.offsetHeight);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set text internal margin in pixels.\r\n\t\t * \r\n\t\t * @method setMargin\r\n\t\t * @param {Number} margin Margin size in pixels.\r\n\t\t */\r\n\t\tsetMargin : function(margin) {\r\n\t\t\tthis.span.style.margin = margin + \"px\";\r\n\t\t},\r\n\r\n\t\tupdateSize : function() {\r\n\t\t\tif(this.fitContent) { \r\n\t\t\t\tthis.size.x = this.span.clientWidth;\r\n\t\t\t\tthis.size.y = this.span.clientHeight;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tWidget.prototype.updateSize.call(this);\r\n\t\t},\r\n\r\n\t\tupdateVisibility : function() {\r\n\t\t\tthis._elm.style.display = this.visible ? \"flex\" : \"none\";\r\n\t\t},\r\n\r\n\t\tCENTER : 0,\r\n\t\tLEFT : 1,\r\n\t    RIGHT : 2,\r\n\t    TOP : 3,\r\n\t    BOTTOM : 4,\r\n\r\n\t    CLIP : 10,\r\n\t    ELLIPSIS : 11\r\n\r\n\t};\r\n\r\n\r\n\treturn TextMixin;\r\n});\ndefine('skylark-widgets-base/TextPane',[\r\n  \"./base\",\r\n  \"./Widget\",\r\n  \"./mixins/TextMixin\"\r\n],function(\r\n\tbase,\r\n\tWidget,\r\n\tTextMixin\r\n){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Text element without background.\r\n\t * \r\n\t * @class Text\r\n\t * @extends {Element}\r\n\t * @param {Element} parent Parent element.\r\n\t */\r\n\r\n\tvar TextPane = Widget.inherit({\r\n\r\n\t\t_construct : function (parent) {\r\n\t\t\tWidget.prototype._construct.call(this, parent,\"div\");\r\n\r\n\t\t\tvar skin = this.getSkin();\r\n\r\n\t\t\tthis._elm.style.pointerEvents = \"none\";\r\n\t\t\tthis._elm.style.color = skin.textColor;\r\n\t\t\tthis._elm.style.display = \"flex\";\r\n\t\t\t\r\n\t\t\t/*\r\n\t\t\t\t * \r\n\t\t\t\t * Span DOM element used to represent the text.\r\n\t\t\t\t *\r\n\t\t\t\t * @attribute span\r\n\t\t\t\t * @type {DOM}\r\n\t\t\t \t \r\n\t\t\t\tthis.span = document.createElement(\"span\");\r\n\t\t\t\tthis.span.style.overflow = \"hidden\";\r\n\t\t\t\tthis.element.appendChild(this.span);\r\n\r\n\t\t\t\t//Text\r\n\t\t\t\tthis.text = document.createTextNode(\"\");\r\n\t\t\t\tthis.span.appendChild(this.text);\r\n\r\n\t\t\t\t**\r\n\t\t\t\t * If set to true the text container will automatically fit the text size.\r\n\t\t\t\t *\r\n\t\t\t\t * @attribute fitContent\r\n\t\t\t\t * @type {Boolean}\r\n\t\t\t\t *\r\n\t\t\t\tthis.fitContent = false;\r\n\r\n\t\t\t\tthis.allowWordBreak(false);\r\n\t\t\t\tthis.setVerticalAlignment(Text.CENTER);\r\n\t\t\t\tthis.setAlignment(Text.CENTER);\r\n\t\t\t*/\r\n\r\n\t\t\tthis._buildText();\r\n\r\n\r\n\t\t},\r\n\t\t...TextMixin\r\n\t});\r\n\t\r\n\tTextPane.CENTER = 0;\r\n\tTextPane.LEFT = 1;\r\n\tTextPane.RIGHT = 2;\r\n\tTextPane.TOP = 3;\r\n\tTextPane.BOTTOM = 4;\r\n\r\n\tTextPane.CLIP = 10;\r\n\tTextPane.ELLIPSIS = 11;\r\n\r\n\treturn base.TextPane = TextPane;\r\n});\ndefine('skylark-widgets-base/SubmitForm',[\n\t\"./base\",\n\t\"./Widget\"\n],function(base,Widget){\n\t\"use strict\";\n\n\t/**\n\t * DOM form element.\n\t * \n\t * This element should be used to encapsulate input elements that require autocompletion.\n\t * \n\t * @class Form\n\t * @extends {Widget}\n\t * @param {Widget} parent Parent element.\n\t */\n\tvar SubmitForm = Widget.inherit({\n\t\t\"_construct\" : function(parent)\n\t\t{\n\t\t\tWidget.prototype._construct.call(this, parent, \"form\");\n\n\t\t\tthis._elm.autocomplete = true;\n\t\t\tthis._elm.noValidate = true;\n\t\t\tthis._elm.action = \"javascript:void(0)\";\n\t\t\tthis._elm.addEventListener(\"submit\", function(event)\n\t\t\t{\n\t\t\t\tevent.preventDefault()\n\t\t\t\treturn false;\n\t\t\t});\n\t\t},\n\n\n\t\t/**\n\t\t * Simulate the form submission.\n\t\t * \n\t\t * Should be called when sending data to the server to trigger the browser autocomplete system.\n\t\t * \n\t\t * Some form implementation might actually implement submission login under this method.\n\t\t *\n\t\t * @method submit\n\t\t */\n\t\tsubmit : function()\n\t\t{\n\t\t\tthis._elm.submit();\n\t\t}\n\n\t});\n\n\treturn base.SubmitForm = SubmitForm;\n});\n\ndefine('skylark-widgets-base/actions/ActionManager',[\r\n\t\"skylark-langx/Evented\",\r\n\t\"../base\"\r\n], function(Evented,base){\r\n\r\n\tvar ActionManager = Evented.inherit({\r\n\t\t\"klassName\"\t\t:\t\"ActionManager\",\r\n\r\n\r\n\t\taddAction : function(category,name,fn,options) {\r\n\r\n\t\t},\r\n\r\n\t\texecuteAction : function() {\r\n\r\n\t\t},\r\n\r\n\t\tremoveAction : function(category,name) {\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn base.actions.ActionManager = ActionManager;\r\n\r\n});\r\n\r\n\ndefine('skylark-widgets-base/actions/Action',[\r\n\t\"skylark-langx/objects\",\r\n\t\"skylark-langx/Evented\",\r\n\t\"skylark-data-collection/HashMap\",\r\n\t\"../base\",\r\n\t\"./ActionManager\"\r\n], function(objects,Evented, HashMap, base, ActiionManager){\r\n\r\n\tvar Action = Evented.inherit({\r\n\t\t\"klassName\" : \"Action\",\r\n\r\n\t\t\"name\"  : \"\",\r\n\r\n\t\t\"category\" : \"\",\r\n\r\n\t\t\"text\" : \"\",\r\n\r\n\t\t\"tooltip\" : \"\",\r\n\r\n\t\t\"icon\" : \"\",\r\n\r\n\t\t\"shortcut\" : \"\",\r\n\r\n\t\t\"state\"  : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn  this._state || (this._state = new HashMap({\r\n\t\t\t\t\tchecked : false,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_construct : function(options) {\r\n\t\t\tif (options) {\r\n\t\t\t\tobjects.mixin(this,options);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_init : function() {\r\n\r\n\t\t},\r\n\r\n\t    /**\r\n\t     * Executes the command. Additional arguments are passed to the executing function\r\n\t     *\r\n\t     * @return {$.Promise} a  promise that will be resolved when the command completes.\r\n\t     */\r\n\t\texecute: function(params){\r\n\t\t\tif (this._execute) {\r\n\t\t\t\tthis._execute(params);\r\n\t\t\t}\r\n\t\t\tthis.trigger(\"executed\",{\r\n\t\t\t\tparams :params\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t});\r\n\t\r\n\treturn base.actions.Action = Action;\r\n});\r\n\r\n\r\n\ndefine('skylark-widgets-base/panels/Panel',[\r\n\t\"../base\",\r\n\t\"../Widget\"\r\n],function(base,Widget){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * DOM division element.\r\n\t * \r\n\t * @class Division\r\n\t * @extends {Widget}\r\n\t * @param {Widget} parent Parent element.\r\n\t */\r\n\tvar Panel = Widget.inherit({\r\n\t\t\"_construct\" : function (parent) {\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"div\");\r\n\r\n\t\t\t//this._elm.style.overflow = \"visible\";\r\n\t\t},\r\n\r\n\t\t_setupChild : function(child) {\r\n        \tchild.element.style.position = \"absolute\";\r\n        \t//child.element.style.overflow = \"hidden\";\t\t\t\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\treturn base.panels.Panel = Panel;\r\n});\ndefine('skylark-widgets-base/panels/DualContainer',[\r\n\t\"../base\",\r\n\t\"./Panel\",\r\n],function( base, Panel){\r\n\t\"use strict\";\r\n\r\n\tvar DualContainer = Panel.inherit({\r\n\t\t\"klassName\" : \"DualContainer\",\r\n\r\n\t\t\"_construct\" : function (parent) {\r\n\t\t\tPanel.prototype._construct.call(this, parent);\r\n\r\n\t\t\tvar skin = this.getSkin();\r\n\r\n\t\t\tthis._elm.style.overflow = \"hidden\";\r\n\t\t\t//this._elm.style.backgroundColor = Editor.theme.panelColor;\r\n\t\t\tthis._elm.style.backgroundColor = skin.panelColor;\r\n\r\n\t\t\t//Container A\r\n\t\t\tthis._elmA = null\r\n\r\n\t\t\t//Container B\r\n\t\t\tthis._elmB = null\r\n\r\n\t\t\t//Resize tab\r\n\t\t\tthis.resizeTab = document.createElement(\"div\");\r\n\t\t\tthis.resizeTab.style.position = \"absolute\";\r\n\t\t\tthis.resizeTab.style.cursor = \"e-resize\";\r\n\r\n\r\n\t\t\t//this.resizeTab.style.backgroundColor = Editor.theme.resizeTabColor;\r\n\t\t\tthis.resizeTab.style.backgroundColor = skin.resizeTabColor;\r\n\t\t\tthis._elm.appendChild(this.resizeTab);\r\n\r\n\t\t\t//Resize Tab\r\n\t\t\tthis.tabPosition = 0.5;\r\n\t\t\tthis.tabPositionMax = 0.95;\r\n\t\t\tthis.tabPositionMin = 0.05;\r\n\t\t\tthis.tabSize = 5;\r\n\t\t\tthis.orientation = DualContainer.HORIZONTAL;\r\n\r\n\t\t\tvar self = this;\r\n\r\n\t\t\tfunction resizing(event) {\r\n\t\t\t\tif(self.orientation === DualContainer.HORIZONTAL)\r\n\t\t\t\t{\t\r\n\t\t\t\t\tself.tabPosition += event.movementX / self.size.x;\r\n\t\t\t\t}\r\n\t\t\t\telse if(self.orientation === DualContainer.VERTICAL)\r\n\t\t\t\t{\r\n\t\t\t\t\tself.tabPosition += event.movementY / self.size.y;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Limit tab position\r\n\t\t\t\tif(self.tabPosition > self.tabPositionMax)\r\n\t\t\t\t{\r\n\t\t\t\t\tself.tabPosition = self.tabPositionMax;\r\n\t\t\t\t}\r\n\t\t\t\telse if(self.tabPosition < self.tabPositionMin)\r\n\t\t\t\t{\r\n\t\t\t\t\tself.tabPosition = self.tabPositionMin;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tself.updateInterface();\r\n\r\n\t\t\t}\r\n\t\t\t//Tab mouse down\r\n\t\t\tthis.resizeTab.onmousedown = function(event)\r\n\t\t\t{\r\n\t\t\t//\tself.manager.create();\r\n\t\t\t\tself.$(window).on(\"mousemove\",resizing);\r\n\t\t\t\tself.$(window).one(\"mouseup\",function(){\r\n\t\t\t\t\tself.$(window).off(\"mousemove\",resizing);\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\t//Tab resize event manager\r\n\t\t\t//this.manager = new EventManager();\r\n\r\n\t\t\t//this.listenTo(this.$(window), \"mousemove\", function(event){\r\n\t\t\t//});\r\n\r\n\t\t\t//this.connect(window, \"mouseup\", function(event)\r\n\t\t\t//{\r\n\t\t\t//\tself.manager.destroy();\r\n\t\t\t//});\r\n\t\t},\r\n\r\n\t\tattach : function(element) \t{\r\n\t\t\tif(this._elmA === null)\r\n\t\t\t{\r\n\t\t\t\tthis.attachA(element);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this._elmB === null) {\r\n\t\t\t\tthis.attachB(element);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconsole.warn(\"nunuStudio: Cannot attach more elements.\");\r\n\t\t},\r\n\r\n\t\tattachA : function(element) {\r\n\t\t\tthis._elmA = element;\r\n\t\t\tthis._elmA.setParent(this);\r\n\t\t},\r\n\r\n\t\tattachB : function(element) {\r\n\t\t\tthis._elmB = element;\r\n\t\t\tthis._elmB.setParent(this);\r\n\t\t},\r\n\r\n\t\tupdateSize : function() {\r\n\t\t\tPanel.prototype.updateSize.call(this);\r\n\r\n\t\t\tif(this._elmA === null || this._elmB === null) \t{\r\n\t\t\t\tconsole.log(\"nunuStudio: Dual container elements are null\", this, this._elmA, this._elmB);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.orientation === DualContainer.HORIZONTAL) {\r\n\t\t\t\tvar tabPositionAbs = this.tabPosition * this.size.x;\r\n\r\n\t\t\t\tthis._elmA.position.set(0, 0);\r\n\t\t\t\tthis._elmA.size.set(tabPositionAbs, this.size.y);\r\n\t\t\t\tthis._elmA.updateInterface();\r\n\r\n\t\t\t\tthis._elmB.size.set(this.size.x - tabPositionAbs - this.tabSize, this.size.y);\r\n\t\t\t\tthis._elmB.position.set(this._elmA.size.x + this.tabSize, 0);\r\n\t\t\t\tthis._elmB.updateInterface();\r\n\r\n\t\t\t\tthis.resizeTab.style.cursor = \"e-resize\";\r\n\t\t\t\tthis.resizeTab.style.top = \"0px\";\r\n\t\t\t\tthis.resizeTab.style.left = this._elmA.size.x + \"px\";\r\n\t\t\t\tthis.resizeTab.style.width = this.tabSize + \"px\";\r\n\t\t\t\tthis.resizeTab.style.height = this.size.y + \"px\";\r\n\t\t\t} else if(this.orientation === DualContainer.VERTICAL) \t{\r\n\t\t\t\tvar tabPositionAbs = this.tabPosition * this.size.y;\r\n\t\t\t\t\r\n\t\t\t\tthis._elmA.position.set(0, 0);\r\n\t\t\t\tthis._elmA.size.set(this.size.x, tabPositionAbs);\r\n\t\t\t\tthis._elmA.updateInterface();\r\n\t\t\t\t\r\n\t\t\t\tthis._elmB.size.set(this.size.x, this.size.y - tabPositionAbs - this.tabSize);\r\n\t\t\t\tthis._elmB.position.set(0, this._elmA.size.y + this.tabSize);\r\n\t\t\t\tthis._elmB.updateInterface();\r\n\r\n\t\t\t\tthis.resizeTab.style.cursor = \"n-resize\";\r\n\t\t\t\tthis.resizeTab.style.top = this._elmA.size.y + \"px\";\r\n\t\t\t\tthis.resizeTab.style.left = \"0px\";\r\n\t\t\t\tthis.resizeTab.style.width = this.size.x + \"px\";\r\n\t\t\t\tthis.resizeTab.style.height = this.tabSize + \"px\";\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\telementA : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._elmA;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\telementB : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._elmB;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n\tDualContainer.HORIZONTAL = 0;\r\n\tDualContainer.VERTICAL = 1;\r\n\r\n\r\n\treturn base.panels.DualContainer = DualContainer;\r\n});\ndefine('skylark-widgets-base/panels/DualPanel',[\r\n\t\"../base\",\r\n\t\"./Panel\"\r\n],function( base, Panel){\r\n\t\"use strict\";\r\n\r\n\r\n\tvar DualPanel = Panel.inherit({\r\n\t\t\"klassName\" : \"DualPanel\",\r\n\r\n\t\t\"_construct\" : function (parent) {\r\n\t\t\tPanel.prototype._construct.call(this, parent);\r\n\r\n\t\t\tvar skin = this.getSkin();\r\n\r\n\t\t\tthis._elm.style.overflow = \"hidden\";\r\n\t\t\t//this._elm.style.backgroundColor = Editor.theme.panelColor;\t\t\r\n\t\t\tthis._elm.style.backgroundColor = skin.panelColor;\r\n\r\n\t\t\t//Division A\r\n\t\t\tthis.divA = new Panel(this);\r\n\t\t\t//this.divA.element.style.backgroundColor = Editor.theme.panelColor;\r\n\t\t\tthis.divA.element.style.backgroundColor = skin.panelColor;\r\n\r\n\t\t\t//Division B\r\n\t\t\tthis.divB = new Panel(this);\r\n\t\t\t//this.divB.element.style.backgroundColor = Editor.theme.panelColor;\r\n\t\t\tthis.divB.element.style.backgroundColor = skin.panelColor;\r\n\t\t\t\r\n\t\t\t//Resize tab\r\n\t\t\tthis.resizeTab = document.createWidget(\"div\");\r\n\t\t\tthis.resizeTab.style.position = \"absolute\";\r\n\t\t\tthis.resizeTab.style.cursor = \"e-resize\";\r\n\t\t\t//this.resizeTab.style.backgroundColor = Editor.theme.resizeTabColor;\r\n\t\t\tthis.resizeTab.style.backgroundColor = skin.resizeTabColor;\r\n\t\t\tthis._elm.appendChild(this.resizeTab);\r\n\r\n\t\t\t//Resize Tab\r\n\t\t\tthis.tabPosition = 0.5;\r\n\t\t\tthis.tabPositionMax = 1;\r\n\t\t\tthis.tabPositionMin = 0;\r\n\t\t\tthis.tabSize = 5;\r\n\t\t\tthis.orientation = DualPanel.HORIZONTAL;\r\n\r\n\t\t\tvar self = this;\r\n\r\n\t\t\t//Tab mouse down\r\n\t\t\t//this.resizeTab.onmousedown = function(event){\r\n\t\t\t//\tself.manager.create();\r\n\t\t\t//};\r\n\r\n\t\t\t//Tab resize event manager\r\n\t\t\t//this.manager = new EventManager();\r\n\t\t\tthis.connect(window, \"mousemove\", function(event){\r\n\t\t\t\tif(self.orientation === DualPanel.HORIZONTAL){\t\r\n\t\t\t\t\tself.tabPosition += event.movementX / self.size.x;\r\n\t\t\t\t} else if(self.orientation === DualPanel.VERTICAL) {\r\n\t\t\t\t\tself.tabPosition += event.movementY / self.size.y;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Limit tab position\r\n\t\t\t\tif(self.tabPosition > self.tabPositionMax) {\r\n\t\t\t\t\tself.tabPosition = self.tabPositionMax;\r\n\t\t\t\t} else if(self.tabPosition < self.tabPositionMin) {\r\n\t\t\t\t\tself.tabPosition = self.tabPositionMin;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tself.updateInterface();\r\n\t\t\t\tself.onResize();\r\n\t\t\t});\r\n\r\n\t\t\tthis.connect(window, \"mouseup\", function(event) {\r\n\t\t\t\tself.manager.destroy();\r\n\t\t\t});\r\n\r\n\t\t\t//onResize callback\r\n\t\t\tthis.onResize = function() \t{\r\n\t\t\t\tEditor.gui.updateInterface();\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tsetOnResize : function(callback) {\r\n\t\t\tthis.onResize = callback;\r\n\t\t},\r\n\r\n\t\tupdateSize : function() {\r\n\t\t\tWidget.prototype.updateSize.call(this);\r\n\r\n\t\t\tif(this.orientation === DualPanel.HORIZONTAL) {\r\n\t\t\t\tvar tabPositionAbs = this.tabPosition * this.size.x;\r\n\t\t\t\t\r\n\t\t\t\tthis.divA.position.set(0, 0);\r\n\t\t\t\tthis.divA.size.set(tabPositionAbs, this.size.y);\r\n\t\t\t\tthis.divA.updateInterface();\r\n\r\n\t\t\t\tthis.divB.size.set(this.size.x - tabPositionAbs - this.tabSize, this.size.y);\r\n\t\t\t\tthis.divB.position.set(this.divA.size.x + this.tabSize, 0);\r\n\t\t\t\tthis.divB.updateInterface();\r\n\r\n\t\t\t\tthis.resizeTab.style.cursor = \"e-resize\";\r\n\t\t\t\tthis.resizeTab.style.top = \"0px\";\r\n\t\t\t\tthis.resizeTab.style.left = this.divA.size.x + \"px\";\r\n\t\t\t\tthis.resizeTab.style.width = this.tabSize + \"px\";\r\n\t\t\t\tthis.resizeTab.style.height = this.size.y + \"px\";\r\n\t\t\t} else if(this.orientation === DualPanel.VERTICAL) {\r\n\t\t\t\tvar tabPositionAbs = this.tabPosition * this.size.y;\r\n\r\n\t\t\t\tthis.divA.position.set(0, 0);\r\n\t\t\t\tthis.divA.size.set(this.size.x, tabPositionAbs);\r\n\t\t\t\tthis.divA.updateInterface();\r\n\r\n\t\t\t\tthis.divB.size.set(this.size.x, this.size.y - tabPositionAbs - this.tabSize);\r\n\t\t\t\tthis.divB.position.set(0, this.divA.size.y + this.tabSize);\r\n\t\t\t\tthis.divB.updateInterface();\r\n\r\n\t\t\t\tthis.resizeTab.style.cursor = \"n-resize\";\r\n\t\t\t\tthis.resizeTab.style.top = this.divA.size.y + \"px\";\r\n\t\t\t\tthis.resizeTab.style.left = \"0px\";\r\n\t\t\t\tthis.resizeTab.style.width = this.size.x + \"px\";\r\n\t\t\t\tthis.resizeTab.style.height = this.tabSize + \"px\";\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\telementA : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._elmA;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\telementB : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._elmB;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\r\n\tDualPanel.HORIZONTAL = 0;\r\n\tDualPanel.VERTICAL = 1;\r\n\r\n\treturn base.panels.DualPanel = DualPanel;\r\n});\r\n\ndefine('skylark-widgets-base/panels/RowsPanel',[\n\t\"skylark-langx-numerics/Vector2\",\n\t\"../base\",\n\t\"../TextPane\",\n\t\"./Panel\"\n],function(\n\tVector2,\n\tbase,\n\tTextPane,\n\tPanel\n){\n\t\"use strict\";\n\n\t/**\n\t * Table form element automatically organizes element into a grid like form.\n\t * \n\t * @class TableForm\n\t * @extends {Element}\n\t * @param {Element} parent Parent element.\n\t */\n\t var RowsPanel = Panel.inherit({\n\t\t\"_construct\" : function (parent)\n\t\t{\n\t\t\tPanel.prototype._construct.call(this, parent);\n\n\t\t\t\n\t\t\t/**\n\t\t\t * Set if the form needs to be automatically resized.\n\t\t\t *\n\t\t\t * @property autoSize\n\t\t\t * @type {Boolean}\n\t\t\t */\n\t\t\tthis.autoSize = true;\n\n\t\t\t/**\n\t\t\t * Resize the last element of the rows to fit the size of the container.\n\t\t\t *\n\t\t\t * @method fitElements\n\t\t\t * @type {Boolean}\n\t\t\t */\n\t\t\tthis.fitElements = true;\n\n\t\t\t/**\n\t\t\t * Spacing between elements and rows.\n\t\t\t *\n\t\t\t * @property spacing\n\t\t\t * @type {Vector2}\n\t\t\t */\n\t\t\tthis.spacing = new Vector2(5, 5);\n\n\t\t\t/**\n\t\t\t * Default text width.\n\t\t\t *\n\t\t\t * @property defaultTextWidth\n\t\t\t * @type {Number}\n\t\t\t */\n\t\t\tthis.defaultTextWidth = 80;\n\n\t\t\t/**\n\t\t\t * Rows of this form table.\n\t\t\t *\n\t\t\t * @property rows\n\t\t\t * @type {Array}\n\t\t\t */\n\t\t\tthis.rows = [];\n\t\t\tthis.rows.push([]);\n\t\t},\n\n\n\t\t/**\n\t\t * Set if the form should be automatically resized, and ajust overflow value.\n\t\t *\n\t\t * @method setAutoSize\n\t\t * @param {Boolean} autoSize\n\t\t */\n\t\tsetAutoSize : function(autoSize)\n\t\t{\n\t\t\tthis.autoSize = autoSize;\n\t\t\tthis.element.style.overflow = autoSize ? \"visible\" : \"auto\";\n\t\t},\n\n\t\t/**\n\t\t * Add a element to form (in actual row).\n\t\t *\n\t\t * @method add\n\t\t */\n\t\tadd : function(element)\n\t\t{\n\t\t\tif(this.rows.length > 0)\n\t\t\t{\n\t\t\t\tthis.rows[this.rows.length - 1].push(element);\n\t\t\t\telement.setParent(this);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Create text element.\n\t\t *\n\t\t * @method addText\n\t\t */\n\t\taddText : function(text, fit)\n\t\t{\n\t\t\tvar element = new TextPane(this);\n\t\t\telement.setAlignment(TextPane.LEFT);\n\t\t\telement.setText(text);\n\t\t\telement.size.set(this.defaultTextWidth, 20);\n\t\t\t\n\t\t\tif(fit === true)\n\t\t\t{\n\t\t\t\telement.fitContent = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\telement.setOverflow(Text.ELLIPSIS);\n\t\t\t}\n\n\t\t\tthis.add(element);\n\n\t\t\treturn element;\n\t\t},\n\n\t\t/**\n\t\t * Create division.\n\t\t *\n\t\t * @method addDivision\n\t\t */\n\t\taddDivision : function(x, y)\n\t\t{\n\t\t\tvar division = new Panel(this);\n\t\t\tdivision.size.set(x, y);\n\t\t\tthis.add(division);\n\n\t\t\treturn division;\n\t\t},\n\n\t\t/**\n\t\t * Add new row to form.\n\t\t *\n\t\t * @method nextRow\n\t\t */\n\t\tnextRow : function()\n\t\t{\n\t\t\tthis.rows.push([]);\n\t\t},\n\n\t\t/**\n\t\t * Remove last row from form.\n\t\t *\n\t\t * @method removeLastRow\n\t\t */\n\t\tremoveLastRow : function()\n\t\t{\n\t\t\tif(this.rows.length > 0)\n\t\t\t{\n\t\t\t\tvar row = this.rows.pop();\n\n\t\t\t\tfor(var i = 0; i < row.length; i++)\n\t\t\t\t{\n\t\t\t\t\trow[i].destroy();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Clear all elements from form.\n\t\t *\n\t\t * @method removeAll\n\t\t */\n\t\tremoveAll : function()\n\t\t{\n\t\t\tfor(var i = 0; i < this.rows.length; i++)\n\t\t\t{\n\t\t\t\tfor(var j = 0; j < this.rows[i].length; j++)\n\t\t\t\t{\n\t\t\t\t\tthis.rows[i][j].destroy();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.rows = [];\n\t\t\tthis.rows.push([]);\n\t\t},\n\n\t\tupdateSize : function()\n\t\t{\n\t\t\tvar x = 0, y = 0;\n\t\t\tvar sizeX = 0;\n\n\t\t\tif(!this.autoSize)\n\t\t\t{\n\t\t\t\tx = this.spacing.x;\n\t\t\t\ty = this.spacing.y;\n\t\t\t}\n\n\t\t\tfor(var i = 0; i < this.rows.length; i++)\n\t\t\t{\n\t\t\t\tvar maxSizeY = 0;\n\n\t\t\t\tfor(var j = 0; j < this.rows[i].length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar element = this.rows[i][j];\n\t\t\t\t\t\n\t\t\t\t\tif(element.visible)\n\t\t\t\t\t{\n\t\t\t\t\t\t//Resize last element\n\t\t\t\t\t\tif(this.fitElements && j === this.rows[i].length - 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\telement.size.x = this.size.x - x - 15;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\telement.position.set(x, y);\n\t\t\t\t\t\telement.updateInterface();\n\n\t\t\t\t\t\t//Size tracker\n\t\t\t\t\t\tif(element.size.y > maxSizeY)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmaxSizeY = element.size.y;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tx += element.size.x + this.spacing.x;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t//Form size x\n\t\t\t\tif(sizeX < x)\n\t\t\t\t{\n\t\t\t\t\tsizeX = x;\n\t\t\t\t}\n\n\t\t\t\t//Update position tracker\n\t\t\t\tif(x !== 0)\n\t\t\t\t{\n\t\t\t\t\tx = this.autoSize ? 0 : this.spacing.x;\n\t\t\t\t\ty += maxSizeY + this.spacing.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(this.autoSize)\n\t\t\t{\n\t\t\t\tthis.size.set(sizeX, y);\n\t\t\t}\n\n\t\t\tPanel.prototype.updateSize.call(this);\n\t\t}\n\n\t });\n\n\n\treturn base.RowsPanel = RowsPanel;\n});\ndefine('skylark-widgets-base/dnd/DragBuffer',[\n],function(){\t\n\t\"use strict\";\n\n\t/**\n\t * The drag buffer is a global object used to store and get object being dragged.\n\t *\n\t * Objects are stored in an array and are indetified with a UUID.\n\t *\n\t * @static\n\t * @class DragBuffer\n\t */\n\tvar DragBuffer = {};\n\n\t/**\n\t * Object drag buffer, stores objects being dragged.\n\t *\n\t * @attribute buffer\n\t */\n\tDragBuffer.buffer = [];\n\n\t/** \n\t * Push elemento to drag buffer.\n\t *\n\t * Checks if element dont exist on drag buffer before inserting.\n\t *\n\t * @method push\n\t */\n\tDragBuffer.push = function(obj)\n\t{\n\t\tif(DragBuffer.buffer.indexOf(obj) === -1)\n\t\t{\n\t\t\tDragBuffer.buffer.push(obj);\n\t\t}\n\t};\n\n\t/** \n\t * Get element from drag buffer using its identifier.\n\t *\n\t * @method pop\n\t * @return {Object} Object indentfied by uuid, if not found return null.\n\t */\n\tDragBuffer.pop = function(uuid)\n\t{\n\t\tfor(var i = 0; i < DragBuffer.buffer.length; i++)\n\t\t{\n\t\t\tif(DragBuffer.buffer[i].uuid === uuid)\n\t\t\t{\n\t\t\t\tvar obj = DragBuffer.buffer[i];\n\t\t\t\tDragBuffer.buffer.splice(i, 1);\n\t\t\t\treturn obj;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\t/** \n\t * Get element from drag buffer without removing it.\n\t *\n\t * @method get\n\t * @return {Object} Object indentfied by uuid, if not found return null.\n\t */\n\tDragBuffer.get = function(uuid)\n\t{\n\t\tfor(var i = 0; i < DragBuffer.buffer.length; i++)\n\t\t{\n\t\t\tif(DragBuffer.buffer[i].uuid === uuid)\n\t\t\t{\n\t\t\t\treturn DragBuffer.buffer[i];\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn null;\n\t};\n\n\treturn DragBuffer;\n});\ndefine('skylark-widgets-base/skins/SkinDark',[\r\n\t\"./SkinManager\"\r\n],function(SkinManager){\t\r\n\t\"use strict\";\r\n\r\n\tfunction SkinDark() {\r\n\t\tthis.font = \"Arial\";\r\n\r\n\t\t//Color\r\n\t\tthis.barColor = \"#222222\";\r\n\t\tthis.sepColor = \"#292929\";\r\n\t\tthis.panelColor = \"#333333\";\r\n\t\tthis.resizeTabColor = \"#222222\";\r\n\t\tthis.boxColor = \"#444444\";\r\n\t\tthis.textColor = \"#FFFFFF\";\r\n\t\tthis.iconColor = \"#FFFFFF\";\r\n\r\n\t\t//Button\r\n\t\tthis.buttonColor = \"#222222\";\r\n\t\tthis.buttonOverColor = \"#555555\";\r\n\t\tthis.buttonLightColor = \"#333333\";\r\n\t\t\r\n\t\t//Audio player\r\n\t\tthis.audioTrack = \"#222222\";\r\n\t\tthis.audioScrubber = \"#FFFFFF\";\r\n\t\tthis.audioProgress = \"#555555\";\r\n\r\n\t\t//Body\r\n\t\tdocument.body.style.fontFamily = this.font;\r\n\t\tdocument.body.style.color = this.textColor;\r\n\t\tdocument.body.style.fontSize = \"12px\";\r\n\t}\r\n\r\n\r\n\tvar skin = new SkinDark();\r\n\r\n\tSkinManager.register(skin, \"dark\");\r\n\r\n\treturn skin;\r\n\r\n});\r\n\ndefine('skylark-widgets-base/main',[\r\n\t\"./base\",\r\n\t\"./Widget\",\r\n\t\"./CanvasPane\",\r\n\t\"./ImagePane\",\r\n\t\"./TextPane\",\r\n\t\"./SubmitForm\",\r\n\t\"./actions/Action\",\r\n\t\"./actions/ActionManager\",\r\n\t\"./panels/DualContainer\",\r\n    \"./panels/DualPanel\",\r\n    \"./panels/RowsPanel\",\r\n    \"./dnd/DragBuffer\",\r\n\t\"./skins/SkinManager\",\r\n\t\"./skins/SkinDark\"\r\n],function(base){\r\n\treturn base;\r\n});\ndefine('skylark-widgets-base', ['skylark-widgets-base/main'], function (main) { return main; });\n\n"]}