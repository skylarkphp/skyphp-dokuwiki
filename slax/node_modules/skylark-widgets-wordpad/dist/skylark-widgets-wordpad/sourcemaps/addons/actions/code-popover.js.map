{"version":3,"sources":["addons/actions/code-popover.js"],"names":["define","$","addons","Popover","inherit","render","k","lang","len","ref","_this","this","_tpl","_t","langs","editor","options","codeLanguages","name","value","el","addClass","append","selectEl","find","length","text","appendTo","on","e","selected","val","target","hasClass","removeClass","removeAttr","attr","trigger","active","refresh","show","args","arguments","Array","prototype","slice","call","apply"],"mappings":";;;;;;;AAAAA,QACE,qBACA,eACA,iBACA,SAASC,EAAEC,EAAOC,GAoHlB,OAlHmBA,EAAQC,SACxBC,OAAS,WACR,IAAaC,EAAGC,EAAMC,EAAKC,EA2EUC,EAPrC,IAnEAC,KAAKC,KAAO,2HAAsID,KAAKE,GAAG,kBAAqB,6CAC/KF,KAAKG,MAAQH,KAAKI,OAAOC,QAAQC,iBAE7BC,KAAM,OACNC,MAAO,SAEPD,KAAM,MACNC,MAAO,QAEPD,KAAM,KACNC,MAAO,OAEPD,KAAM,MACNC,MAAO,QAEPD,KAAM,SACNC,MAAO,WAEPD,KAAM,OACNC,MAAO,SAEPD,KAAM,OACNC,MAAO,SAEPD,KAAM,OACNC,MAAO,SAEPD,KAAM,eACNC,MAAO,iBAEPD,KAAM,WACNC,MAAO,SAEPD,KAAM,OACNC,MAAO,SAEPD,KAAM,OACNC,MAAO,SAEPD,KAAM,aACNC,MAAO,OAEPD,KAAM,WACNC,MAAO,aAEPD,KAAM,cACNC,MAAO,OAEPD,KAAM,MACNC,MAAO,QAEPD,KAAM,OACNC,MAAO,SAEPD,KAAM,SACNC,MAAO,WAEPD,KAAM,OACNC,MAAO,SAEPD,KAAM,MACNC,MAAO,QAGXR,KAAKS,GAAGC,SAAS,gBAAgBC,OAAOX,KAAKC,MAC7CD,KAAKY,SAAWZ,KAAKS,GAAGI,KAAK,gBAExBlB,EAAI,EAAGE,GADZC,EAAME,KAAKG,OACWW,OAAQnB,EAAIE,EAAKF,IACrCC,EAAOE,EAAIH,GACDL,EAAE,aACVyB,KAAMnB,EAAKW,KACXC,MAAOZ,EAAKY,QACXQ,SAAShB,KAAKY,UAiBnB,OAfAZ,KAAKY,SAASK,GAAG,UAAoBlB,EAclCC,KAbM,SAASkB,GACd,IAAIC,EAUJ,OATApB,EAAMH,KAAOG,EAAMa,SAASQ,MAC5BD,EAAWpB,EAAMsB,OAAOC,SAAS,YACjCvB,EAAMsB,OAAOE,cAAcC,WAAW,cAClB,IAAhBzB,EAAMH,MACRG,EAAMsB,OAAOI,KAAK,YAAa1B,EAAMH,MAEnCuB,GACFpB,EAAMsB,OAAOX,SAAS,YAEjBX,EAAMK,OAAOsB,QAAQ,mBAGzB1B,KAAKI,OAAOa,GAAG,eAAgB,SAAUlB,GAC9C,OAAO,SAASmB,GACd,GAAInB,EAAM4B,OACR,OAAO5B,EAAM6B,WAHmB,CAMnC5B,QAGL6B,KAAO,WACL,IAAIC,EAIJ,OAHAA,EAAO,GAAKC,UAAUjB,OAASkB,MAAMC,UAAUC,MAAMC,KAAKJ,UAAW,MACrEvC,EAAQyC,UAAUJ,KAAKO,MAAMpC,KAAM8B,GACnC9B,KAAKJ,KAAOI,KAAKqB,OAAOI,KAAK,aACZ,MAAbzB,KAAKJ,KACAI,KAAKY,SAASQ,IAAIpB,KAAKJ,MAEvBI,KAAKY,SAASQ,KAAK","file":"../../../addons/actions/code-popover.js","sourcesContent":["define([\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../popover\"\r\n],function($,addons,Popover){ \r\n  \r\n   var CodePopover = Popover.inherit({\r\n     render : function() {\r\n      var $option, k, lang, len, ref;\r\n      this._tpl = \"<div class=\\\"code-settings\\\">\\n  <div class=\\\"settings-field\\\">\\n    <select class=\\\"select-lang\\\">\\n      <option value=\\\"-1\\\">\" + (this._t('selectLanguage')) + \"</option>\\n    </select>\\n  </div>\\n</div>\";\r\n      this.langs = this.editor.options.codeLanguages || [\r\n        {\r\n          name: 'Bash',\r\n          value: 'bash'\r\n        }, {\r\n          name: 'C++',\r\n          value: 'c++'\r\n        }, {\r\n          name: 'C#',\r\n          value: 'cs'\r\n        }, {\r\n          name: 'CSS',\r\n          value: 'css'\r\n        }, {\r\n          name: 'Erlang',\r\n          value: 'erlang'\r\n        }, {\r\n          name: 'Less',\r\n          value: 'less'\r\n        }, {\r\n          name: 'Sass',\r\n          value: 'sass'\r\n        }, {\r\n          name: 'Diff',\r\n          value: 'diff'\r\n        }, {\r\n          name: 'CoffeeScript',\r\n          value: 'coffeescript'\r\n        }, {\r\n          name: 'HTML,XML',\r\n          value: 'html'\r\n        }, {\r\n          name: 'JSON',\r\n          value: 'json'\r\n        }, {\r\n          name: 'Java',\r\n          value: 'java'\r\n        }, {\r\n          name: 'JavaScript',\r\n          value: 'js'\r\n        }, {\r\n          name: 'Markdown',\r\n          value: 'markdown'\r\n        }, {\r\n          name: 'Objective C',\r\n          value: 'oc'\r\n        }, {\r\n          name: 'PHP',\r\n          value: 'php'\r\n        }, {\r\n          name: 'Perl',\r\n          value: 'parl'\r\n        }, {\r\n          name: 'Python',\r\n          value: 'python'\r\n        }, {\r\n          name: 'Ruby',\r\n          value: 'ruby'\r\n        }, {\r\n          name: 'SQL',\r\n          value: 'sql'\r\n        }\r\n      ];\r\n      this.el.addClass('code-popover').append(this._tpl);\r\n      this.selectEl = this.el.find('.select-lang');\r\n      ref = this.langs;\r\n      for (k = 0, len = ref.length; k < len; k++) {\r\n        lang = ref[k];\r\n        $option = $('<option/>', {\r\n          text: lang.name,\r\n          value: lang.value\r\n        }).appendTo(this.selectEl);\r\n      }\r\n      this.selectEl.on('change', (function(_this) {\r\n        return function(e) {\r\n          var selected;\r\n          _this.lang = _this.selectEl.val();\r\n          selected = _this.target.hasClass('selected');\r\n          _this.target.removeClass().removeAttr('data-lang');\r\n          if (_this.lang !== -1) {\r\n            _this.target.attr('data-lang', _this.lang);\r\n          }\r\n          if (selected) {\r\n            _this.target.addClass('selected');\r\n          }\r\n          return _this.editor.trigger('valuechanged');\r\n        };\r\n      })(this));\r\n      return this.editor.on('valuechanged', (function(_this) {\r\n        return function(e) {\r\n          if (_this.active) {\r\n            return _this.refresh();\r\n          }\r\n        };\r\n      })(this));\r\n    },\r\n\r\n    show : function() {\r\n      var args;\r\n      args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n      Popover.prototype.show.apply(this, args);\r\n      this.lang = this.target.attr('data-lang');\r\n      if (this.lang != null) {\r\n        return this.selectEl.val(this.lang);\r\n      } else {\r\n        return this.selectEl.val(-1);\r\n      }\r\n    }\r\n   });\r\n\r\n  return CodePopover;\r\n});"]}