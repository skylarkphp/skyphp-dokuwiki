{"version":3,"sources":["uploader.js"],"names":["define","langx","$","Xhr","id","Uploader","Evented","inherit","init","options","_this","this","mixin","files","queue","count","on","e","file","splice","inArray","length","connectionCount","upload","shift","uploading","window","originalEvent","returnValue","_t","prototype","url","params","fileKey","headers","generateId","f","i","key","len","isArray","FileList","is","attr","makeArray","obj","getFile","extend","push","trigger","_xhrUpload","fileObj","name","ref","ref1","File","Blob","fileName","size","fileSize","ext","split","pop","toLowerCase","formData","k","v","FormData","append","xhr","X-File-Name","encodeURIComponent","post","data","processData","contentType","progress","lengthComputable","loaded","total","then","result","catch","status","cancel","abort","destroy","off","document","i18n","zh-CN","leaveConfirm","locale"],"mappings":"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","file":"../uploader.js","sourcesContent":["define([\n  \"skylark-langx/langx\",\n  \"skylark-domx-query\",\n  \"skylark-net-http/xhr\"\n],function(langx,$,Xhr){ \n\n  var Uploader = langx.Evented.inherit({\n    init : function(options){\n      this.options = langx.mixin({},this.options,options);\n\n      this.files = [];\n      this.queue = [];\n      this.id = ++Uploader.count;\n      this.on('uploadcomplete', (function(_this) {\n        return function(e, file) {\n          _this.files.splice(langx.inArray(file, _this.files), 1);\n          if (_this.queue.length > 0 && _this.files.length < _this.options.connectionCount) {\n            return _this.upload(_this.queue.shift());\n          } else {\n            return _this.uploading = false;\n          }\n        };\n      })(this));\n      $(window).on('beforeunload.uploader-' + this.id, (function(_this) {\n        return function(e) {\n          if (!_this.uploading) {\n            return;\n          }\n          e.originalEvent.returnValue = _this._t('leaveConfirm');\n          return _this._t('leaveConfirm');  \n        };\n      })(this));\n    }\n\n  });\n\n  Uploader.count = 0;\n\n  Uploader.prototype.options = {\n    url: '',\n    params: null,\n    fileKey: 'upload_file',\n    connectionCount: 3,\n    headers: null\n  };\n\n\n\n  Uploader.prototype.generateId = (function() {\n    var id;\n    id = 0;\n    return function() {\n      return id += 1;\n    };\n  })();\n\n  Uploader.prototype.upload = function(file, options) {\n    var f, i, key, len;\n    if (options == null) {\n      options = {};\n    }\n    if (file == null) {\n      return;\n    }\n    if (langx.isArray(file) || file instanceof FileList) {\n      for (i = 0, len = file.length; i < len; i++) {\n        f = file[i];\n        this.upload(f, options);\n      }\n    } else if ($(file).is('input:file')) {\n      key = $(file).attr('name');\n      if (key) {\n        options.fileKey = key;\n      }\n      this.upload(langx.makeArray($(file)[0].files), options);\n    } else if (!file.id || !file.obj) {\n      file = this.getFile(file);\n    }\n    if (!(file && file.obj)) {\n      return;\n    }\n    langx.extend(file, options);\n    if (this.files.length >= this.options.connectionCount) {\n      this.queue.push(file);\n      return;\n    }\n    if (this.trigger('beforeupload', file) === false) {\n      return;\n    }\n    this.files.push(file);\n    this._xhrUpload(file);\n    return this.uploading = true;\n  };\n\n  Uploader.prototype.getFile = function(fileObj) {\n    var name, ref, ref1;\n    if (fileObj instanceof window.File || fileObj instanceof window.Blob) {\n      name = (ref = fileObj.fileName) != null ? ref : fileObj.name;\n    } else {\n      return null;\n    }\n    return {\n      id: this.generateId(),\n      url: this.options.url,\n      params: this.options.params,\n      fileKey: this.options.fileKey,\n      name: name,\n      headers : this.options.headers,\n      size: (ref1 = fileObj.fileSize) != null ? ref1 : fileObj.size,\n      ext: name ? name.split('.').pop().toLowerCase() : '',\n      obj: fileObj\n    };\n  };\n\n  Uploader.prototype._xhrUpload = function(file) {\n    var formData, k, ref, v;\n    formData = new FormData();\n    formData.append(file.fileKey, file.obj);\n    formData.append(\"original_filename\", file.name);\n    if (file.params) {\n      ref = file.params;\n      for (k in ref) {\n        v = ref[k];\n        formData.append(k, v);\n      }\n    }\n\n    //TODO\n    var xhr =  file.xhr = new Xhr({\n      url: this.options.url\n    });\n\n    var headers = {\n        'X-File-Name': encodeURIComponent(file.name)\n    };\n\n    if (file.headers) {\n      ref = file.headers;\n      for (k in ref) {\n        v = ref[k];\n        headers[k] =  v;\n      }\n    }\n\n    var _this = this;\n\n    xhr.post({\n      data: formData,\n      processData: false,\n      contentType: false,\n      headers: headers\n    }).progress(function(e){\n      if (!e.lengthComputable) {\n        return;\n      }\n      return _this.trigger('uploadprogress', file, e.loaded, e.total);\n    }).then(function(result){\n      _this.trigger('uploadsuccess', file, result);\n\n      _this.trigger('uploadcomplete');\n\n    }).catch(function(e,status){\n      _this.trigger('uploaderror', file,xhr);\n      _this.trigger('uploadcomplete');\n    });\n\n    return xhr;\n  };\n\n  Uploader.prototype.cancel = function(file) {\n    var f, i, len, ref;\n    if (!file.id) {\n      ref = this.files;\n      for (i = 0, len = ref.length; i < len; i++) {\n        f = ref[i];\n        if (f.id === file * 1) {\n          file = f;\n          break;\n        }\n      }\n    }\n    this.trigger('uploadcancel', [file]);\n    if (file.xhr) {\n      file.xhr.abort();\n    }\n    return file.xhr = null;\n  };\n\n\n  Uploader.prototype.destroy = function() {\n    var file, i, len, ref;\n    this.queue.length = 0;\n    ref = this.files;\n    for (i = 0, len = ref.length; i < len; i++) {\n      file = ref[i];\n      this.cancel(file);\n    }\n    $(window).off('.uploader-' + this.id);\n    return $(document).off('.uploader-' + this.id);\n  };\n\n  Uploader.i18n = {\n    'zh-CN': {\n      leaveConfirm: '正在上传文件，如果离开上传会自动取消'\n    }\n  };\n\n  Uploader.locale = 'zh-CN';\n\n  return  function(options) {\n    return new Uploader(options);\n  };\n\n});\n"]}